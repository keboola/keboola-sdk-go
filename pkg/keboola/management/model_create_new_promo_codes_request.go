/*
Manage API

The Keboola Connection Management API covers all tasks required for managing projects, as well as some super admin features for controlling and monitoring Keboola Connection.  ## Projects Management  * Create, modify and delete maintainers, organizations and projects  * Move projects between organizations  * Define project limits  * Provision Redshift and other Storage backends  * Access project management activity log  ## Projects Monitoring  * Monitoring of projects over organizations and maintainers  ## Super User Control and Monitoring  * UI release and deployment  * Components management  * Storage and Syrup jobs monitoring (will be provided by Syrup utilizing new tokens for authorization)  * Final project delete  * Workers start/shutdown, etc.  ## Authentication  The API supports authentication by a personal access token, which can be retrieved in [Account Settings](https://connection.keboola.com/admin/account/change-password) in Keboola Connection. An access token is tied to an administrator and its permissions are derived from their permissions. When the administrator is disabled or deleted, all their tokens become invalid too.  ## Token Types  There are the following types of tokens:  | Name | Tied to User | Token string is available only on create | Description  | | ------------- | ------------- | ------------------- | ----- | | user | Yes | Yes |Full access to maintainers, organizations and projects. Access is limited only to resources which are available for the token user.| | super | No | Yes | KBC management. Limited scopes can be specified `super_ui_deploy`, `super_monitoring`, ...  |

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package management

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CreateNewPromoCodesRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateNewPromoCodesRequest{}

// CreateNewPromoCodesRequest struct for CreateNewPromoCodesRequest
type CreateNewPromoCodesRequest struct {
	// Promo-code name
	Code string `json:"code"`
	// Promo-code expiration days
	ExpirationDays float32 `json:"expirationDays"`
	// Add to organization
	OrganizationId float32 `json:"organizationId"`
	// Use project template
	ProjectTemplateStringId string `json:"projectTemplateStringId"`
}

type _CreateNewPromoCodesRequest CreateNewPromoCodesRequest

// NewCreateNewPromoCodesRequest instantiates a new CreateNewPromoCodesRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateNewPromoCodesRequest(code string, expirationDays float32, organizationId float32, projectTemplateStringId string) *CreateNewPromoCodesRequest {
	this := CreateNewPromoCodesRequest{}
	this.Code = code
	this.ExpirationDays = expirationDays
	this.OrganizationId = organizationId
	this.ProjectTemplateStringId = projectTemplateStringId
	return &this
}

// NewCreateNewPromoCodesRequestWithDefaults instantiates a new CreateNewPromoCodesRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateNewPromoCodesRequestWithDefaults() *CreateNewPromoCodesRequest {
	this := CreateNewPromoCodesRequest{}
	return &this
}

// GetCode returns the Code field value
func (o *CreateNewPromoCodesRequest) GetCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Code
}

// GetCodeOk returns a tuple with the Code field value
// and a boolean to check if the value has been set.
func (o *CreateNewPromoCodesRequest) GetCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Code, true
}

// SetCode sets field value
func (o *CreateNewPromoCodesRequest) SetCode(v string) {
	o.Code = v
}

// GetExpirationDays returns the ExpirationDays field value
func (o *CreateNewPromoCodesRequest) GetExpirationDays() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.ExpirationDays
}

// GetExpirationDaysOk returns a tuple with the ExpirationDays field value
// and a boolean to check if the value has been set.
func (o *CreateNewPromoCodesRequest) GetExpirationDaysOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ExpirationDays, true
}

// SetExpirationDays sets field value
func (o *CreateNewPromoCodesRequest) SetExpirationDays(v float32) {
	o.ExpirationDays = v
}

// GetOrganizationId returns the OrganizationId field value
func (o *CreateNewPromoCodesRequest) GetOrganizationId() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.OrganizationId
}

// GetOrganizationIdOk returns a tuple with the OrganizationId field value
// and a boolean to check if the value has been set.
func (o *CreateNewPromoCodesRequest) GetOrganizationIdOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OrganizationId, true
}

// SetOrganizationId sets field value
func (o *CreateNewPromoCodesRequest) SetOrganizationId(v float32) {
	o.OrganizationId = v
}

// GetProjectTemplateStringId returns the ProjectTemplateStringId field value
func (o *CreateNewPromoCodesRequest) GetProjectTemplateStringId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ProjectTemplateStringId
}

// GetProjectTemplateStringIdOk returns a tuple with the ProjectTemplateStringId field value
// and a boolean to check if the value has been set.
func (o *CreateNewPromoCodesRequest) GetProjectTemplateStringIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProjectTemplateStringId, true
}

// SetProjectTemplateStringId sets field value
func (o *CreateNewPromoCodesRequest) SetProjectTemplateStringId(v string) {
	o.ProjectTemplateStringId = v
}

func (o CreateNewPromoCodesRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateNewPromoCodesRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["code"] = o.Code
	toSerialize["expirationDays"] = o.ExpirationDays
	toSerialize["organizationId"] = o.OrganizationId
	toSerialize["projectTemplateStringId"] = o.ProjectTemplateStringId
	return toSerialize, nil
}

func (o *CreateNewPromoCodesRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"code",
		"expirationDays",
		"organizationId",
		"projectTemplateStringId",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateNewPromoCodesRequest := _CreateNewPromoCodesRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateNewPromoCodesRequest)

	if err != nil {
		return err
	}

	*o = CreateNewPromoCodesRequest(varCreateNewPromoCodesRequest)

	return err
}

type NullableCreateNewPromoCodesRequest struct {
	value *CreateNewPromoCodesRequest
	isSet bool
}

func (v NullableCreateNewPromoCodesRequest) Get() *CreateNewPromoCodesRequest {
	return v.value
}

func (v *NullableCreateNewPromoCodesRequest) Set(val *CreateNewPromoCodesRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateNewPromoCodesRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateNewPromoCodesRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateNewPromoCodesRequest(val *CreateNewPromoCodesRequest) *NullableCreateNewPromoCodesRequest {
	return &NullableCreateNewPromoCodesRequest{value: val, isSet: true}
}

func (v NullableCreateNewPromoCodesRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateNewPromoCodesRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


