/*
Manage API

The Keboola Connection Management API covers all tasks required for managing projects, as well as some super admin features for controlling and monitoring Keboola Connection.  ## Projects Management  * Create, modify and delete maintainers, organizations and projects  * Move projects between organizations  * Define project limits  * Provision Redshift and other Storage backends  * Access project management activity log  ## Projects Monitoring  * Monitoring of projects over organizations and maintainers  ## Super User Control and Monitoring  * UI release and deployment  * Components management  * Storage and Syrup jobs monitoring (will be provided by Syrup utilizing new tokens for authorization)  * Final project delete  * Workers start/shutdown, etc.  ## Authentication  The API supports authentication by a personal access token, which can be retrieved in [Account Settings](https://connection.keboola.com/admin/account/change-password) in Keboola Connection. An access token is tied to an administrator and its permissions are derived from their permissions. When the administrator is disabled or deleted, all their tokens become invalid too.  ## Token Types  There are the following types of tokens:  | Name | Tied to User | Token string is available only on create | Description  | | ------------- | ------------- | ------------------- | ----- | | user | Yes | Yes |Full access to maintainers, organizations and projects. Access is limited only to resources which are available for the token user.| | super | No | Yes | KBC management. Limited scopes can be specified `super_ui_deploy`, `super_monitoring`, ...  |

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package management

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the RetrieveAllPromoCodes200ResponseInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RetrieveAllPromoCodes200ResponseInner{}

// RetrieveAllPromoCodes200ResponseInner struct for RetrieveAllPromoCodes200ResponseInner
type RetrieveAllPromoCodes200ResponseInner struct {
	Code string `json:"code"`
	Expires string `json:"expires"`
	Organization RetrieveAllPromoCodes200ResponseInnerOrganization `json:"organization"`
	ProjectTemplate RetrieveAllPromoCodes200ResponseInnerProjectTemplate `json:"projectTemplate"`
}

type _RetrieveAllPromoCodes200ResponseInner RetrieveAllPromoCodes200ResponseInner

// NewRetrieveAllPromoCodes200ResponseInner instantiates a new RetrieveAllPromoCodes200ResponseInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRetrieveAllPromoCodes200ResponseInner(code string, expires string, organization RetrieveAllPromoCodes200ResponseInnerOrganization, projectTemplate RetrieveAllPromoCodes200ResponseInnerProjectTemplate) *RetrieveAllPromoCodes200ResponseInner {
	this := RetrieveAllPromoCodes200ResponseInner{}
	this.Code = code
	this.Expires = expires
	this.Organization = organization
	this.ProjectTemplate = projectTemplate
	return &this
}

// NewRetrieveAllPromoCodes200ResponseInnerWithDefaults instantiates a new RetrieveAllPromoCodes200ResponseInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRetrieveAllPromoCodes200ResponseInnerWithDefaults() *RetrieveAllPromoCodes200ResponseInner {
	this := RetrieveAllPromoCodes200ResponseInner{}
	return &this
}

// GetCode returns the Code field value
func (o *RetrieveAllPromoCodes200ResponseInner) GetCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Code
}

// GetCodeOk returns a tuple with the Code field value
// and a boolean to check if the value has been set.
func (o *RetrieveAllPromoCodes200ResponseInner) GetCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Code, true
}

// SetCode sets field value
func (o *RetrieveAllPromoCodes200ResponseInner) SetCode(v string) {
	o.Code = v
}

// GetExpires returns the Expires field value
func (o *RetrieveAllPromoCodes200ResponseInner) GetExpires() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Expires
}

// GetExpiresOk returns a tuple with the Expires field value
// and a boolean to check if the value has been set.
func (o *RetrieveAllPromoCodes200ResponseInner) GetExpiresOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Expires, true
}

// SetExpires sets field value
func (o *RetrieveAllPromoCodes200ResponseInner) SetExpires(v string) {
	o.Expires = v
}

// GetOrganization returns the Organization field value
func (o *RetrieveAllPromoCodes200ResponseInner) GetOrganization() RetrieveAllPromoCodes200ResponseInnerOrganization {
	if o == nil {
		var ret RetrieveAllPromoCodes200ResponseInnerOrganization
		return ret
	}

	return o.Organization
}

// GetOrganizationOk returns a tuple with the Organization field value
// and a boolean to check if the value has been set.
func (o *RetrieveAllPromoCodes200ResponseInner) GetOrganizationOk() (*RetrieveAllPromoCodes200ResponseInnerOrganization, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Organization, true
}

// SetOrganization sets field value
func (o *RetrieveAllPromoCodes200ResponseInner) SetOrganization(v RetrieveAllPromoCodes200ResponseInnerOrganization) {
	o.Organization = v
}

// GetProjectTemplate returns the ProjectTemplate field value
func (o *RetrieveAllPromoCodes200ResponseInner) GetProjectTemplate() RetrieveAllPromoCodes200ResponseInnerProjectTemplate {
	if o == nil {
		var ret RetrieveAllPromoCodes200ResponseInnerProjectTemplate
		return ret
	}

	return o.ProjectTemplate
}

// GetProjectTemplateOk returns a tuple with the ProjectTemplate field value
// and a boolean to check if the value has been set.
func (o *RetrieveAllPromoCodes200ResponseInner) GetProjectTemplateOk() (*RetrieveAllPromoCodes200ResponseInnerProjectTemplate, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProjectTemplate, true
}

// SetProjectTemplate sets field value
func (o *RetrieveAllPromoCodes200ResponseInner) SetProjectTemplate(v RetrieveAllPromoCodes200ResponseInnerProjectTemplate) {
	o.ProjectTemplate = v
}

func (o RetrieveAllPromoCodes200ResponseInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RetrieveAllPromoCodes200ResponseInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["code"] = o.Code
	toSerialize["expires"] = o.Expires
	toSerialize["organization"] = o.Organization
	toSerialize["projectTemplate"] = o.ProjectTemplate
	return toSerialize, nil
}

func (o *RetrieveAllPromoCodes200ResponseInner) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"code",
		"expires",
		"organization",
		"projectTemplate",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varRetrieveAllPromoCodes200ResponseInner := _RetrieveAllPromoCodes200ResponseInner{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varRetrieveAllPromoCodes200ResponseInner)

	if err != nil {
		return err
	}

	*o = RetrieveAllPromoCodes200ResponseInner(varRetrieveAllPromoCodes200ResponseInner)

	return err
}

type NullableRetrieveAllPromoCodes200ResponseInner struct {
	value *RetrieveAllPromoCodes200ResponseInner
	isSet bool
}

func (v NullableRetrieveAllPromoCodes200ResponseInner) Get() *RetrieveAllPromoCodes200ResponseInner {
	return v.value
}

func (v *NullableRetrieveAllPromoCodes200ResponseInner) Set(val *RetrieveAllPromoCodes200ResponseInner) {
	v.value = val
	v.isSet = true
}

func (v NullableRetrieveAllPromoCodes200ResponseInner) IsSet() bool {
	return v.isSet
}

func (v *NullableRetrieveAllPromoCodes200ResponseInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRetrieveAllPromoCodes200ResponseInner(val *RetrieveAllPromoCodes200ResponseInner) *NullableRetrieveAllPromoCodes200ResponseInner {
	return &NullableRetrieveAllPromoCodes200ResponseInner{value: val, isSet: true}
}

func (v NullableRetrieveAllPromoCodes200ResponseInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRetrieveAllPromoCodes200ResponseInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


