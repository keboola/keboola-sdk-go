openapi: 3.0.3
info:
  description: |-
    The Keboola Connection Management API covers all tasks required for managing projects, as well as some super admin features
    for controlling and monitoring Keboola Connection.

    ## Projects Management

    * Create, modify and delete maintainers, organizations and projects

    * Move projects between organizations

    * Define project limits

    * Provision Redshift and other Storage backends

    * Access project management activity log

    ## Projects Monitoring

    * Monitoring of projects over organizations and maintainers

    ## Super User Control and Monitoring

    * UI release and deployment

    * Components management

    * Storage and Syrup jobs monitoring (will be provided by Syrup utilizing new tokens for authorization)

    * Final project delete

    * Workers start/shutdown, etc.

    ## Authentication

    The API supports authentication by a personal access token, which can be retrieved in [Account Settings](https://connection.keboola.com/admin/account/change-password) in Keboola Connection.
    An access token is tied to an administrator and its permissions are derived from their permissions. When the administrator is disabled or deleted, all their tokens become invalid too.

    ## Token Types

    There are the following types of tokens:

    | Name | Tied to User | Token string is available only on create | Description  |
    | ------------- | ------------- | ------------------- | ----- |
    | user | Yes | Yes |Full access to maintainers, organizations and projects. Access is limited only to resources which are available for the token user.|
    | super | No | Yes | KBC management. Limited scopes can be specified `super_ui_deploy`, `super_monitoring`, ...  |
  title: Manage API
  version: 1.0.0
servers:
- url: https://connection.keboola.com/
- url: https://connection.eu-central-1.keboola.com/
- url: https://connection.north-europe.azure.keboola.com/
security:
- ApiKeyAuth: []
tags:
- name: Token Verification
- name: Maintainers
- name: Organizations
- name: Projects
- description: Operations on deleted projects are allowed only for a super admin.
  name: Deleted Projects
- description: Users can be managed only by a super admin.
  name: Users
- name: My Account
- name: Promo codes
- name: SUPER - Features
- description: |-
    ## Management of file storages.

    File storage can be represented:
    1) By the Azure Blob Storage container with associated credentials of Storage account
    2) By the AWS S3 bucket with associated AWS IAM credentials with full access to this bucket and access to the AWS STS service. At least one file storage has to be registered for one supported region.

    Each type of storage has its own endpoint.
  name: SUPER - File Storage Management
- description: |-
    Storage backends power Keboola Connection buckets and the main tabular data storage.
    Currently supported backends are:

    - Redshift

    - Snowflake

    - Synapse

    - Exasol

    - Teradata
  name: SUPER - Storage Backends Management
- name: SUPER - Commands
- name: SUPER - UI Management
- description: |-
    This is an example of an API call returning all running worker processes and their state. This resource is accessible for tokens of the type `super` with `super_monitoring` scope.
    `Super` tokens can be created only by super admins.

    ## Authentication

    Syrup API will receive a management token in its header and will use it to call the `Verify token` API call.
    Details about the token will be returned, scopes associated to the token are present in the response.
    If the scope is `super_monitoring` and the token type is `super`, Syrup will return the workers in the response, otherwise `403` is returned.
  name: Syrup API Integration
paths:
  /manage/tokens/verify:
    get:
      description: ""
      operationId: Token Verification
      parameters: []
      responses:
        "200":
          content:
            application/json:
              example:
                id: 13702
                description: Example token
                created: 2021-06-28T22:27:28+0200
                lastUsed: 2022-06-13T22:29:03+0200
                expires: 2031-06-26T22:27:28+0200
                isSessionToken: false
                isExpired: false
                isDisabled: false
                scopes: []
                type: admin
                creator:
                  id: 7919
                  name: John Doe
                user:
                  id: 7919
                  name: John Doe
                  email: john.doe@keboola.com
                  mfaEnabled: true
                  features: []
                  canAccessLogs: true
                  isSuperAdmin: true
              schema:
                $ref: '#/components/schemas/Token_Verification_200_response'
          description: OK
      summary: Token Verification
      tags:
      - Token Verification
  /manage/maintainers:
    get:
      description: ""
      operationId: List maintainers
      parameters: []
      responses:
        "200":
          content: {}
          description: OK
      summary: List maintainers
      tags:
      - Maintainers
    post:
      description: Creates a new maintainer. The user associated with the token will
        become an admin of the maintainer.
      operationId: Create a maintainer
      parameters: []
      requestBody:
        content:
          application/json:
            example:
              name: Example
              defaultConnectionRedshiftId: "234"
              defaultConnectionSnowflakeId: "324"
              defaultConnectionSynapseId: "324"
              defaultConnectionExasolId: "324"
              defaultConnectionTeradataId: "324"
              defaultFileStorageId: "456"
              zendeskUrl: https://keboola.zendesk.com
            schema:
              $ref: '#/components/schemas/Create_a_maintainer_request'
      responses:
        "201":
          content:
            application/json:
              example:
                id: 123
                created: 2014-11-11T08:40:51.620Z
                url: /questions/1
                defaultConnectionMysqlId: 234
                defaultConnectionRedshiftId: 232
                defaultConnectionSnowflakeId: 242
                defaultConnectionSynapseId: 235
                defaultConnectionExasolId: 236
                defaultConnectionTeradataId: 236
                defaultFileStorageId: 456
                zendeskUrl: https://some.url.com
              schema:
                $ref: '#/components/schemas/MaintainerModel'
          description: Created
      summary: Create a maintainer
      tags:
      - Maintainers
  /manage/maintainers/{maintainer_id}:
    delete:
      description: ""
      operationId: Delete a maintainer
      parameters:
      - description: ""
        example: "1"
        explode: false
        in: path
        name: maintainer_id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
      summary: Delete a maintainer
      tags:
      - Maintainers
    get:
      description: ""
      operationId: Retrieve a maintainer
      parameters:
      - description: ""
        example: "1"
        explode: false
        in: path
        name: maintainer_id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                id: 123
                created: 2014-11-11T08:40:51.620Z
                url: /questions/1
                defaultConnectionMysqlId: 234
                defaultConnectionRedshiftId: 232
                defaultConnectionSnowflakeId: 242
                defaultConnectionSynapseId: 235
                defaultConnectionExasolId: 236
                defaultConnectionTeradataId: 236
                defaultFileStorageId: 456
                zendeskUrl: https://some.url.com
              schema:
                $ref: '#/components/schemas/MaintainerModel'
          description: OK
      summary: Retrieve a maintainer
      tags:
      - Maintainers
    patch:
      description: A partial update of a maintainer
      operationId: Update a maintainer
      parameters:
      - description: ""
        example: "1"
        explode: false
        in: path
        name: maintainer_id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            example:
              name: Example
              defaultConnectionRedshiftId: "234"
              defaultConnectionSnowflakeId: "324"
              defaultConnectionSynapseId: "324"
              defaultConnectionExasolId: "324"
              defaultConnectionTeradataId: "324"
              defaultFileStorageId: "456"
              zendeskUrl: https://keboola.zendesk.com
            schema:
              $ref: '#/components/schemas/Update_a_maintainer_request'
      responses:
        "200":
          content:
            application/json:
              example:
                id: 123
                created: 2014-11-11T08:40:51.620Z
                url: /questions/1
                defaultConnectionMysqlId: 234
                defaultConnectionRedshiftId: 232
                defaultConnectionSnowflakeId: 242
                defaultConnectionSynapseId: 235
                defaultConnectionExasolId: 236
                defaultConnectionTeradataId: 236
                defaultFileStorageId: 456
                zendeskUrl: https://some.url.com
              schema:
                $ref: '#/components/schemas/MaintainerModel'
          description: OK
      summary: Update a maintainer
      tags:
      - Maintainers
  /manage/maintainers/{maintainer_id}/invitations:
    get:
      description: ""
      operationId: List maintainers invitations
      parameters:
      - description: Maintainer ID
        explode: false
        in: path
        name: maintainer_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
              - id: 112
                created: 2018-07-10T10:45:11+0200
                user:
                  id: 124
                  name: test user 2
                  email: spam@keboola.com
                creator:
                  id: 123
                  name: test user
                  email: martin@keboola.com
              - id: 113
                created: 2018-07-10T10:50:00+0200
                user:
                  id: 125
                  name: test user 3
                  email: spam@keboola.com
                creator:
                  id: 123
                  name: test user
                  email: martin@keboola.com
              schema:
                items:
                  $ref: '#/components/schemas/List_maintainers_invitations_200_response_inner'
                type: array
          description: OK
      summary: List maintainers invitations
      tags:
      - Maintainers
    post:
      description: Only members of the maintainer and superadmins can invite other
        users.
      operationId: Invite a user to a maintainer
      parameters:
      - description: Maintainer ID
        explode: false
        in: path
        name: maintainer_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              email: martin@keboola.com
            schema:
              $ref: '#/components/schemas/Invite_a_user_to_a_maintainer_request'
      responses:
        "201":
          content:
            application/json:
              example:
                id: 113
                created: 2018-07-10T10:50:00+0200
                user:
                  id: 125
                  name: test user 3
                  email: spam@keboola.com
                creator:
                  id: 123
                  name: test user
                  email: martin@keboola.com
              schema:
                $ref: '#/components/schemas/Invite_a_user_to_a_maintainer_201_response'
          description: Created
      summary: Invite a user to a maintainer
      tags:
      - Maintainers
  /manage/maintainers/{maintainer_id}/invitations/{invitation_id}:
    delete:
      description: ""
      operationId: Cancel maintainer invitation
      parameters:
      - description: Maintainer ID
        explode: false
        in: path
        name: maintainer_id
        required: true
        schema:
          type: string
        style: simple
      - description: User ID
        explode: false
        in: path
        name: invitation_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
      summary: Cancel maintainer invitation
      tags:
      - Maintainers
    get:
      description: ""
      operationId: Maintainer invitation detail
      parameters:
      - description: Maintainer ID
        explode: false
        in: path
        name: maintainer_id
        required: true
        schema:
          type: string
        style: simple
      - description: User ID
        explode: false
        in: path
        name: invitation_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                id: 113
                created: 2018-07-10T10:50:00+0200
                user:
                  id: 125
                  name: test user 3
                  email: spam@keboola.com
                creator:
                  id: 123
                  name: test user
                  email: martin@keboola.com
              schema:
                $ref: '#/components/schemas/Invite_a_user_to_a_maintainer_201_response'
          description: OK
      summary: Maintainer invitation detail
      tags:
      - Maintainers
  /manage/maintainers/{maintainer_id}/users:
    get:
      description: ""
      operationId: List maintainer users
      parameters:
      - description: ID of the maintainer
        example: "1"
        explode: false
        in: path
        name: maintainer_id
        required: true
        schema:
          type: number
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
              - id: 23423
                name: Martin Halamicek
                email: martin@keboola.com
              schema:
                items:
                  $ref: '#/components/schemas/List_maintainers_invitations_200_response_inner_user'
                type: array
          description: OK
      summary: List maintainer users
      tags:
      - Maintainers
    post:
      description: "Either `id` or `email` of a user must be set. If the email is\
        \ not associated with a user, a new account is created and an invitation is\
        \ sent."
      operationId: Add a User to maintainer
      parameters:
      - description: ID of the maintainer
        example: "1"
        explode: false
        in: path
        name: maintainer_id
        required: true
        schema:
          type: number
        style: simple
      requestBody:
        content:
          application/json:
            example:
              id: "7234"
              email: martin@keboola.com
            schema:
              $ref: '#/components/schemas/Add_a_User_to_maintainer_request'
      responses:
        "204":
          content: {}
          description: No Content
      summary: Add a User to maintainer
      tags:
      - Maintainers
  /manage/maintainers/{maintainer_id}/users/{user_id}:
    delete:
      description: ""
      operationId: Remove a user from maintainer
      parameters:
      - description: ID of the maintainer
        example: "1"
        explode: false
        in: path
        name: maintainer_id
        required: true
        schema:
          type: number
        style: simple
      - description: User ID
        example: "1"
        explode: false
        in: path
        name: user_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
      summary: Remove a user from maintainer
      tags:
      - Maintainers
  /manage/maintainers/{maintainer_id}/metadata:
    get:
      description: Only members of the maintainer and super admins can list metadata.
      operationId: List maintainer metadata
      parameters:
      - description: Maintainer ID
        explode: false
        in: path
        name: maintainer_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content: {}
          description: OK
      summary: List maintainer metadata
      tags:
      - Maintainers
    post:
      description: |-
        Sets multiple metadata with one call. If the given key and provider combination already exist
        for the maintainer, the data will be updated with the new value and timestamp.
        Only maintainer members and super admins can change metadata.
      operationId: Set maintainer metadata
      parameters:
      - description: Maintainer ID
        explode: false
        in: path
        name: maintainer_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              provider: user
              metadata:
              - key: KBC.SomeEnity.metadataKey
                value: Some value
              - key: someMetadataKey
                value: Some value
            schema:
              $ref: '#/components/schemas/Set_maintainer_metadata_request'
      responses:
        "201":
          content: {}
          description: Created
      summary: Set maintainer metadata
      tags:
      - Maintainers
  /manage/maintainers/{maintainer_id}/metadata/{metadata_id}:
    delete:
      description: ""
      operationId: Remove maintainer metadata
      parameters:
      - description: Maintainer ID
        explode: false
        in: path
        name: maintainer_id
        required: true
        schema:
          type: string
        style: simple
      - description: Metadata ID
        explode: false
        in: path
        name: metadata_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
      summary: Remove maintainer metadata
      tags:
      - Maintainers
  /manage/organizations/{organization_id}:
    delete:
      description: ""
      operationId: Delete an organization
      parameters:
      - description: ID of the organization in form of an integer
        example: "1"
        explode: false
        in: path
        name: organization_id
        required: true
        schema:
          type: number
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
      summary: Delete an organization
      tags:
      - Organizations
    get:
      description: |-
        To access token needs to be superuser, member of the organization, member of the maintainer or application token with
        scope `organizations:read`.
      operationId: Retrieve an organization
      parameters:
      - description: ID of the organization in form of an integer
        example: "1"
        explode: false
        in: path
        name: organization_id
        required: true
        schema:
          type: number
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                id: 123
                name: sample org
                created: 2015-10-02T11:03:44+0200
                allowAutoJoin: true
                crmId: "6232456"
                activityCenterProjectId: 123
                mfaRequired: false
                projects:
                - id: 123
                  name: Demo
                  created: 2014-11-11T08:40:51.620Z
              schema:
                $ref: '#/components/schemas/Retrieve_an_organization_200_response'
          description: OK
      summary: Retrieve an organization
      tags:
      - Organizations
    patch:
      description: Partial update of an organization
      operationId: Update an organization
      parameters:
      - description: ID of the organization in form of an integer
        example: "1"
        explode: false
        in: path
        name: organization_id
        required: true
        schema:
          type: number
        style: simple
      requestBody:
        content:
          application/json:
            example:
              name: POC
              maintainerId: ""
              allowAutoJoin: ""
              crmId: "123456"
              activityCenterProjectId: "123"
              mfaRequired: ""
            schema:
              $ref: '#/components/schemas/Update_an_organization_request'
      responses:
        "200":
          content:
            application/json:
              example:
                id: 123
                name: POC
                created: 2015-10-02T11:03:44+0200
                allowAutoJoin: true
                crmId: "123456"
                activityCenterProjectId: 123
                mfaRequired: false
                projects:
                - id: 123
                  name: Demo
                  created: 2014-11-11T08:40:51.620Z
              schema:
                $ref: '#/components/schemas/Retrieve_an_organization_200_response'
          description: OK
      summary: Update an organization
      tags:
      - Organizations
  /manage/maintainers/{maintainer_id}/organizations:
    get:
      description: ""
      operationId: List maintainer's organizations
      parameters:
      - description: ID of the parent maintainer. The created organization will be
          assigned to this maintainer.
        example: "1"
        explode: false
        in: path
        name: maintainer_id
        required: true
        schema:
          type: number
        style: simple
      responses:
        "200":
          content: {}
          description: OK
      summary: List maintainer's organizations
      tags:
      - Organizations
    post:
      description: Creates a new organization.
      operationId: Create an organization
      parameters:
      - description: ID of the parent maintainer. The created organization will be
          assigned to this maintainer.
        example: "1"
        explode: false
        in: path
        name: maintainer_id
        required: true
        schema:
          type: number
        style: simple
      requestBody:
        content:
          application/json:
            example:
              name: POC
              crmId: "234"
            schema:
              $ref: '#/components/schemas/Create_an_organization_request'
      responses:
        "201":
          content:
            application/json:
              example:
                id: 123
                name: sample org
                created: 2014-11-11T08:40:51.620Z
                allowAutoJoin: true
                crmId: "6232456"
                activityCenterProjectId: 123
                mfaRequired: false
                projects:
                - id: 123
                  name: Demo
                  created: 2014-11-11T08:40:51.620Z
              schema:
                $ref: '#/components/schemas/OrganizationModel'
          description: Created
      summary: Create an organization
      tags:
      - Organizations
  /manage/organizations/{organization_id}/invitations:
    get:
      description: ""
      operationId: List organization invitations
      parameters:
      - description: Organization ID
        explode: false
        in: path
        name: organization_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
              - id: 112
                created: 2018-07-10T10:45:11+0200
                user:
                  id: 124
                  name: test user 2
                  email: spam@keboola.com
                creator:
                  id: 123
                  name: test user
                  email: martin@keboola.com
              - id: 113
                created: 2018-07-10T10:50:00+0200
                user:
                  id: 125
                  name: test user 3
                  email: spam@keboola.com
                creator:
                  id: 123
                  name: test user
                  email: martin@keboola.com
              schema:
                items:
                  $ref: '#/components/schemas/List_maintainers_invitations_200_response_inner'
                type: array
          description: OK
      summary: List organization invitations
      tags:
      - Organizations
    post:
      description: Only members of the organization can invite other users.
      operationId: Invite a user to a organization
      parameters:
      - description: Organization ID
        explode: false
        in: path
        name: organization_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              email: martin@keboola.com
            schema:
              $ref: '#/components/schemas/Invite_a_user_to_a_maintainer_request'
      responses:
        "201":
          content:
            application/json:
              example:
                id: 113
                created: 2018-07-10T10:50:00+0200
                user:
                  id: 125
                  name: test user 3
                  email: spam@keboola.com
                creator:
                  id: 123
                  name: test user
                  email: martin@keboola.com
              schema:
                $ref: '#/components/schemas/Invite_a_user_to_a_maintainer_201_response'
          description: Created
      summary: Invite a user to a organization
      tags:
      - Organizations
  /manage/organizations/{organization_id}/invitations/{invitation_id}:
    delete:
      description: ""
      operationId: Cancel organization invitation
      parameters:
      - description: Organization ID
        explode: false
        in: path
        name: organization_id
        required: true
        schema:
          type: string
        style: simple
      - description: User ID
        explode: false
        in: path
        name: invitation_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
      summary: Cancel organization invitation
      tags:
      - Organizations
    get:
      description: ""
      operationId: Organization invitation detail
      parameters:
      - description: Organization ID
        explode: false
        in: path
        name: organization_id
        required: true
        schema:
          type: string
        style: simple
      - description: User ID
        explode: false
        in: path
        name: invitation_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                id: 113
                created: 2018-07-10T10:50:00+0200
                user:
                  id: 125
                  name: test user 3
                  email: spam@keboola.com
                creator:
                  id: 123
                  name: test user
                  email: martin@keboola.com
              schema:
                $ref: '#/components/schemas/Invite_a_user_to_a_maintainer_201_response'
          description: OK
      summary: Organization invitation detail
      tags:
      - Organizations
  /manage/organizations/{organization_id}/users:
    get:
      description: ""
      operationId: List organization users
      parameters:
      - description: ID of the organization
        example: "1"
        explode: false
        in: path
        name: organization_id
        required: true
        schema:
          type: number
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
              - id: 23423
                name: Martin Halamicek
                email: martin@keboola.com
              schema:
                items:
                  $ref: '#/components/schemas/List_maintainers_invitations_200_response_inner_user'
                type: array
          description: OK
      summary: List organization users
      tags:
      - Organizations
    post:
      description: "Either `id` or `email` of a user must be set. If the email is\
        \ not associated with a user, a new account is created and an invitation is\
        \ sent."
      operationId: Add a User to organization
      parameters:
      - description: ID of the organization
        example: "1"
        explode: false
        in: path
        name: organization_id
        required: true
        schema:
          type: number
        style: simple
      requestBody:
        content:
          application/json:
            example:
              id: "7234"
              email: martin@keboola.com
            schema:
              $ref: '#/components/schemas/Add_a_User_to_maintainer_request'
      responses:
        "204":
          content: {}
          description: No Content
      summary: Add a User to organization
      tags:
      - Organizations
  /manage/organizations/{organization_id}/users/{user_id}:
    delete:
      description: ""
      operationId: Remove a user from organization
      parameters:
      - description: ID of the organization
        example: "1"
        explode: false
        in: path
        name: organization_id
        required: true
        schema:
          type: number
        style: simple
      - description: User ID
        example: "1"
        explode: false
        in: path
        name: user_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
      summary: Remove a user from organization
      tags:
      - Organizations
  /manage/organizations/{organization_id}/projects-users:
    get:
      description: List of all users who are members of at least one project in the
        organization. Only members of the organization can get this list.
      operationId: List project users in organization
      parameters:
      - description: ID of the organization
        example: "1"
        explode: false
        in: path
        name: organization_id
        required: true
        schema:
          type: number
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
              - id: 123
                name: test user
                email: martin@keboola.com
              - id: 125
                name: test user 3
                email: spam@keboola.com
              schema:
                items:
                  $ref: '#/components/schemas/List_project_users_in_organization_200_response_inner'
                type: array
          description: OK
      summary: List project users in organization
      tags:
      - Organizations
  /manage/organizations/{organization_id}/join-organization:
    post:
      description: "If the organization allows autojoin (`allowAutoJoin` attribute\
        \ is se to `true`), all members of its maintainer and superadmins are allowed\
        \ to join the organization."
      operationId: Join a organization
      parameters:
      - description: Organization ID
        explode: false
        in: path
        name: organization_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
      summary: Join a organization
      tags:
      - Organizations
  /manage/organizations/{organization_id}/force-mfa:
    post:
      description: |-
        With MFA as required, any user that does not have MFA enabled will lose access to the project until they set it up.

        Only members of the organization with MFA enabled can perform this action.
      operationId: Require Multi-Factor Authentication
      parameters:
      - description: Organization ID
        explode: false
        in: path
        name: organization_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content: {}
          description: OK
      summary: Require Multi-Factor Authentication
      tags:
      - Organizations
  /manage/organizations/{organization_id}/metadata:
    get:
      description: "Only members of the maintainer, members of organization and super\
        \ admins can list metadata."
      operationId: List organization Metadata
      parameters:
      - description: Organization ID
        explode: false
        in: path
        name: organization_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
              - id: 123
                provider: user
                timestamp: 2021-02-17T15:05:21+0100
                key: KBC.SomeEnity.metadataKey
                value: Some value
              - id: 124
                provider: user
                timestamp: 2021-02-17T15:05:21+0100
                key: someMetadataKey
                value: Some value
              schema:
                items:
                  $ref: '#/components/schemas/List_organization_Metadata_200_response_inner'
                type: array
          description: OK
      summary: List organization Metadata
      tags:
      - Organizations
    post:
      description: |-
        Sets multiple metadata with one call. If the given key and provider combination already exist
        for the organization, the data will be updated with the new value and timestamp.
        Only organization members, members of the maintainer and super admins can change metadata.
      operationId: Set organization metadata
      parameters:
      - description: Organization ID
        explode: false
        in: path
        name: organization_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              provider: user
              metadata:
              - key: KBC.SomeEnity.metadataKey
                value: Some value
              - key: someMetadataKey
                value: Some value
            schema:
              $ref: '#/components/schemas/Set_maintainer_metadata_request'
      responses:
        "201":
          content:
            application/json:
              example:
              - id: 123
                provider: user
                timestamp: 2021-02-17T15:05:21+0100
                key: KBC.SomeEnity.metadataKey
                value: Some value
              - id: 124
                provider: user
                timestamp: 2021-02-17T15:05:21+0100
                key: someMetadataKey
                value: Some value
              schema:
                items:
                  $ref: '#/components/schemas/List_organization_Metadata_200_response_inner'
                type: array
          description: Created
      summary: Set organization metadata
      tags:
      - Organizations
  /manage/organizations/{organization_id}/metadata/{metadata_id}:
    delete:
      description: ""
      operationId: Remove organization metadata
      parameters:
      - description: Organization ID
        explode: false
        in: path
        name: organization_id
        required: true
        schema:
          type: string
        style: simple
      - description: Metadata ID
        explode: false
        in: path
        name: metadata_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
      summary: Remove organization metadata
      tags:
      - Organizations
  /manage/projects/{project_id}:
    delete:
      description: "A project will not be physically deleted. It'll only be inaccessible\
        \ and hidden. If project was listed as `activityCenterProjectId` in it's organization\
        \ and it will be deleted, the `activityCenterProjectId` will be set to `null`."
      operationId: Delete a project
      parameters:
      - description: Project ID
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
      summary: Delete a project
      tags:
      - Projects
    get:
      description: |-
        Returns a project with associated limits and metrics.

        * limits  - These are limits assigned to a project (number of admins, number of orchestrations, parallelization).

        * metrics - Latest values of the monitored project metrics

        If the project is configured with pay as you go billing, `payAsYouGo` section is also included in the project details.

        This endpoint can also be accessed using application tokens with scope `projects:read`
      operationId: Project detail
      parameters:
      - description: Project ID
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                id: 4088
                name: Martinšík
                type: production
                region: us-east-1
                created: 2017-12-11T09:02:13+0100
                expires: null
                features: []
                dataSizeBytes: 22691704832
                rowsCount: 4295727047
                hasMysql: false
                hasRedshift: false
                hasSnowflake: true
                hasSynapse: false
                hasExasol: false
                hasTeradata: false
                defaultBackend: snowflake
                hasTryModeOn: "0"
                limits:
                  components.jobsParallelism:
                    name: components.jobsParallelism
                    value: 10
                  goodData.dataSizeBytes:
                    name: goodData.dataSizeBytes
                    value: 1000000000
                  goodData.demoTokenEnabled:
                    name: goodData.demoTokenEnabled
                    value: 1
                  goodData.prodTokenEnabled:
                    name: goodData.prodTokenEnabled
                    value: 0
                  goodData.usersCount:
                    name: goodData.usersCount
                    value: 30
                  kbc.adminsCount:
                    name: kbc.adminsCount
                    value: 10
                  kbc.extractorsCount:
                    name: kbc.extractorsCount
                    value: 0
                  kbc.monthlyProjectPowerLimit:
                    name: kbc.monthlyProjectPowerLimit
                    value: 50
                  kbc.writersCount:
                    name: kbc.writersCount
                    value: 0
                  orchestrations.count:
                    name: orchestrations.count
                    value: 10
                  storage.dataSizeBytes:
                    name: storage.dataSizeBytes
                    value: 50000000000
                  storage.jobsParallelism:
                    name: storage.jobsParallelism
                    value: 10
                metrics:
                  kbc.adminsCount:
                    name: kbc.adminsCount
                    value: 1
                  orchestrations.count:
                    name: orchestrations.count
                    value: 1
                  storage.dataSizeBytes:
                    name: storage.dataSizeBytes
                    value: 22691704832
                  storage.rowsCount:
                    name: storage.rowsCount
                    value: 4295727047
                isDisabled: false
                billedMonthlyPrice: null
                dataRetentionTimeInDays: 7
                organization:
                  id: 5
                  name: Martinovo
                  crmId: ""
                  activityCenterProjectId: ""
                  created: 2013-12-31T11:22:33+0100
                  allowAutoJoin: true
                fileStorage:
                  id: 2
                  awsKey: 
                  region: us-east-1
                  filesBucket: kbc-sapi-files
                  owner: keboola
                  isDefault: true
                  created: ""
                  creator:
                    id: 0
                    name: null
                backends:
                  snowflake:
                    id: 353
                    host: keboola.snowflakecomputing.com
                    region: us-east-1
                    owner: keboola
                payAsYouGo:
                  purchasedCredits: 123
              schema:
                $ref: '#/components/schemas/ProjectModel'
          description: OK
      summary: Project detail
      tags:
      - Projects
    put:
      description: ""
      operationId: Update a project
      parameters:
      - description: Project ID
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              name: Test
              defaultBackend: snowflake
              type: demo
              expirationDays: 7
              billedMonthlyPrice: 2000
              dataRetentionTimeInDays: 20
            schema:
              $ref: '#/components/schemas/Update_a_project_request'
      responses:
        "200":
          content:
            application/json:
              example:
                id: 4088
                name: Martinšík
                type: production
                region: us-east-1
                created: 2017-12-11T09:02:13+0100
                expires: null
                features: []
                dataSizeBytes: 22691704832
                rowsCount: 4295727047
                hasMysql: false
                hasRedshift: false
                hasSnowflake: true
                hasSynapse: false
                hasExasol: false
                hasTeradata: false
                defaultBackend: snowflake
                hasTryModeOn: "0"
                limits:
                  components.jobsParallelism:
                    name: components.jobsParallelism
                    value: 10
                  goodData.dataSizeBytes:
                    name: goodData.dataSizeBytes
                    value: 1000000000
                  goodData.demoTokenEnabled:
                    name: goodData.demoTokenEnabled
                    value: 1
                  goodData.prodTokenEnabled:
                    name: goodData.prodTokenEnabled
                    value: 0
                  goodData.usersCount:
                    name: goodData.usersCount
                    value: 30
                  kbc.adminsCount:
                    name: kbc.adminsCount
                    value: 10
                  kbc.extractorsCount:
                    name: kbc.extractorsCount
                    value: 0
                  kbc.monthlyProjectPowerLimit:
                    name: kbc.monthlyProjectPowerLimit
                    value: 50
                  kbc.writersCount:
                    name: kbc.writersCount
                    value: 0
                  orchestrations.count:
                    name: orchestrations.count
                    value: 10
                  storage.dataSizeBytes:
                    name: storage.dataSizeBytes
                    value: 50000000000
                  storage.jobsParallelism:
                    name: storage.jobsParallelism
                    value: 10
                metrics:
                  kbc.adminsCount:
                    name: kbc.adminsCount
                    value: 1
                  orchestrations.count:
                    name: orchestrations.count
                    value: 1
                  storage.dataSizeBytes:
                    name: storage.dataSizeBytes
                    value: 22691704832
                  storage.rowsCount:
                    name: storage.rowsCount
                    value: 4295727047
                isDisabled: false
                billedMonthlyPrice: null
                dataRetentionTimeInDays: 7
                organization:
                  id: 5
                  name: Martinovo
                  crmId: ""
                  activityCenterProjectId: ""
                  created: 2013-12-31T11:22:33+0100
                  allowAutoJoin: true
                fileStorage:
                  id: 2
                  awsKey: 
                  region: us-east-1
                  filesBucket: kbc-sapi-files
                  owner: keboola
                  isDefault: true
                  created: ""
                  creator:
                    id: 0
                    name: null
                backends:
                  snowflake:
                    id: 353
                    host: keboola.snowflakecomputing.com
                    region: us-east-1
                    owner: keboola
                payAsYouGo:
                  purchasedCredits: 123
              schema:
                $ref: '#/components/schemas/ProjectModel'
          description: OK
      summary: Update a project
      tags:
      - Projects
  /manage/organizations/{organization_id}/projects:
    get:
      description: ""
      operationId: List projects for an organization
      parameters:
      - description: Organization ID; projects have to be created in an organization.
        explode: false
        in: path
        name: organization_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                id: 101
                name: test project
                type: production
                region: eu-west-1
                created: 2017-02-15T14:25:15+0100
                expires: null
                features:
                - featureName
                dataSizeBytes: 49152
                rowsCount: 200
                hasMysql: false
                hasRedshift: false
                hasSynapse: false
                hasExasol: false
                hasTeradata: false
                hasSnowflake: true
                defaultBackend: snowflake
                hasTryModeOn: "0"
                limits:
                  limitName:
                    name: limitName
                    value: 10
                metrics: {}
                isDisabled: false
                billedMonthlyPrice: null
                dataRetentionTimeInDays: 1
                fileStorageProvider: aws
              schema:
                $ref: '#/components/schemas/List_projects_for_an_organization_200_response'
          description: OK
      summary: List projects for an organization
      tags:
      - Projects
    post:
      description: ""
      operationId: Add a project
      parameters:
      - description: Organization ID; projects have to be created in an organization.
        explode: false
        in: path
        name: organization_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              name: My Demo
              type: demo
              defaultBackend: snowflake
              dataRetentionTimeInDays: "7"
            schema:
              $ref: '#/components/schemas/Add_a_project_request'
      responses:
        "201":
          content:
            application/json:
              example:
                id: 4088
                name: Martinšík
                type: production
                region: us-east-1
                created: 2017-12-11T09:02:13+0100
                expires: null
                features: []
                dataSizeBytes: 22691704832
                rowsCount: 4295727047
                hasMysql: false
                hasRedshift: false
                hasSnowflake: true
                hasSynapse: false
                hasExasol: false
                hasTeradata: false
                defaultBackend: snowflake
                hasTryModeOn: "0"
                limits:
                  components.jobsParallelism:
                    name: components.jobsParallelism
                    value: 10
                  goodData.dataSizeBytes:
                    name: goodData.dataSizeBytes
                    value: 1000000000
                  goodData.demoTokenEnabled:
                    name: goodData.demoTokenEnabled
                    value: 1
                  goodData.prodTokenEnabled:
                    name: goodData.prodTokenEnabled
                    value: 0
                  goodData.usersCount:
                    name: goodData.usersCount
                    value: 30
                  kbc.adminsCount:
                    name: kbc.adminsCount
                    value: 10
                  kbc.extractorsCount:
                    name: kbc.extractorsCount
                    value: 0
                  kbc.monthlyProjectPowerLimit:
                    name: kbc.monthlyProjectPowerLimit
                    value: 50
                  kbc.writersCount:
                    name: kbc.writersCount
                    value: 0
                  orchestrations.count:
                    name: orchestrations.count
                    value: 10
                  storage.dataSizeBytes:
                    name: storage.dataSizeBytes
                    value: 50000000000
                  storage.jobsParallelism:
                    name: storage.jobsParallelism
                    value: 10
                metrics:
                  kbc.adminsCount:
                    name: kbc.adminsCount
                    value: 1
                  orchestrations.count:
                    name: orchestrations.count
                    value: 1
                  storage.dataSizeBytes:
                    name: storage.dataSizeBytes
                    value: 22691704832
                  storage.rowsCount:
                    name: storage.rowsCount
                    value: 4295727047
                isDisabled: false
                billedMonthlyPrice: null
                dataRetentionTimeInDays: 7
                organization:
                  id: 5
                  name: Martinovo
                  crmId: ""
                  activityCenterProjectId: ""
                  created: 2013-12-31T11:22:33+0100
                  allowAutoJoin: true
                fileStorage:
                  id: 2
                  awsKey: 
                  region: us-east-1
                  filesBucket: kbc-sapi-files
                  owner: keboola
                  isDefault: true
                  created: ""
                  creator:
                    id: 0
                    name: null
                backends:
                  snowflake:
                    id: 353
                    host: keboola.snowflakecomputing.com
                    region: us-east-1
                    owner: keboola
                payAsYouGo:
                  purchasedCredits: 123
              schema:
                $ref: '#/components/schemas/ProjectModel'
          description: Created
      summary: Add a project
      tags:
      - Projects
  /manage/projects/{project_id}/organizations:
    post:
      description: ""
      operationId: Move a project
      parameters:
      - description: Project ID
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              organizationId: "523"
            schema:
              $ref: '#/components/schemas/Move_a_project_request'
      responses:
        "200":
          content:
            application/json:
              example:
                id: 4088
                name: Martinšík
                type: production
                region: us-east-1
                created: 2017-12-11T09:02:13+0100
                expires: null
                features: []
                dataSizeBytes: 22691704832
                rowsCount: 4295727047
                hasMysql: false
                hasRedshift: false
                hasSnowflake: true
                hasSynapse: false
                hasExasol: false
                hasTeradata: false
                defaultBackend: snowflake
                hasTryModeOn: "0"
                limits:
                  components.jobsParallelism:
                    name: components.jobsParallelism
                    value: 10
                  goodData.dataSizeBytes:
                    name: goodData.dataSizeBytes
                    value: 1000000000
                  goodData.demoTokenEnabled:
                    name: goodData.demoTokenEnabled
                    value: 1
                  goodData.prodTokenEnabled:
                    name: goodData.prodTokenEnabled
                    value: 0
                  goodData.usersCount:
                    name: goodData.usersCount
                    value: 30
                  kbc.adminsCount:
                    name: kbc.adminsCount
                    value: 10
                  kbc.extractorsCount:
                    name: kbc.extractorsCount
                    value: 0
                  kbc.monthlyProjectPowerLimit:
                    name: kbc.monthlyProjectPowerLimit
                    value: 50
                  kbc.writersCount:
                    name: kbc.writersCount
                    value: 0
                  orchestrations.count:
                    name: orchestrations.count
                    value: 10
                  storage.dataSizeBytes:
                    name: storage.dataSizeBytes
                    value: 50000000000
                  storage.jobsParallelism:
                    name: storage.jobsParallelism
                    value: 10
                metrics:
                  kbc.adminsCount:
                    name: kbc.adminsCount
                    value: 1
                  orchestrations.count:
                    name: orchestrations.count
                    value: 1
                  storage.dataSizeBytes:
                    name: storage.dataSizeBytes
                    value: 22691704832
                  storage.rowsCount:
                    name: storage.rowsCount
                    value: 4295727047
                isDisabled: false
                billedMonthlyPrice: null
                dataRetentionTimeInDays: 7
                organization:
                  id: 5
                  name: Martinovo
                  crmId: ""
                  activityCenterProjectId: ""
                  created: 2013-12-31T11:22:33+0100
                  allowAutoJoin: true
                fileStorage:
                  id: 2
                  awsKey: 
                  region: us-east-1
                  filesBucket: kbc-sapi-files
                  owner: keboola
                  isDefault: true
                  created: ""
                  creator:
                    id: 0
                    name: null
                backends:
                  snowflake:
                    id: 353
                    host: keboola.snowflakecomputing.com
                    region: us-east-1
                    owner: keboola
                payAsYouGo:
                  purchasedCredits: 123
              schema:
                $ref: '#/components/schemas/ProjectModel'
          description: OK
      summary: Move a project
      tags:
      - Projects
  /manage/projects/{project_id}/storage-backend:
    post:
      description: ""
      operationId: Assign project Storage backend
      parameters:
      - description: Project ID
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              storageBackendId: "32"
            schema:
              $ref: '#/components/schemas/Assign_project_Storage_backend_request'
      responses:
        "200":
          content:
            application/json:
              example:
                id: 4088
                name: Martinšík
                type: production
                region: us-east-1
                created: 2017-12-11T09:02:13+0100
                expires: null
                features: []
                dataSizeBytes: 22691704832
                rowsCount: 4295727047
                hasMysql: false
                hasRedshift: false
                hasSnowflake: true
                hasSynapse: false
                hasExasol: false
                hasTeradata: false
                defaultBackend: snowflake
                hasTryModeOn: "0"
                limits:
                  components.jobsParallelism:
                    name: components.jobsParallelism
                    value: 10
                  goodData.dataSizeBytes:
                    name: goodData.dataSizeBytes
                    value: 1000000000
                  goodData.demoTokenEnabled:
                    name: goodData.demoTokenEnabled
                    value: 1
                  goodData.prodTokenEnabled:
                    name: goodData.prodTokenEnabled
                    value: 0
                  goodData.usersCount:
                    name: goodData.usersCount
                    value: 30
                  kbc.adminsCount:
                    name: kbc.adminsCount
                    value: 10
                  kbc.extractorsCount:
                    name: kbc.extractorsCount
                    value: 0
                  kbc.monthlyProjectPowerLimit:
                    name: kbc.monthlyProjectPowerLimit
                    value: 50
                  kbc.writersCount:
                    name: kbc.writersCount
                    value: 0
                  orchestrations.count:
                    name: orchestrations.count
                    value: 10
                  storage.dataSizeBytes:
                    name: storage.dataSizeBytes
                    value: 50000000000
                  storage.jobsParallelism:
                    name: storage.jobsParallelism
                    value: 10
                metrics:
                  kbc.adminsCount:
                    name: kbc.adminsCount
                    value: 1
                  orchestrations.count:
                    name: orchestrations.count
                    value: 1
                  storage.dataSizeBytes:
                    name: storage.dataSizeBytes
                    value: 22691704832
                  storage.rowsCount:
                    name: storage.rowsCount
                    value: 4295727047
                isDisabled: false
                billedMonthlyPrice: null
                dataRetentionTimeInDays: 7
                organization:
                  id: 5
                  name: Martinovo
                  crmId: ""
                  activityCenterProjectId: ""
                  created: 2013-12-31T11:22:33+0100
                  allowAutoJoin: true
                fileStorage:
                  id: 2
                  awsKey: 
                  region: us-east-1
                  filesBucket: kbc-sapi-files
                  owner: keboola
                  isDefault: true
                  created: ""
                  creator:
                    id: 0
                    name: null
                backends:
                  snowflake:
                    id: 353
                    host: keboola.snowflakecomputing.com
                    region: us-east-1
                    owner: keboola
                payAsYouGo:
                  purchasedCredits: 123
              schema:
                $ref: '#/components/schemas/ProjectModel'
          description: OK
      summary: Assign project Storage backend
      tags:
      - Projects
  /manage/projects/{project_id}/storage-backend/{storage_backend_id}:
    delete:
      description: ""
      operationId: Remove project Storage backend
      parameters:
      - description: Project ID
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      - description: Storage backend ID; must be one of Storage backends assigned
          to the project.
        explode: false
        in: path
        name: storage_backend_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                id: 4088
                name: Martinšík
                type: production
                region: us-east-1
                created: 2017-12-11T09:02:13+0100
                expires: null
                features: []
                dataSizeBytes: 22691704832
                rowsCount: 4295727047
                hasMysql: false
                hasRedshift: false
                hasSnowflake: true
                hasSynapse: false
                hasExasol: false
                hasTeradata: false
                defaultBackend: snowflake
                hasTryModeOn: "0"
                limits:
                  components.jobsParallelism:
                    name: components.jobsParallelism
                    value: 10
                  goodData.dataSizeBytes:
                    name: goodData.dataSizeBytes
                    value: 1000000000
                  goodData.demoTokenEnabled:
                    name: goodData.demoTokenEnabled
                    value: 1
                  goodData.prodTokenEnabled:
                    name: goodData.prodTokenEnabled
                    value: 0
                  goodData.usersCount:
                    name: goodData.usersCount
                    value: 30
                  kbc.adminsCount:
                    name: kbc.adminsCount
                    value: 10
                  kbc.extractorsCount:
                    name: kbc.extractorsCount
                    value: 0
                  kbc.monthlyProjectPowerLimit:
                    name: kbc.monthlyProjectPowerLimit
                    value: 50
                  kbc.writersCount:
                    name: kbc.writersCount
                    value: 0
                  orchestrations.count:
                    name: orchestrations.count
                    value: 10
                  storage.dataSizeBytes:
                    name: storage.dataSizeBytes
                    value: 50000000000
                  storage.jobsParallelism:
                    name: storage.jobsParallelism
                    value: 10
                metrics:
                  kbc.adminsCount:
                    name: kbc.adminsCount
                    value: 1
                  orchestrations.count:
                    name: orchestrations.count
                    value: 1
                  storage.dataSizeBytes:
                    name: storage.dataSizeBytes
                    value: 22691704832
                  storage.rowsCount:
                    name: storage.rowsCount
                    value: 4295727047
                isDisabled: false
                billedMonthlyPrice: null
                dataRetentionTimeInDays: 7
                organization:
                  id: 5
                  name: Martinovo
                  crmId: ""
                  activityCenterProjectId: ""
                  created: 2013-12-31T11:22:33+0100
                  allowAutoJoin: true
                fileStorage:
                  id: 2
                  awsKey: 
                  region: us-east-1
                  filesBucket: kbc-sapi-files
                  owner: keboola
                  isDefault: true
                  created: ""
                  creator:
                    id: 0
                    name: null
                backends:
                  snowflake:
                    id: 353
                    host: keboola.snowflakecomputing.com
                    region: us-east-1
                    owner: keboola
                payAsYouGo:
                  purchasedCredits: 123
              schema:
                $ref: '#/components/schemas/ProjectModel'
          description: OK
      summary: Remove project Storage backend
      tags:
      - Projects
  /manage/projects/{project_id}/file-storage:
    post:
      description: ""
      operationId: Assign project file Storage
      parameters:
      - description: Project ID
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              fileStorageId: "32"
            schema:
              $ref: '#/components/schemas/Assign_project_file_Storage_request'
      responses:
        "200":
          content:
            application/json:
              example:
                id: 4088
                name: Martinšík
                type: production
                region: us-east-1
                created: 2017-12-11T09:02:13+0100
                expires: null
                features: []
                dataSizeBytes: 22691704832
                rowsCount: 4295727047
                hasMysql: false
                hasRedshift: false
                hasSnowflake: true
                hasSynapse: false
                hasExasol: false
                hasTeradata: false
                defaultBackend: snowflake
                hasTryModeOn: "0"
                limits:
                  components.jobsParallelism:
                    name: components.jobsParallelism
                    value: 10
                  goodData.dataSizeBytes:
                    name: goodData.dataSizeBytes
                    value: 1000000000
                  goodData.demoTokenEnabled:
                    name: goodData.demoTokenEnabled
                    value: 1
                  goodData.prodTokenEnabled:
                    name: goodData.prodTokenEnabled
                    value: 0
                  goodData.usersCount:
                    name: goodData.usersCount
                    value: 30
                  kbc.adminsCount:
                    name: kbc.adminsCount
                    value: 10
                  kbc.extractorsCount:
                    name: kbc.extractorsCount
                    value: 0
                  kbc.monthlyProjectPowerLimit:
                    name: kbc.monthlyProjectPowerLimit
                    value: 50
                  kbc.writersCount:
                    name: kbc.writersCount
                    value: 0
                  orchestrations.count:
                    name: orchestrations.count
                    value: 10
                  storage.dataSizeBytes:
                    name: storage.dataSizeBytes
                    value: 50000000000
                  storage.jobsParallelism:
                    name: storage.jobsParallelism
                    value: 10
                metrics:
                  kbc.adminsCount:
                    name: kbc.adminsCount
                    value: 1
                  orchestrations.count:
                    name: orchestrations.count
                    value: 1
                  storage.dataSizeBytes:
                    name: storage.dataSizeBytes
                    value: 22691704832
                  storage.rowsCount:
                    name: storage.rowsCount
                    value: 4295727047
                isDisabled: false
                billedMonthlyPrice: null
                dataRetentionTimeInDays: 7
                organization:
                  id: 5
                  name: Martinovo
                  crmId: ""
                  activityCenterProjectId: ""
                  created: 2013-12-31T11:22:33+0100
                  allowAutoJoin: true
                fileStorage:
                  id: 2
                  awsKey: 
                  region: us-east-1
                  filesBucket: kbc-sapi-files
                  owner: keboola
                  isDefault: true
                  created: ""
                  creator:
                    id: 0
                    name: null
                backends:
                  snowflake:
                    id: 353
                    host: keboola.snowflakecomputing.com
                    region: us-east-1
                    owner: keboola
                payAsYouGo:
                  purchasedCredits: 123
              schema:
                $ref: '#/components/schemas/ProjectModel'
          description: OK
      summary: Assign project file Storage
      tags:
      - Projects
  /manage/projects/{project_id}/limits:
    post:
      description: ""
      operationId: Set project limits
      parameters:
      - description: Project ID
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              limits:
              - name: goodData.usersCount
                value: 23
            schema:
              $ref: '#/components/schemas/Set_project_limits_request'
      responses:
        "200":
          content:
            application/json:
              example:
                id: 4088
                name: Martinšík
                type: production
                region: us-east-1
                created: 2017-12-11T09:02:13+0100
                expires: null
                features: []
                dataSizeBytes: 22691704832
                rowsCount: 4295727047
                hasMysql: false
                hasRedshift: false
                hasSnowflake: true
                hasSynapse: false
                hasExasol: false
                hasTeradata: false
                defaultBackend: snowflake
                hasTryModeOn: "0"
                limits:
                  components.jobsParallelism:
                    name: components.jobsParallelism
                    value: 10
                  goodData.dataSizeBytes:
                    name: goodData.dataSizeBytes
                    value: 1000000000
                  goodData.demoTokenEnabled:
                    name: goodData.demoTokenEnabled
                    value: 1
                  goodData.prodTokenEnabled:
                    name: goodData.prodTokenEnabled
                    value: 0
                  goodData.usersCount:
                    name: goodData.usersCount
                    value: 30
                  kbc.adminsCount:
                    name: kbc.adminsCount
                    value: 10
                  kbc.extractorsCount:
                    name: kbc.extractorsCount
                    value: 0
                  kbc.monthlyProjectPowerLimit:
                    name: kbc.monthlyProjectPowerLimit
                    value: 50
                  kbc.writersCount:
                    name: kbc.writersCount
                    value: 0
                  orchestrations.count:
                    name: orchestrations.count
                    value: 10
                  storage.dataSizeBytes:
                    name: storage.dataSizeBytes
                    value: 50000000000
                  storage.jobsParallelism:
                    name: storage.jobsParallelism
                    value: 10
                metrics:
                  kbc.adminsCount:
                    name: kbc.adminsCount
                    value: 1
                  orchestrations.count:
                    name: orchestrations.count
                    value: 1
                  storage.dataSizeBytes:
                    name: storage.dataSizeBytes
                    value: 22691704832
                  storage.rowsCount:
                    name: storage.rowsCount
                    value: 4295727047
                isDisabled: false
                billedMonthlyPrice: null
                dataRetentionTimeInDays: 7
                organization:
                  id: 5
                  name: Martinovo
                  crmId: ""
                  activityCenterProjectId: ""
                  created: 2013-12-31T11:22:33+0100
                  allowAutoJoin: true
                fileStorage:
                  id: 2
                  awsKey: 
                  region: us-east-1
                  filesBucket: kbc-sapi-files
                  owner: keboola
                  isDefault: true
                  created: ""
                  creator:
                    id: 0
                    name: null
                backends:
                  snowflake:
                    id: 353
                    host: keboola.snowflakecomputing.com
                    region: us-east-1
                    owner: keboola
                payAsYouGo:
                  purchasedCredits: 123
              schema:
                $ref: '#/components/schemas/ProjectModel'
          description: OK
      summary: Set project limits
      tags:
      - Projects
  /manage/projects/{project_id}/limits/{limit_name}:
    delete:
      description: ""
      operationId: Remove project limit
      parameters:
      - description: Project ID
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      - description: Limit name
        explode: false
        in: path
        name: limit_name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
      summary: Remove project limit
      tags:
      - Projects
  /manage/projects/{project_id}/metadata:
    get:
      description: "Only project members, members of the maintainer, members of organization\
        \ and super admins can list metadata."
      operationId: List project Metadata
      parameters:
      - description: Project ID
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
              - id: 123
                provider: user
                timestamp: 2021-02-17T15:05:21+0100
                key: KBC.SomeEnity.metadataKey
                value: Some value
              - id: 124
                provider: user
                timestamp: 2021-02-17T15:05:21+0100
                key: someMetadataKey
                value: Some value
              schema:
                items:
                  $ref: '#/components/schemas/List_organization_Metadata_200_response_inner'
                type: array
          description: OK
      summary: List project Metadata
      tags:
      - Projects
    post:
      description: |-
        Sets multiple metadata with one call. If the given key and provider combination already exist
        for the project, the data will be updated with the new value and timestamp.
        Only project members with Admin or Share roles, members of the maintainer, members of organization and super admins can change metadata.
      operationId: Set project metadata
      parameters:
      - description: Project ID
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              provider: user
              metadata:
              - key: KBC.SomeEnity.metadataKey
                value: Some value
              - key: someMetadataKey
                value: Some value
            schema:
              $ref: '#/components/schemas/Set_maintainer_metadata_request'
      responses:
        "201":
          content:
            application/json:
              example:
              - id: 123
                provider: user
                timestamp: 2021-02-17T15:05:21+0100
                key: KBC.SomeEnity.metadataKey
                value: Some value
              - id: 124
                provider: user
                timestamp: 2021-02-17T15:05:21+0100
                key: someMetadataKey
                value: Some value
              schema:
                items:
                  $ref: '#/components/schemas/List_organization_Metadata_200_response_inner'
                type: array
          description: Created
      summary: Set project metadata
      tags:
      - Projects
  /manage/projects/{project_id}/metadata/{metadata_id}:
    delete:
      description: ""
      operationId: Remove project metadata
      parameters:
      - description: Project ID
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      - description: Metadata ID
        explode: false
        in: path
        name: metadata_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
      summary: Remove project metadata
      tags:
      - Projects
  /manage/projects/{project_id}/invitations:
    get:
      description: ""
      operationId: List project invitations
      parameters:
      - description: Project ID
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
              - id: 112
                created: 2018-07-10T10:45:11+0200
                expires: null
                reason: ""
                user:
                  id: 124
                  name: test user 2
                  email: spam@keboola.com
                creator:
                  id: 123
                  name: test user
                  email: martin@keboola.com
              - id: 113
                created: 2018-07-10T10:50:00+0200
                expires: 2018-07-12T10:50:00+0200
                reason: Help with Restbox configuration
                user:
                  id: 125
                  name: test user 3
                  email: spam@keboola.com
                creator:
                  id: 123
                  name: test user
                  email: martin@keboola.com
              schema:
                items:
                  $ref: '#/components/schemas/List_project_invitations_200_response_inner'
                type: array
          description: OK
      summary: List project invitations
      tags:
      - Projects
    post:
      description: |-
        Only members of the project or its organization are allowed to invite new users to the project.

        An optional expiration (seconds) and reason for joining can be added to the request.
      operationId: Invite a user to a project
      parameters:
      - description: Project ID
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              email: martin@keboola.com
              role: admin
              expirationSeconds: 3600
              reason: Help with component configuration
            schema:
              $ref: '#/components/schemas/Invite_a_user_to_a_project_request'
      responses:
        "201":
          content:
            application/json:
              example:
                id: 113
                created: 2018-07-10T10:50:00+0200
                expires: 2018-07-10T11:50:00+0200
                reason: Help with component configuration
                role: admin
                user:
                  id: 125
                  name: test user 3
                  email: spam@keboola.com
                creator:
                  id: 123
                  name: test user
                  email: martin@keboola.com
              schema:
                $ref: '#/components/schemas/Invite_a_user_to_a_project_201_response'
          description: Created
      summary: Invite a user to a project
      tags:
      - Projects
  /manage/projects/{project_id}/invitations/{invitation_id}:
    delete:
      description: Only members of the project or its organization are allowed to
        cancel project invitation.
      operationId: Cancel project invitation
      parameters:
      - description: Project ID
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      - description: User ID
        explode: false
        in: path
        name: invitation_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
      summary: Cancel project invitation
      tags:
      - Projects
    get:
      description: ""
      operationId: Project invitation detail
      parameters:
      - description: Project ID
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      - description: User ID
        explode: false
        in: path
        name: invitation_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                id: 113
                created: 2018-07-10T10:50:00+0200
                expires: 2018-07-10T11:50:00+0200
                reason: Help with component configuration
                role: admin
                user:
                  id: 125
                  name: test user 3
                  email: spam@keboola.com
                creator:
                  id: 123
                  name: test user
                  email: martin@keboola.com
              schema:
                $ref: '#/components/schemas/Invite_a_user_to_a_project_201_response'
          description: OK
      summary: Project invitation detail
      tags:
      - Projects
  /manage/projects/{project_id}/users:
    get:
      description: ""
      operationId: List project users
      parameters:
      - description: Project ID
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
              - id: 123
                name: test user
                email: martin@keboola.com
                features: []
                expires: null
                created: 2016-02-29T08:01:13+0200
                reason: ""
                role: admin
                status: active
                invitor:
                  id: 124
                  name: test user 2
                  email: spam@keboola.com
                approver: null
              - id: 124
                name: test user 2
                email: spam@keboola.com
                features: []
                expires: 2016-03-22T15:01:13+0200
                created: 2016-02-22T15:01:13+0200
                reason: temporary test
                role: guest
                status: active
                invitor: null
                approver:
                  id: 1
                  name: admin 1
                  email: dev@keboola.com
              schema:
                items:
                  $ref: '#/components/schemas/List_project_users_200_response_inner'
                type: array
          description: OK
      summary: List project users
      tags:
      - Projects
    post:
      description: |-
        Only members of the project or its organization are allowed to add new users to the project.

        An optional expiration (seconds) and reason for joining can be added to the request.
      operationId: Add a user to a project
      parameters:
      - description: Project ID
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              email: martin@keboola.com
              role: admin
              expirationSeconds: 3600
            schema:
              $ref: '#/components/schemas/Add_a_user_to_a_project_request'
      responses:
        "204":
          content: {}
          description: No Content
      summary: Add a user to a project
      tags:
      - Projects
  /manage/project-templates/:
    get:
      description: ""
      operationId: List templates
      parameters: []
      responses:
        "200":
          content:
            application/json:
              example:
              - id: poc15Days
                name: POC 15 days
                description: Proof of concept. 15 days trial.
                expirationDays: 15
                billedMonthlyPrice: null
                hasTryModeOn: false
                defaultBackend: snowflake
              - id: poc15DaysGuideMode
                name: POC Guide Mode
                description: Proof of concept. 15 days trial - Guide Mode.
                expirationDays: 15
                billedMonthlyPrice: null
                hasTryModeOn: true
                defaultBackend: snowflake
              schema:
                items:
                  $ref: '#/components/schemas/List_templates_200_response_inner'
                type: array
          description: OK
      summary: List templates
      tags:
      - Projects
  /manage/project-templates/{template_string_id}:
    get:
      description: ""
      operationId: Project template detail
      parameters:
      - description: Project string ID
        explode: false
        in: path
        name: template_string_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                id: poc15Days
                name: POC 15 days
                description: Proof of concept. 15 days trial.
                expirationDays: 15
                billedMonthlyPrice: null
                hasTryModeOn: false
                defaultBackend: snowflake
              schema:
                $ref: '#/components/schemas/Project_template_detail_200_response'
          description: OK
      summary: Project template detail
      tags:
      - Projects
  /manage/projects/{project_id}/users/{user_id}:
    delete:
      description: ""
      operationId: Delete a user from a project
      parameters:
      - description: Project ID
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      - description: User ID
        explode: false
        in: path
        name: user_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
      summary: Delete a user from a project
      tags:
      - Projects
    patch:
      description: ""
      operationId: Change role of a user in a project
      parameters:
      - description: Project ID
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      - description: User ID
        explode: false
        in: path
        name: user_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              role: admin
            schema:
              $ref: '#/components/schemas/Change_role_of_a_user_in_a_project_request'
      responses:
        "200":
          content:
            application/json:
              example:
                id: 123
                name: test user
                email: martin@keboola.com
                features: []
                expires: null
                created: 2016-02-29T08:01:13+0200
                reason: ""
                role: admin
                status: active
                invitor:
                  id: 124
                  name: test user 2
                  email: spam@keboola.com
                approver: null
              schema:
                $ref: '#/components/schemas/Change_role_of_a_user_in_a_project_200_response'
          description: OK
      summary: Change role of a user in a project
      tags:
      - Projects
  /manage/projects/{project_id}/join-project:
    post:
      description: |-
        If the project's organization allows autojoin (`allowAutoJoin` attribute is se to `true`), all members of the organization, its maintainers and superadmins are allowed to join the project. Otherwise only members of the organization can join the project.

        An optional expiration (in seconds) and reason for joining can be added to the request.
      operationId: Join a project
      parameters:
      - description: Project ID
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              reason: temporary test
              expirationSeconds: 3600
            schema:
              $ref: '#/components/schemas/Join_a_project_request'
      responses:
        "204":
          content: {}
          description: No Content
      summary: Join a project
      tags:
      - Projects
  /manage/projects/{project_id}/request-access:
    post:
      description: |-
        Create a join request to the project. All join requests have to be approved by a project member.

        An optional expiration (in seconds) and reason for joining can be added to the request.
      operationId: Request access to a project
      parameters:
      - description: Project ID
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              reason: temporary test
              expirationSeconds: 3600
            schema:
              $ref: '#/components/schemas/Join_a_project_request'
      responses:
        "201":
          content:
            application/json:
              example:
                id: 124
                created: 2016-02-22T15:01:13+0200
                expires: 2016-03-22T15:01:13+0200
                reason: temporary test
                project:
                  id: 324
                  name: Main project
              schema:
                $ref: '#/components/schemas/Request_access_to_a_project_201_response'
          description: Created
      summary: Request access to a project
      tags:
      - Projects
  /manage/projects/{project_id}/join-requests:
    get:
      description: ""
      operationId: List join requests
      parameters:
      - description: Project ID
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
              - id: 1234
                created: 2016-02-22T15:01:13+0200
                expires: 2016-03-22T15:01:13+0200
                reason: temporary test
                user:
                  id: 1
                  name: admin 1
                  email: dev@keboola.com
              - id: 1235
                created: 2016-02-30T11:50:13+0200
                expires: null
                reason: ""
                user:
                  id: 124
                  name: test user 2
                  email: spam@keboola.com
              schema:
                items:
                  $ref: '#/components/schemas/List_join_requests_200_response_inner'
                type: array
          description: OK
      summary: List join requests
      tags:
      - Projects
  /manage/projects/{project_id}/join-requests/{join_request_id}:
    delete:
      description: Only members of the project can reject join requests.
      operationId: Reject join request
      parameters:
      - description: Project ID
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      - description: Join Request ID
        explode: false
        in: path
        name: join_request_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
      summary: Reject join request
      tags:
      - Projects
    get:
      description: ""
      operationId: Join request detail
      parameters:
      - description: Project ID
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      - description: Join Request ID
        explode: false
        in: path
        name: join_request_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                id: 1235
                created: 2016-02-30T11:50:13+0200
                expires: null
                reason: ""
                user:
                  id: 124
                  name: test user 2
                  email: spam@keboola.com
              schema:
                $ref: '#/components/schemas/Join_request_detail_200_response'
          description: OK
      summary: Join request detail
      tags:
      - Projects
    put:
      description: |-
        Only members of the project can approve join requests.

        The user that submitted the join request will be added to the project.
      operationId: Approve join request
      parameters:
      - description: Project ID
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      - description: Join Request ID
        explode: false
        in: path
        name: join_request_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "202":
          content: {}
          description: Accepted
      summary: Approve join request
      tags:
      - Projects
  /manage/projects/{project_id}/disabled:
    post:
      description: ""
      operationId: Change project disabled status
      parameters:
      - description: Project ID
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              isDisabled: true
              disableReason: Project maintenance
              estimatedEndTime: +1 hour
            schema:
              $ref: '#/components/schemas/Change_project_disabled_status_request'
      responses:
        "200":
          content:
            application/json:
              example:
                id: 4088
                name: Martinšík
                type: production
                region: us-east-1
                created: 2017-12-11T09:02:13+0100
                expires: null
                features: []
                dataSizeBytes: 22691704832
                rowsCount: 4295727047
                hasMysql: false
                hasRedshift: false
                hasSnowflake: true
                hasSynapse: false
                hasExasol: false
                hasTeradata: false
                defaultBackend: snowflake
                hasTryModeOn: "0"
                limits:
                  components.jobsParallelism:
                    name: components.jobsParallelism
                    value: 10
                  goodData.dataSizeBytes:
                    name: goodData.dataSizeBytes
                    value: 1000000000
                  goodData.demoTokenEnabled:
                    name: goodData.demoTokenEnabled
                    value: 1
                  goodData.prodTokenEnabled:
                    name: goodData.prodTokenEnabled
                    value: 0
                  goodData.usersCount:
                    name: goodData.usersCount
                    value: 30
                  kbc.adminsCount:
                    name: kbc.adminsCount
                    value: 10
                  kbc.extractorsCount:
                    name: kbc.extractorsCount
                    value: 0
                  kbc.monthlyProjectPowerLimit:
                    name: kbc.monthlyProjectPowerLimit
                    value: 50
                  kbc.writersCount:
                    name: kbc.writersCount
                    value: 0
                  orchestrations.count:
                    name: orchestrations.count
                    value: 10
                  storage.dataSizeBytes:
                    name: storage.dataSizeBytes
                    value: 50000000000
                  storage.jobsParallelism:
                    name: storage.jobsParallelism
                    value: 10
                metrics:
                  kbc.adminsCount:
                    name: kbc.adminsCount
                    value: 1
                  orchestrations.count:
                    name: orchestrations.count
                    value: 1
                  storage.dataSizeBytes:
                    name: storage.dataSizeBytes
                    value: 22691704832
                  storage.rowsCount:
                    name: storage.rowsCount
                    value: 4295727047
                isDisabled: false
                billedMonthlyPrice: null
                dataRetentionTimeInDays: 7
                organization:
                  id: 5
                  name: Martinovo
                  crmId: ""
                  activityCenterProjectId: ""
                  created: 2013-12-31T11:22:33+0100
                  allowAutoJoin: true
                fileStorage:
                  id: 2
                  awsKey: 
                  region: us-east-1
                  filesBucket: kbc-sapi-files
                  owner: keboola
                  isDefault: true
                  created: ""
                  creator:
                    id: 0
                    name: null
                backends:
                  snowflake:
                    id: 353
                    host: keboola.snowflakecomputing.com
                    region: us-east-1
                    owner: keboola
                payAsYouGo:
                  purchasedCredits: 123
              schema:
                $ref: '#/components/schemas/ProjectModel'
          description: OK
      summary: Change project disabled status
      tags:
      - Projects
  /manage/projects/{project_id}/tokens:
    post:
      description: |-
        Requires the management token of admin who is either superuser or has joined the project previously. Alternatively it
        can be called with an application token with scope `manage:storage-tokens`.
      operationId: Create Storage token
      parameters:
      - description: Project ID
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              description: Test Token
              canManageBuckets: true
              canManageTokens: false
              canReadAllFileUploads: true
              canPurgeTrash: true
              expiresIn: 60
              bucketPermissions:
                in.c: ""
            schema:
              $ref: '#/components/schemas/Create_Storage_token_request'
      responses:
        "201":
          content:
            application/json:
              example:
                id: 3846
                token: TOKEN_VALUE
                created: 2013-03-28T13:31:50+0100
                description: martin@keboola.com
                uri: https://connection.keboola.com/v2/storage/tokens/3846
                isMasterToken: true
                canManageBuckets: true
                canManageTokens: true
                canReadAllFileUploads: true
                canPurgeTrash: true
                expires: null
                isExpired: false
                isDisabled: false
                dailyCapacity: 0
                bucketPermissions: {}
              schema:
                $ref: '#/components/schemas/Create_Storage_token_201_response'
          description: Created
      summary: Create Storage token
      tags:
      - Projects
  /manage/projects/{project_id}/credits:
    post:
      description: |-
        Changing balance of credits for PayGo projects.

        *Note: Only superadmin or user having assigned `pay-as-you-go-credits-admin` can change project credits balance.*
      operationId: Give credits
      parameters:
      - description: Project ID
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              amount: 10
              description: Promo credits
            schema:
              $ref: '#/components/schemas/Give_credits_request'
      responses:
        "201":
          content:
            application/json:
              example:
                id: 259
                creditsAmount: 10
                moneyAmount: null
                idStripeInvoice: null
                description: Promo credits
                created: 2019-06-17T15:07:48+01:00
              schema:
                $ref: '#/components/schemas/Give_credits_201_response'
          description: Created
      summary: Give credits
      tags:
      - Projects
  /manage/deleted-projects/{project_id}:
    delete:
      description: |-
        Cancelling project deletion is allowed only for a super admin or user with feature `can-manage-deleted-projects`.
        If the project has set expiration, the expiration is reset on the project renewal.
        You can also specify new expiration by `expirationDays` parameter.
      operationId: Cancel project deletion
      parameters:
      - description: Project ID
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      - description: Project expiration in days
        explode: true
        in: query
        name: expirationDays
        required: false
        schema:
          type: number
        style: form
      responses:
        "204":
          content: {}
          description: No Content
      summary: Cancel project deletion
      tags:
      - Deleted Projects
    get:
      description: This endpoint can also be accessed using application tokens with
        scope `deleted-projects:read` or user token with feature `can-manage-deleted-projects`.
      operationId: Deleted project detail
      parameters:
      - description: Deleted project ID
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                id: 101
                name: test project
                type: production
                region: eu-west-1
                created: 2017-02-15T14:25:15+0100
                expires: null
                features: []
                dataSizeBytes: 49152
                rowsCount: 200
                hasMysql: false
                hasRedshift: false
                hasSynapse: false
                hasExasol: false
                hasTeradata: false
                hasSnowflake: true
                defaultBackend: snowflake
                hasTryModeOn: "0"
                limits: {}
                metrics: {}
                isDisabled: false
                billedMonthlyPrice: null
                dataRetentionTimeInDays: 1
                isPurged: false
                isDeleted: true
                deletedTime: 2018-02-11T14:25:15+0100
                purgedTime: null
              schema:
                $ref: '#/components/schemas/Deleted_project_detail_200_response'
          description: OK
      summary: Deleted project detail
      tags:
      - Deleted Projects
  /manage/deleted-projects/{project_id}/purge:
    post:
      description: Enqueues the command that fully deletes a project and returns its
        execution ID for monitoring.
      operationId: Purge deleted project
      parameters:
      - description: Deleted project ID
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              ignoreBackendErrors: false
            schema:
              $ref: '#/components/schemas/Purge_deleted_project_request'
      responses:
        "200":
          content:
            application/json:
              example:
                commandExecutionId: 123-abcd
              schema:
                $ref: '#/components/schemas/Purge_deleted_project_200_response'
          description: OK
      summary: Purge deleted project
      tags:
      - Deleted Projects
  /manage/deleted-projects:
    get:
      description: |-
        Listing deleted projects is allowed only for a super admin  or user with feature `can-manage-deleted-projects`.

        #### Projects filtering

        Projects can be filtered by various filters:

        * *organizationId* - organization ID

        * *name* - name of the project

        #### Projects pagination

        * *limit* - number of returned projects; default value: 100

        * *offset* - pagination offset
      operationId: List deleted projects
      parameters: []
      responses:
        "200":
          content:
            application/json:
              example:
              - id: 101
                name: test project
                type: production
                region: eu-west-1
                created: 2017-02-15T14:25:15+0100
                expires: null
                features: []
                dataSizeBytes: 49152
                rowsCount: 200
                hasMysql: false
                hasRedshift: false
                hasSnowflake: true
                hasSynapse: false
                hasTeradata: false
                hasExasol: false
                defaultBackend: snowflake
                hasTryModeOn: "0"
                limits: {}
                metrics: {}
                isDisabled: false
                billedMonthlyPrice: null
                dataRetentionTimeInDays: 7
                isPurged: false
                isDeleted: true
                deletedTime: 2018-02-11T14:25:15+0100
                purgedTime: null
                organization:
                  id: 1
                  name: Keboola Tests
                  created: ""
                  allowAutoJoin: true
              - id: 104
                name: another test project
                type: production
                region: eu-west-1
                created: 2017-02-15T14:25:15+0100
                expires: null
                features: []
                dataSizeBytes: 49152
                rowsCount: 200
                hasMysql: false
                hasRedshift: false
                hasSnowflake: true
                hasSynapse: false
                hasTeradata: false
                hasExasol: false
                defaultBackend: snowflake
                hasTryModeOn: "0"
                limits: {}
                metrics: {}
                isDisabled: false
                billedMonthlyPrice: null
                dataRetentionTimeInDays: 7
                isPurged: false
                isDeleted: true
                deletedTime: 2018-02-11T14:25:15+0100
                purgedTime: null
                organization:
                  id: 1
                  name: Keboola Tests
                  created: ""
                  allowAutoJoin: true
              schema:
                items:
                  $ref: '#/components/schemas/List_deleted_projects_200_response_inner'
                type: array
          description: OK
      summary: List deleted projects
      tags:
      - Deleted Projects
  /manage/users/{user_id_or_email}:
    delete:
      description: |-
        It will completly remove user from everywhere (projects, organizations and maintainers).
        Removes also personal data of user (e-mail and name).
      operationId: Remove User
      parameters:
      - description: User ID or email
        explode: false
        in: path
        name: user_id_or_email
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
      summary: Remove User
      tags:
      - Users
    get:
      description: ""
      operationId: User detail
      parameters:
      - description: User ID or email
        explode: false
        in: path
        name: user_id_or_email
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                id: 2
                name: Martin
                email: spelling@keboola.com
                features:
                - inline-manual
                mfaEnabled: true
                canAccessLogs: true
                isSuperAdmin: true
              schema:
                $ref: '#/components/schemas/User_detail_200_response'
          description: OK
      summary: User detail
      tags:
      - Users
    put:
      description: ""
      operationId: Update a user
      parameters:
      - description: User ID or email
        explode: false
        in: path
        name: user_id_or_email
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              name: Martin
            schema:
              $ref: '#/components/schemas/Update_a_user_request'
      responses:
        "200":
          content:
            application/json:
              example:
                id: 2
                name: Martin
                email: spelling@keboola.com
                features:
                - inline-manual
                mfaEnabled: true
                canAccessLogs: true
                isSuperAdmin: true
              schema:
                $ref: '#/components/schemas/User_detail_200_response'
          description: OK
      summary: Update a user
      tags:
      - Users
  /manage/users/{user_id_or_email}/mfa:
    delete:
      description: ""
      operationId: Disable MFA for User
      parameters:
      - description: User ID or email
        explode: false
        in: path
        name: user_id_or_email
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
      summary: Disable MFA for User
      tags:
      - Users
  /manage/users/{user_id_or_email}/super-admin:
    delete:
      description: ""
      operationId: Remove super admin privilege from User
      parameters:
      - description: User ID or email
        explode: false
        in: path
        name: user_id_or_email
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                id: 2
                name: Corrected Spelling
                email: spelling@keboola.com
                features:
                - inline-manual
                mfaEnabled: true
                canAccessLogs: false
                isSuperAdmin: false
              schema:
                $ref: '#/components/schemas/User_detail_200_response'
          description: OK
      summary: Remove super admin privilege from User
      tags:
      - Users
  /manage/users/{user_id_or_email}/metadata:
    get:
      description: Each user can list only own metadata. Super admins can list everyone's
        metadata.
      operationId: List user Metadata
      parameters:
      - description: Project ID
        explode: false
        in: path
        name: user_id_or_email
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
              - id: 123
                provider: user
                timestamp: 2021-02-17T15:05:21+0100
                key: KBC.SomeEnity.metadataKey
                value: Some value
              - id: 124
                provider: user
                timestamp: 2021-02-17T15:05:21+0100
                key: someMetadataKey
                value: Some value
              schema:
                items:
                  $ref: '#/components/schemas/List_organization_Metadata_200_response_inner'
                type: array
          description: OK
      summary: List user Metadata
      tags:
      - Users
    post:
      description: |-
        Sets multiple metadata with one call. If the given key and provider combination already exist
        for the user, the data will be updated with the new value and timestamp.
        Each user can set only own metadata. Super admins can set everyone's metadata.
      operationId: Set user metadata
      parameters:
      - description: Project ID
        explode: false
        in: path
        name: user_id_or_email
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              provider: user
              metadata:
              - key: KBC.SomeEnity.metadataKey
                value: Some value
              - key: someMetadataKey
                value: Some value
            schema:
              $ref: '#/components/schemas/Set_maintainer_metadata_request'
      responses:
        "201":
          content:
            application/json:
              example:
              - id: 123
                provider: user
                timestamp: 2021-02-17T15:05:21+0100
                key: KBC.SomeEnity.metadataKey
                value: Some value
              - id: 124
                provider: user
                timestamp: 2021-02-17T15:05:21+0100
                key: someMetadataKey
                value: Some value
              schema:
                items:
                  $ref: '#/components/schemas/List_organization_Metadata_200_response_inner'
                type: array
          description: Created
      summary: Set user metadata
      tags:
      - Users
  /manage/users/{user_id_or_email}/metadata/{metadata_id}:
    delete:
      description: Each user can delete only own metadata. Super admins can delete
        everyone's metadata.
      operationId: Remove User Metadata
      parameters:
      - description: User ID
        explode: false
        in: path
        name: user_id_or_email
        required: true
        schema:
          type: string
        style: simple
      - description: Metadata ID
        explode: false
        in: path
        name: metadata_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
      summary: Remove User Metadata
      tags:
      - Users
  /manage/current-user/maintainers-invitations:
    get:
      description: ""
      operationId: List my maintainer invitations
      parameters: []
      responses:
        "200":
          content:
            application/json:
              example:
              - id: 113
                created: 2018-07-10T11:13:00+0200
                maintainer:
                  id: 7
                  name: Keboola CZ
                creator:
                  id: 2
                  name: Martin Halamicek
                  email: martin@keboola.com
              schema:
                items:
                  $ref: '#/components/schemas/List_my_maintainer_invitations_200_response_inner'
                type: array
          description: OK
      summary: List my maintainer invitations
      tags:
      - My Account
  /manage/current-user/maintainers-invitations/{invitation_id}:
    get:
      description: ""
      operationId: My maintainer invitation detail
      parameters:
      - description: Invitation ID
        explode: false
        in: path
        name: invitation_id
        required: true
        schema:
          type: number
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                id: 113
                created: 2018-07-10T11:13:00+0200
                maintainer:
                  id: 7
                  name: Keboola CZ
                creator:
                  id: 2
                  name: Martin Halamicek
                  email: martin@keboola.com
              schema:
                $ref: '#/components/schemas/List_my_maintainer_invitations_200_response_inner'
          description: OK
      summary: My maintainer invitation detail
      tags:
      - My Account
    put:
      description: Invitation will be accepted and current user will become a member
        of the maintainer.
      operationId: Accept a maintainer invitation
      parameters:
      - description: Invitation ID
        explode: false
        in: path
        name: invitation_id
        required: true
        schema:
          type: number
        style: simple
      responses:
        "202":
          content: {}
          description: Accepted
      summary: Accept a maintainer invitation
      tags:
      - My Account
  /manage/current-user/organizations-invitations:
    get:
      description: ""
      operationId: List my organization invitations
      parameters: []
      responses:
        "200":
          content:
            application/json:
              example:
              - id: 113
                created: 2018-07-10T11:13:00+0200
                organization:
                  id: 7
                  name: Keboola CZ
                creator:
                  id: 2
                  name: Martin Halamicek
                  email: martin@keboola.com
              schema:
                items:
                  $ref: '#/components/schemas/List_my_organization_invitations_200_response_inner'
                type: array
          description: OK
      summary: List my organization invitations
      tags:
      - My Account
  /manage/current-user/organizations-invitations/{invitation_id}:
    get:
      description: ""
      operationId: My organization invitation detail
      parameters:
      - description: Invitation ID
        explode: false
        in: path
        name: invitation_id
        required: true
        schema:
          type: number
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                id: 113
                created: 2018-07-10T11:13:00+0200
                organization:
                  id: 7
                  name: Keboola CZ
                creator:
                  id: 2
                  name: Martin Halamicek
                  email: martin@keboola.com
              schema:
                $ref: '#/components/schemas/List_my_organization_invitations_200_response_inner'
          description: OK
      summary: My organization invitation detail
      tags:
      - My Account
    put:
      description: Invitation will be accepted and current user will become a member
        of the organization.
      operationId: Accept an organization invitation
      parameters:
      - description: Invitation ID
        explode: false
        in: path
        name: invitation_id
        required: true
        schema:
          type: number
        style: simple
      responses:
        "202":
          content: {}
          description: Accepted
      summary: Accept an organization invitation
      tags:
      - My Account
  /manage/current-user/projects-join-requests:
    get:
      description: ""
      operationId: List my join requests
      parameters: []
      responses:
        "200":
          content:
            application/json:
              example:
              - id: 124
                created: 2016-02-22T15:01:13+0200
                expires: 2016-03-22T15:01:13+0200
                reason: temporary test
                project:
                  id: 324
                  name: Main project
              - id: 127
                crated: 2014-11-11T08:40:51.620Z
                expires: null
                reason: ""
                project:
                  id: 423
                  name: Development
              schema:
                items:
                  $ref: '#/components/schemas/List_my_join_requests_200_response_inner'
                type: array
          description: OK
      summary: List my join requests
      tags:
      - My Account
  /manage/current-user/projects-join-requests/{join_request_id}:
    delete:
      description: ""
      operationId: Cancel a join request
      parameters:
      - description: ""
        example: "1"
        explode: false
        in: path
        name: join_request_id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
      summary: Cancel a join request
      tags:
      - My Account
    get:
      description: ""
      operationId: My join request detail
      parameters:
      - description: ""
        example: "1"
        explode: false
        in: path
        name: join_request_id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                id: 124
                created: 2016-02-22T15:01:13+0200
                expires: 2016-03-22T15:01:13+0200
                reason: temporary test
                project:
                  id: 324
                  name: Main project
              schema:
                $ref: '#/components/schemas/Request_access_to_a_project_201_response'
          description: OK
      summary: My join request detail
      tags:
      - My Account
  /manage/current-user/projects-invitations:
    get:
      description: ""
      operationId: List my project invitations
      parameters: []
      responses:
        "200":
          content:
            application/json:
              example:
              - id: 113
                created: 2018-07-10T11:13:00+0200
                expires: null
                reason: ""
                role: admin
                project:
                  id: 7
                  name: Martinovo
                creator:
                  id: 2
                  name: Martin Halamicek
                  email: martin@keboola.com
              schema:
                items:
                  $ref: '#/components/schemas/List_my_project_invitations_200_response_inner'
                type: array
          description: OK
      summary: List my project invitations
      tags:
      - My Account
  /manage/current-user/projects-invitations/{invitation_id}:
    delete:
      description: ""
      operationId: Decline a invitation
      parameters:
      - description: Invitation ID
        explode: false
        in: path
        name: invitation_id
        required: true
        schema:
          type: number
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
      summary: Decline a invitation
      tags:
      - My Account
    get:
      description: ""
      operationId: My project invitation detail
      parameters:
      - description: Invitation ID
        explode: false
        in: path
        name: invitation_id
        required: true
        schema:
          type: number
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                id: 113
                created: 2018-07-10T11:13:00+0200
                expires: null
                reason: ""
                role: admin
                project:
                  id: 7
                  name: Martinovo
                creator:
                  id: 2
                  name: Martin Halamicek
                  email: martin@keboola.com
              schema:
                $ref: '#/components/schemas/List_my_project_invitations_200_response_inner'
          description: OK
      summary: My project invitation detail
      tags:
      - My Account
    put:
      description: Invitation will be accepted and current user will be added to the
        project.
      operationId: Accept a project invitation
      parameters:
      - description: Invitation ID
        explode: false
        in: path
        name: invitation_id
        required: true
        schema:
          type: number
        style: simple
      responses:
        "202":
          content: {}
          description: Accepted
      summary: Accept a project invitation
      tags:
      - My Account
  /manage/current-user/promo-codes:
    get:
      description: ""
      operationId: List used promo codes
      parameters: []
      responses:
        "200":
          content:
            application/json:
              example:
              - code: TEST1568723795
                usedAt: 2019-09-17T15:14:38+0200
                project:
                  id: 89
                  name: dev user (TEST-1568723795)
              - code: TEST1568723853
                usedAt: 2019-09-17T15:17:38+0200
                project:
                  id: 90
                  name: dev user (TEST-1568723853)
              schema:
                items:
                  $ref: '#/components/schemas/List_used_promo_codes_200_response_inner'
                type: array
          description: OK
      summary: List used promo codes
      tags:
      - My Account
    post:
      description: Create a new project from given promo code
      operationId: Create project
      parameters: []
      requestBody:
        content:
          application/json:
            example:
              code: TEST1568723795
            schema:
              $ref: '#/components/schemas/Create_project_request'
      responses:
        "201":
          content:
            application/json:
              example:
                id: 89
                name: dev user (TEST1568723795)
                type: poc6months
                region: eu-central-1
                created: 2019-09-17T15:14:24+0200
                expires: 2020-03-18T14:14:24+0100
                features: []
                dataSizeBytes: 0
                rowsCount: 0
                hasMysql: false
                hasRedshift: false
                hasSnowflake: true
                hasExasol: false
                hasSynapse: false
                hasTeradata: false
                defaultBackend: snowflake
                hasTryModeOn: "0"
                limits:
                  components.jobsParallelism:
                    name: components.jobsParallelism
                    value: 10
                  goodData.dataSizeBytes:
                    name: goodData.dataSizeBytes
                    value: 500000000
                  goodData.demoTokenEnabled:
                    name: goodData.demoTokenEnabled
                    value: 1
                  goodData.prodTokenEnabled:
                    name: goodData.prodTokenEnabled
                    value: 0
                  goodData.usersCount:
                    name: goodData.usersCount
                    value: 10
                  kbc.adminsCount:
                    name: kbc.adminsCount
                    value: 10
                  kbc.extractorsCount:
                    name: kbc.extractorsCount
                    value: 0
                  kbc.writersCount:
                    name: kbc.writersCount
                    value: 0
                  orchestrations.count:
                    name: orchestrations.count
                    value: 3
                  storage.dataSizeBytes:
                    name: storage.dataSizeBytes
                    value: 3500000000
                  storage.jobsParallelism:
                    name: storage.jobsParallelism
                    value: 10
                metrics: {}
                isDisabled: false
                billedMonthlyPrice: null
                dataRetentionTimeInDays: 1
              schema:
                $ref: '#/components/schemas/Create_project_201_response'
          description: Created
      summary: Create project
      tags:
      - My Account
  /manage/maintainers/{maintainer_id}/promo-codes:
    get:
      description: ""
      operationId: Retrieve all promo codes
      parameters:
      - description: ""
        example: "1"
        explode: false
        in: path
        name: maintainer_id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
              - code: GUIDE-MODE
                expires: 2029-08-06T23:59:59+0200
                organization:
                  id: 1
                  name: Keboola Internal
                  created: 2019-09-09T14:43:29+0200
                  allowAutoJoin: true
                  crmId: ""
                  activityCenterProjectId: 123
                  mfaRequired: false
                projectTemplate:
                  stringId: poc15DaysGuideMode
                  name: POC Guide Mode
                  description: Proof of concept. 15 days trial - Guide Mode.
                  expirationDays: 15
                  billedMonthlyPrice: null
                  hasTryModeOn: true
                  defaultBackend: snowflake
              - code: test
                expires: 2019-11-12T14:07:48+0200
                organization:
                  id: 1
                  name: Keboola Internal
                  created: 2019-09-09T14:43:29+0200
                  allowAutoJoin: true
                  crmId: ""
                  activityCenterProjectId: 123
                  mfaRequired: false
                projectTemplate:
                  stringId: poc15DaysGuideMode
                  name: POC Guide Mode
                  description: Proof of concept. 15 days trial - Guide Mode.
                  expirationDays: 15
                  billedMonthlyPrice: null
                  hasTryModeOn: true
                  defaultBackend: snowflake
              schema:
                items:
                  $ref: '#/components/schemas/Retrieve_all_promo_codes_200_response_inner'
                type: array
          description: OK
      summary: Retrieve all promo codes
      tags:
      - Promo codes
    post:
      description: "To create a new promo-code, provide the following parameters as\
        \ JSON in the request body:"
      operationId: Create new promo codes
      parameters:
      - description: ""
        example: "1"
        explode: false
        in: path
        name: maintainer_id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            example:
              code: TEST
              expirationDays: 10
              organizationId: 1
              projectTemplateStringId: poc15DaysGuideMode
            schema:
              $ref: '#/components/schemas/Create_new_promo_codes_request'
      responses:
        "201":
          content:
            application/json:
              example:
                code: TEST
                expires: 2019-08-23 23:59:59
                organization:
                  id: 1
                  name: Keboola Internal
                  created: 2019-09-09T14:43:29+0200
                  allowAutoJoin: true
                  crmId: ""
                  activityCenterProjectId: 123
                  mfaRequired: false
                projectTemplate:
                  stringId: poc15DaysGuideMode
                  name: POC Guide Mode
                  description: Proof of concept. 15 days trial - Guide Mode.
                  expirationDays: 15
                  billedMonthlyPrice: null
                  hasTryModeOn: true
                  defaultBackend: snowflake
              schema:
                $ref: '#/components/schemas/Create_new_promo_codes_201_response'
          description: Created
      summary: Create new promo codes
      tags:
      - Promo codes
  /manage/features?type={type}:
    get:
      description: |-
        Gets all features. To filter only the features with a specific type,
        add the `type` parameter to your query.

        In case the token you are using for the call does not have super admin permissions,
        the response will only contain features that have `canBeManageByAdmin: true`, `canBeManagedViaAPI: true` set.
      operationId: Retrieve all features
      parameters:
      - description: Type of features you want to filter
        example: admin
        explode: false
        in: path
        name: type
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
              - id: 1
                name: show-new-design
                type: admin
                title: Show new design
                description: Users with this feature will see new UI
                created: 2016-04-28T15:24:51.620Z
              schema:
                items:
                  $ref: '#/components/schemas/Retrieve_all_features_200_response_inner'
                type: array
          description: OK
      summary: Retrieve all features
      tags:
      - SUPER - Features
  /manage/features/{id}:
    delete:
      description: ""
      operationId: Delete a feature
      parameters:
      - description: ID of the feature to delete
        example: "1"
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: number
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
      summary: Delete a feature
      tags:
      - SUPER - Features
    get:
      description: |-
        In case your token that you use when calling does not have super admin permissions,
        the feature must have parameters `canBeManageByAdmin: true`, `canBeManagedViaAPI: true` set to be able to view its detail.
        Otherwise the response will be 404 Not Found.
      operationId: Retrieve one feature
      parameters:
      - description: ID of the feature
        example: "1"
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: number
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                id: 1
                name: show-new-design
                type: admin
                title: Show new design
                description: Users with this feature will see new UI
                created: 2016-04-28T15:24:51.620Z
              schema:
                $ref: '#/components/schemas/Retrieve_all_features_200_response_inner'
          description: OK
      summary: Retrieve one feature
      tags:
      - SUPER - Features
    patch:
      description: A partial update of a feature
      operationId: Update a feature
      parameters:
      - description: ID of the feature to update
        example: "1"
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: number
        style: simple
      requestBody:
        content:
          application/json:
            example:
              title: Show new design
              description: Users with this feature will see new UI
              canBeManageByAdmin: false
              canBeManagedViaAPI: true
            schema:
              $ref: '#/components/schemas/Update_a_feature_request'
      responses:
        "200":
          content: {}
          description: OK
      summary: Update a feature
      tags:
      - SUPER - Features
  /manage/features/{id}/projects:
    get:
      description: Gets the projects with the specified feature assigned.
      operationId: Retrieve feature projects
      parameters:
      - description: ID of the feature
        example: "1"
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: number
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
              - id: 771
                name: Test project
              schema:
                items:
                  $ref: '#/components/schemas/Token_Verification_200_response_creator'
                type: array
          description: OK
      summary: Retrieve feature projects
      tags:
      - SUPER - Features
  /manage/features/{id}/admins:
    get:
      description: Gets the users with the specified feature assigned.
      operationId: Retrieve feature users
      parameters:
      - description: ID of the feature
        example: "1"
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: number
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
              - id: 1
                name: Test user
                email: test@example.com
              schema:
                items:
                  $ref: '#/components/schemas/List_maintainers_invitations_200_response_inner_user'
                type: array
          description: OK
      summary: Retrieve feature users
      tags:
      - SUPER - Features
  /manage/features:
    post:
      description: |-
        **Unless there is a specific reason why the feature MUST NOT be present on some stack, implement it through migration.**

        To create a new feature, provide the following parameters as JSON in the request body:

        If the `canBeManageByAdmin` parameter is true, the token of a user without a super admin role can assign the feature.
        In the case of the `project` feature, it must be in the project and have the `Admin` role.
        It is not enough to have the maintainer admin or organization admin permission.

        In the case of the `admin` role, an admin who does not have super admin privileges can only set the feature for himself.
      operationId: Create a feature
      parameters: []
      requestBody:
        content:
          application/json:
            example:
              name: show-new-design
              type: admin
              title: Show new design
              description: Users with this feature will see new UI
              canBeManageByAdmin: false
              canBeManagedViaAPI: true
            schema:
              $ref: '#/components/schemas/Create_a_feature_request'
      responses:
        "201":
          content:
            application/json:
              example:
                id: 1
                name: show-new-design
                type: admin
                title: Show new design
                description: Users with this feature will see new UI
                canBeManageByAdmin: false
                canBeManagedViaAPI: true
                created: 2016-04-28T15:24:51.620Z
              schema:
                $ref: '#/components/schemas/Create_a_feature_201_response'
          description: Created
      summary: Create a feature
      tags:
      - SUPER - Features
  /manage/projects/{project_id}/features:
    post:
      description: |-
        If the parameter `canBeManageByAdmin` of the feature is `false`, project features can be assigned only by a super admin.

        If the `canBeManageByAdmin` is `true`, the project features can be set by an admin without super admin privileges.
        But this admin must be in the project to which he wants to assign this features with the role `Admin`.

        Organization and maintainer admin have no effect and the user needs activated `can-manage-features` feature.

        *Note: Features have to exist before they can be added to a project.*
      operationId: Add a project feature
      parameters:
      - description: Project ID
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              feature: show-new-design
            schema:
              $ref: '#/components/schemas/Add_a_project_feature_request'
      responses:
        "200":
          content:
            application/json:
              example:
                id: 4088
                name: Martinšík
                type: production
                region: us-east-1
                created: 2017-12-11T09:02:13+0100
                expires: null
                features: []
                dataSizeBytes: 22691704832
                rowsCount: 4295727047
                hasMysql: false
                hasRedshift: false
                hasSnowflake: true
                hasSynapse: false
                hasExasol: false
                hasTeradata: false
                defaultBackend: snowflake
                hasTryModeOn: "0"
                limits:
                  components.jobsParallelism:
                    name: components.jobsParallelism
                    value: 10
                  goodData.dataSizeBytes:
                    name: goodData.dataSizeBytes
                    value: 1000000000
                  goodData.demoTokenEnabled:
                    name: goodData.demoTokenEnabled
                    value: 1
                  goodData.prodTokenEnabled:
                    name: goodData.prodTokenEnabled
                    value: 0
                  goodData.usersCount:
                    name: goodData.usersCount
                    value: 30
                  kbc.adminsCount:
                    name: kbc.adminsCount
                    value: 10
                  kbc.extractorsCount:
                    name: kbc.extractorsCount
                    value: 0
                  kbc.monthlyProjectPowerLimit:
                    name: kbc.monthlyProjectPowerLimit
                    value: 50
                  kbc.writersCount:
                    name: kbc.writersCount
                    value: 0
                  orchestrations.count:
                    name: orchestrations.count
                    value: 10
                  storage.dataSizeBytes:
                    name: storage.dataSizeBytes
                    value: 50000000000
                  storage.jobsParallelism:
                    name: storage.jobsParallelism
                    value: 10
                metrics:
                  kbc.adminsCount:
                    name: kbc.adminsCount
                    value: 1
                  orchestrations.count:
                    name: orchestrations.count
                    value: 1
                  storage.dataSizeBytes:
                    name: storage.dataSizeBytes
                    value: 22691704832
                  storage.rowsCount:
                    name: storage.rowsCount
                    value: 4295727047
                isDisabled: false
                billedMonthlyPrice: null
                dataRetentionTimeInDays: 7
                organization:
                  id: 5
                  name: Martinovo
                  crmId: ""
                  activityCenterProjectId: ""
                  created: 2013-12-31T11:22:33+0100
                  allowAutoJoin: true
                fileStorage:
                  id: 2
                  awsKey: 
                  region: us-east-1
                  filesBucket: kbc-sapi-files
                  owner: keboola
                  isDefault: true
                  created: ""
                  creator:
                    id: 0
                    name: null
                backends:
                  snowflake:
                    id: 353
                    host: keboola.snowflakecomputing.com
                    region: us-east-1
                    owner: keboola
                payAsYouGo:
                  purchasedCredits: 123
              schema:
                $ref: '#/components/schemas/ProjectModel'
          description: OK
      summary: Add a project feature
      tags:
      - SUPER - Features
  /manage/projects/{project_id}/features/{feature}:
    delete:
      description: |-
        If the parameter `canBeManageByAdmin` of the feature is `false`, project features can be removed only by a super admin.

        If the `canBeManageByAdmin` is `true`, the project features can be removed by an admin without super admin privileges.
        But this admin must be in the project to which he wants to remove this features with the role `Admin`.

        Organization and maintainer admin have no effect and the user needs activated `can-manage-features` feature.
      operationId: Remove a project feature
      parameters:
      - description: Project ID
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      - description: Feature string ID
        example: show-new-design
        explode: false
        in: path
        name: feature
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
      summary: Remove a project feature
      tags:
      - SUPER - Features
  /manage/users/{user_id_or_email}/features:
    post:
      description: |-
        If the parameter `canBeManageByAdmin` of the feature is `false`, project features can be set only by a super admin.
        If the `canBeManageByAdmin` parameter of the feature is `true`, the feature can be assigned by an admin without super admin permission,
        but he can assign the feature only to himself.

        Organization and maintainer admin have no effect.

        *Note: Features have to exist before they can be added to a user.*
      operationId: Add a user feature
      parameters:
      - description: User ID or email
        explode: false
        in: path
        name: user_id_or_email
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              feature: show-new-design
            schema:
              $ref: '#/components/schemas/Add_a_project_feature_request'
      responses:
        "200":
          content:
            application/json:
              example:
                id: 2
                name: Martin Halamicek
                email: martin@keboola.com
                features:
                - inline-manual
              schema:
                $ref: '#/components/schemas/Add_a_user_feature_200_response'
          description: OK
      summary: Add a user feature
      tags:
      - SUPER - Features
  /manage/users/{user_id_or_email}/features/{feature}:
    delete:
      description: |-
        If the parameter `canBeManageByAdmin` of the feature is `false`, project features can be removed only by a super admin.
        If the `canBeManageByAdmin` parameter of the feature is `true`, the feature can be removed by an admin without super admin permission,
        but he can assign the feature only to himself.

        Organization and maintainer admin have no effect.
      operationId: Remove a user feature
      parameters:
      - description: User ID or email
        explode: false
        in: path
        name: user_id_or_email
        required: true
        schema:
          type: string
        style: simple
      - description: Feature name
        example: show-new-design
        explode: false
        in: path
        name: feature
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                id: 2
                name: Martin Halamicek
                email: martin@keboola.com
                features:
                - inline-manual
              schema:
                $ref: '#/components/schemas/Add_a_user_feature_200_response'
          description: OK
      summary: Remove a user feature
      tags:
      - SUPER - Features
  /manage/project-templates/{template}/features:
    get:
      description: Lists features assigned to a project template.
      operationId: List features
      parameters:
      - description: StringId of project template
        explode: false
        in: path
        name: template
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
              - id: 52
                name: test-feature
                type: project
                title: Test feature
                description: project template test feature
                created: 2018-04-12T21:46:37+0200
              schema:
                items:
                  $ref: '#/components/schemas/Retrieve_all_features_200_response_inner'
                type: array
          description: OK
      summary: List features
      tags:
      - SUPER - Features
    post:
      description: "*Note: Features have to exist before they can be added to a project\
        \ template and have to be of the type `project`.*"
      operationId: Add a feature
      parameters:
      - description: StringId of project template
        explode: false
        in: path
        name: template
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              feature: show-new-design
            schema:
              $ref: '#/components/schemas/Add_a_project_feature_request'
      responses:
        "201":
          content: {}
          description: Created
      summary: Add a feature
      tags:
      - SUPER - Features
  /manage/project-templates/{template}/features/{feature}:
    delete:
      description: Removes a feature assigned to a project template.
      operationId: Remove a feature
      parameters:
      - description: StringId of project template
        explode: false
        in: path
        name: template
        required: true
        schema:
          type: string
        style: simple
      - description: Feature name
        example: show-new-design
        explode: false
        in: path
        name: feature
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
      summary: Remove a feature
      tags:
      - SUPER - Features
  /manage/file-storage-s3:
    get:
      description: ""
      operationId: List storages
      parameters: []
      responses:
        "200":
          content:
            application/json:
              example:
              - awsKey: SFASDF
                filesBucket: kbc-sapi-files
                region: us-east-1
                owner: keboola
                id: "123"
                isDefault: "false"
                provider: aws
                created: "2019"
                creator:
                  id: "123"
                  name: name
              schema:
                items: {}
                type: array
          description: OK
      summary: List storages
      tags:
      - SUPER - File Storage Management
    post:
      description: |-
        Superuser credentials are not required for storage registration

        New S3 file Storage will be registered. Provided AWS credentials are verified and required permissions are validated.
        The Storage region is automatically detected.
      operationId: Create new AWS S3 Storage
      parameters: []
      requestBody:
        content:
          application/json:
            example:
              awsKey: SFASDF
              filesBucket: kbc-sapi-files
              region: us-east-1
              owner: keboola
              awsSecret: xxxx
            schema:
              $ref: '#/components/schemas/Create_new_AWS_S3_Storage_request'
      responses:
        "201":
          content:
            application/json:
              example:
                awsKey: SFASDF
                filesBucket: kbc-sapi-files
                region: us-east-1
                owner: keboola
                id: "123"
                isDefault: "false"
                provider: aws
                created: "2019"
                creator:
                  id: "123"
                  name: name
              schema:
                $ref: '#/components/schemas/Create_new_AWS_S3_Storage_201_response'
          description: Created
      summary: Create new AWS S3 Storage
      tags:
      - SUPER - File Storage Management
  /manage/file-storage-s3/{file_storage_id}/default:
    post:
      description: ""
      operationId: Set S3 Storage as default
      parameters:
      - description: File Storage ID
        explode: false
        in: path
        name: file_storage_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "201":
          content:
            application/json:
              example:
                awsKey: SFASDF
                filesBucket: kbc-sapi-files
                region: us-east-1
                owner: keboola
                id: "123"
                isDefault: "false"
                provider: aws
                created: "2019"
                creator:
                  id: "123"
                  name: name
              schema:
                $ref: '#/components/schemas/Create_new_AWS_S3_Storage_201_response'
          description: Created
      summary: Set S3 Storage as default
      tags:
      - SUPER - File Storage Management
  /manage/file-storage-gcs:
    get:
      description: Returns all registered Google Cloud Storages.
      operationId: List Google Cloud Storage
      parameters: []
      responses:
        "200":
          content:
            application/json:
              example:
              - id: 123
                isDefault: false
                provider: gcp
                region: europe-west1
                created: 2019-06-17T15:07:48+01:00
                creator:
                  id: 123
                  name: Joe "The Admin" Doe
                gcsCredentials:
                  type: service_account
                  project_id: "123456789"
                  private_key_id: xxx
                  client_email: something@else.iam.gserviceaccount.com
                  client_id: "123456789"
                  auth_uri: https://accounts.google.com/o/oauth2/auth
                  token_uri: https://oauth2.googleapis.com/token
                  auth_provider_x509_cert_url: https://www.googleapis.com/oauth2/v1/certs
                  client_x509_cert_url: https://www.googleapis.com/robot/v1/metadata/x509/something
                gcsSnowflakeIntegrationName: KEBOOLA_123_GCS
                filesBucket: my-bucket
              schema:
                items: {}
                type: array
          description: OK
      summary: List Google Cloud Storage
      tags:
      - SUPER - File Storage Management
    post:
      description: |-
        Superuser credentials are not required for storage registration

        Will register new Google Cloud Storage for using inside KBC. Connection wil be verified during registraion.
      operationId: Create new Google Cloud Storage
      parameters: []
      requestBody:
        content:
          application/json:
            example:
              gcsCredentials:
                type: service_account
                project_id: "123456789"
                private_key_id: xxx
                private_key: '-----BEGIN PRIVATE KEY-----<key contents>-----END PRIVATE
                  KEY-----\n'
                client_email: something@else.iam.gserviceaccount.com
                client_id: "123456789"
                auth_uri: https://accounts.google.com/o/oauth2/auth
                token_uri: https://oauth2.googleapis.com/token
                auth_provider_x509_cert_url: https://www.googleapis.com/oauth2/v1/certs
                client_x509_cert_url: https://www.googleapis.com/robot/v1/metadata/x509/something
              filesBucket: my-bucket
              owner: keboola
              region: europe-west1
            schema:
              $ref: '#/components/schemas/Create_new_Google_Cloud_Storage_request'
      responses:
        "201":
          content:
            application/json:
              example:
                id: 123
                isDefault: false
                provider: gcp
                region: europe-west1
                created: 2019-06-17T15:07:48+01:00
                creator:
                  id: 123
                  name: Joe "The Admin" Doe
                gcsCredentials:
                  type: service_account
                  project_id: "123456789"
                  private_key_id: xxx
                  client_email: something@else.iam.gserviceaccount.com
                  client_id: "123456789"
                  auth_uri: https://accounts.google.com/o/oauth2/auth
                  token_uri: https://oauth2.googleapis.com/token
                  auth_provider_x509_cert_url: https://www.googleapis.com/oauth2/v1/certs
                  client_x509_cert_url: https://www.googleapis.com/robot/v1/metadata/x509/something
                gcsSnowflakeIntegrationName: KEBOOLA_123_GCS
                filesBucket: my-bucket
              schema:
                $ref: '#/components/schemas/Create_new_Google_Cloud_Storage_201_response'
          description: Created
      summary: Create new Google Cloud Storage
      tags:
      - SUPER - File Storage Management
  /manage/file-storage-abs:
    get:
      description: Returns all registered Azure Blob Storages.
      operationId: List Azure Blob Storage
      parameters: []
      responses:
        "200":
          content:
            application/json:
              example:
              - accountName: nameofaccount
                containerName: name
                owner: keboola
                id: "123"
                isDefault: "false"
                provider: azure
                created: "2019"
                creator:
                  id: "123"
                  name: name
              schema:
                items: {}
                type: array
          description: OK
      summary: List Azure Blob Storage
      tags:
      - SUPER - File Storage Management
    post:
      description: |-
        Superuser credentials are not required for storage registration

        Will register new Azure Blob Storage for using inside KBC. Connection wil be verified during registraion.
      operationId: Create new Azure Blob Storage
      parameters: []
      requestBody:
        content:
          application/json:
            example:
              accountName: nameofaccount
              containerName: name
              owner: keboola
              accountKey: TTASDASASDfasdf==
            schema:
              $ref: '#/components/schemas/Create_new_Azure_Blob_Storage_request'
      responses:
        "201":
          content:
            application/json:
              example:
                accountName: nameofaccount
                containerName: name
                owner: keboola
                id: "123"
                isDefault: "false"
                provider: azure
                created: "2019"
                creator:
                  id: "123"
                  name: name
              schema:
                $ref: '#/components/schemas/Create_new_Azure_Blob_Storage_201_response'
          description: Created
      summary: Create new Azure Blob Storage
      tags:
      - SUPER - File Storage Management
  /manage/file-storage-abs/{file_storage_id}/default:
    post:
      description: ""
      operationId: Set Blob Storage as default
      parameters:
      - description: File Storage ID
        explode: false
        in: path
        name: file_storage_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                accountName: nameofaccount
                containerName: name
                owner: keboola
                id: "123"
                isDefault: "true"
              schema:
                $ref: '#/components/schemas/Set_Blob_Storage_as_default_200_response'
          description: OK
      summary: Set Blob Storage as default
      tags:
      - SUPER - File Storage Management
  /manage/storage-backend:
    get:
      description: ""
      operationId: List backends
      parameters: []
      responses:
        "200":
          content:
            application/json:
              example:
              - id: 123
                host: sapi
                backend: redshift
                region: us
              schema:
                items: {}
                type: array
          description: OK
      summary: List backends
      tags:
      - SUPER - Storage Backends Management
    post:
      description: |-
        Superuser credentials are *not required* for backend registration

        #### Redshift

        Credentials with superuser access to the database must be provided for Redshift.

        #### Snowflake

        Credentials and storage warehouse are required. You can generate a user, role and warehouse with the following queries:

        ```
        CREATE ROLE "KEBOOLA_STORAGE";
        GRANT CREATE DATABASE ON ACCOUNT TO ROLE "KEBOOLA_STORAGE";
        GRANT CREATE ROLE ON ACCOUNT TO ROLE "KEBOOLA_STORAGE" WITH GRANT OPTION;
        GRANT CREATE USER ON ACCOUNT TO ROLE "KEBOOLA_STORAGE" WITH GRANT OPTION;
        CREATE WAREHOUSE "KEBOOLA" WITH WAREHOUSE_SIZE = 'XSMALL' WAREHOUSE_TYPE = 'STANDARD' AUTO_SUSPEND = 60 AUTO_RESUME = TRUE;
        GRANT USAGE ON WAREHOUSE "KEBOOLA" TO ROLE "KEBOOLA_STORAGE" WITH GRANT OPTION;

        CREATE USER "KEBOOLA_STORAGE"
            PASSWORD = "YOUR_PASSWORD"
            DEFAULT_ROLE = "KEBOOLA_STORAGE"
            TYPE = LEGACY_SERVICE;

        GRANT ROLE "KEBOOLA_STORAGE" TO USER "KEBOOLA_STORAGE";
        GRANT ROLE "KEBOOLA_STORAGE" TO ROLE SYSADMIN;
        ```

        If you want to have dynamic backends enabled, please also run the following queries and add `useDynamicBackends: true` in the request.

        ```
        CREATE WAREHOUSE "KEBOOLA_SMALL" WITH
            WAREHOUSE_SIZE = 'SMALL'
            WAREHOUSE_TYPE = 'STANDARD'
            AUTO_SUSPEND = 60
            AUTO_RESUME = TRUE
            MIN_CLUSTER_COUNT = 1
            MAX_CLUSTER_COUNT = 10;
        CREATE WAREHOUSE "KEBOOLA_MEDIUM" WITH
            WAREHOUSE_SIZE = 'MEDIUM'
            WAREHOUSE_TYPE = 'STANDARD'
            AUTO_SUSPEND = 60
            AUTO_RESUME = TRUE
            MIN_CLUSTER_COUNT = 1
            MAX_CLUSTER_COUNT = 10;
        CREATE WAREHOUSE "KEBOOLA_LARGE" WITH
            WAREHOUSE_SIZE = 'LARGE'
            WAREHOUSE_TYPE = 'STANDARD'
            AUTO_SUSPEND = 60
            AUTO_RESUME = TRUE
            MIN_CLUSTER_COUNT = 1
            MAX_CLUSTER_COUNT = 10;

        GRANT USAGE ON WAREHOUSE "KEBOOLA_SMALL" TO ROLE "KEBOOLA_STORAGE" WITH GRANT OPTION;
        GRANT USAGE ON WAREHOUSE "KEBOOLA_MEDIUM" TO ROLE "KEBOOLA_STORAGE" WITH GRANT OPTION;
        GRANT USAGE ON WAREHOUSE "KEBOOLA_LARGE" TO ROLE "KEBOOLA_STORAGE" WITH GRANT OPTION;
        GRANT MONITOR ON WAREHOUSE "KEBOOLA_SMALL" TO ROLE "KEBOOLA_MONITORING" WITH GRANT OPTION;
        GRANT MONITOR ON WAREHOUSE "KEBOOLA_MEDIUM" TO ROLE "KEBOOLA_MONITORING" WITH GRANT OPTION;
        GRANT MONITOR ON WAREHOUSE "KEBOOLA_LARGE" TO ROLE "KEBOOLA_MONITORING" WITH GRANT OPTION;
        ```

        According to the previous example, the parameters for creating Storage will be:

        - `user` - `KEBOOLA_STORAGE`

        - `warehouse` - `YOUR_WAREHOUSE`

        - `password` - `YOUR_PASSWORD`

        #### Synapse

        Credentials for sql server admin must be provided with database name.

        Master key for exports must be created on SQL pool

        ```
        CREATE MASTER KEY
        ```
      operationId: Create a new backend
      parameters: []
      requestBody:
        content:
          application/json:
            example:
              backend: snowflake
              host: sapi-37-demo.cmizbsfmzc6w.us-east-1.redshift.amazonaws.com
              warehouse: production
              username: keboola
              password: "1234"
              region: us-east-1
              owner: keboola
              database: MyDataWarehouse
              useSynapseManagedIdentity: "true"
              useDynamicBackends: false
            schema:
              $ref: '#/components/schemas/Create_a_new_backend_request'
      responses:
        "201":
          content:
            application/json:
              example:
                id: 123
                host: sapi
                backend: redshift
                region: us
              schema:
                $ref: '#/components/schemas/Create_a_new_backend_201_response'
          description: Created
      summary: Create a new backend
      tags:
      - SUPER - Storage Backends Management
  /manage/storage-backend/{backend_id}:
    delete:
      description: All projects using the backend must be deleted and purged before
        it can be deleted
      operationId: Delete backend
      parameters:
      - description: Id of storage backend
        explode: false
        in: path
        name: backend_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
      summary: Delete backend
      tags:
      - SUPER - Storage Backends Management
    get:
      description: ""
      operationId: Backend detail
      parameters:
      - description: Backend ID
        explode: false
        in: path
        name: backend_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
              - id: 123
                region: us
                owner: keboola
                username: username
                stats:
                  projectsCount: 10
                  bucketsCount: 100
                  dataSizeGB: 100
                  rowsCount: 1000000
                created: 2020-05-11T15:30:00Z
                creator:
                  id: 10
                  name: keboola
                host: demo.snowflakecomputing.com
                backend: snowflake
                warehouse: keboola
                saml2Configuration:
                  idpEntityId: https://example
                  spEntityId: https://example
                  spAcsUrl: https://example
                  publicKey: RSA_PUBLIC_KEY
              schema:
                items: {}
                type: array
          description: OK
      summary: Backend detail
      tags:
      - SUPER - Storage Backends Management
    patch:
      description: "A partial update of a storage backend, one of the attributes are\
        \ required."
      operationId: Update backend
      parameters:
      - description: Backend ID
        explode: false
        in: path
        name: backend_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              username: keboola
              password: "1234"
              useDynamicBackends: false
            schema:
              $ref: '#/components/schemas/StorageBackendUpdate'
      responses:
        "201":
          content:
            application/json:
              example:
                id: 123
                host: sapi
                backend: redshift
                region: us
              schema:
                $ref: '#/components/schemas/Create_a_new_backend_201_response'
          description: Created
      summary: Update backend
      tags:
      - SUPER - Storage Backends Management
  /manage/storage-backend/bigquery:
    post:
      description: |-
        You must create a new project and service account in a folder in your organization,
        this service account must have the right to create new projects (roles/resourcemanager.projectCreator) in this folder (only in this folder)
        and use the generated json [keyFile](https://cloud.google.com/iam/docs/creating-managing-service-account-keys)
        for this `service account` in the `credentials` parameter, the folder id then as `folderId`.
      operationId: Create a new BigQuery backend
      parameters: []
      requestBody:
        content:
          application/json:
            example:
              owner: keboola
              folderId: "123"
              region: us-east-1
              credentials:
                type: service_account
                project_id: "123456789"
                private_key_id: xxx
                private_key: '-----BEGIN PRIVATE KEY-----<key contents>-----END PRIVATE
                  KEY-----\n'
                client_email: something@else.iam.gserviceaccount.com
                client_id: "123456789"
                auth_uri: https://accounts.google.com/o/oauth2/auth
                token_uri: https://oauth2.googleapis.com/token
                auth_provider_x509_cert_url: https://www.googleapis.com/oauth2/v1/certs
                client_x509_cert_url: https://www.googleapis.com/robot/v1/metadata/x509/something
            schema:
              $ref: '#/components/schemas/Create_a_new_BigQuery_backend_request'
      responses:
        "201":
          content:
            application/json:
              example:
                id: 12
                region: us-east-1
                backend: bigquery
                credentials:
                  type: service_account
                  project_id: "123456789"
                  private_key_id: xxx
                  client_email: something@else.iam.gserviceaccount.com
                  client_id: "123456789"
                  auth_uri: https://accounts.google.com/o/oauth2/auth
                  token_uri: https://oauth2.googleapis.com/token
                  auth_provider_x509_cert_url: https://www.googleapis.com/oauth2/v1/certs
                  client_x509_cert_url: https://www.googleapis.com/robot/v1/metadata/x509/something
                folderId: 123
              schema:
                $ref: '#/components/schemas/Create_a_new_BigQuery_backend_201_response'
          description: Created
      summary: Create a new BigQuery backend
      tags:
      - SUPER - Storage Backends Management
  /manage/storage-backend/bigquery/{backend_id}:
    patch:
      description: Update of the credentials for BigQuery backend.
      operationId: Update BigQuery backend
      parameters:
      - description: Backend ID
        explode: false
        in: path
        name: backend_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              credentials:
                type: service_account
                project_id: "123456789"
                private_key_id: xxx
                private_key: '-----BEGIN PRIVATE KEY-----<key contents>-----END PRIVATE
                  KEY-----\n'
                client_email: something@else.iam.gserviceaccount.com
                client_id: "123456789"
                auth_uri: https://accounts.google.com/o/oauth2/auth
                token_uri: https://oauth2.googleapis.com/token
                auth_provider_x509_cert_url: https://www.googleapis.com/oauth2/v1/certs
                client_x509_cert_url: https://www.googleapis.com/robot/v1/metadata/x509/something
            schema:
              $ref: '#/components/schemas/BigQueryStorageBackendUpdate'
      responses:
        "201":
          content:
            application/json:
              example:
                id: 12
                region: us-east-1
                backend: bigquery
                credentials:
                  type: service_account
                  project_id: "123456789"
                  private_key_id: xxx
                  client_email: something@else.iam.gserviceaccount.com
                  client_id: "123456789"
                  auth_uri: https://accounts.google.com/o/oauth2/auth
                  token_uri: https://oauth2.googleapis.com/token
                  auth_provider_x509_cert_url: https://www.googleapis.com/oauth2/v1/certs
                  client_x509_cert_url: https://www.googleapis.com/robot/v1/metadata/x509/something
                folderId: 123
              schema:
                $ref: '#/components/schemas/Create_a_new_BigQuery_backend_201_response'
          description: Created
      summary: Update BigQuery backend
      tags:
      - SUPER - Storage Backends Management
  /manage/commands:
    post:
      description: |-
        Executes a Keboola Connection CLI command asynchronously. The command is enqueued to the commands queue, `commandExecutionId` is returned.
        You can use this ID to search the command output in Papertrail logs.
      operationId: Run Command
      parameters: []
      requestBody:
        content:
          application/json:
            example:
              command: storage:workers-list
              parameters:
              - --help
              - "23"
            schema:
              $ref: '#/components/schemas/Run_Command_request'
      responses:
        "201":
          content:
            application/json:
              example:
                commandExecutionId: 123-abcd
              schema:
                $ref: '#/components/schemas/Purge_deleted_project_200_response'
          description: Created
      summary: Run Command
      tags:
      - SUPER - Commands
  /manage/ui-apps:
    get:
      description: Returns active applications. This resource doesn't require authentication.
      operationId: List Applications
      parameters: []
      responses:
        "200":
          content:
            application/json:
              example:
              - id: kbc.manageApps
                name: kbc.manageApps
                version: 0.0.3-33-ga6bc947
                basePath: https://kbc-uis.s3.amazonaws.com/kbc.manageApps/0.0.3-33-ga6bc947/
                scripts:
                - https://kbc-uis.s3.amazonaws.com/kbc.manageApps/0.0.3-33-ga6bc947/scripts/libs.js
                - https://kbc-uis.s3.amazonaws.com/kbc.manageApps/0.0.3-33-ga6bc947/scripts/scripts.js
                styles:
                - https://kbc-uis.s3.amazonaws.com/kbc.manageApps/0.0.3-33-ga6bc947/styles/libs.css
                - https://kbc-uis.s3.amazonaws.com/kbc.manageApps/0.0.3-33-ga6bc947/styles/select2.png
                isCritical: false
              schema:
                items:
                  $ref: '#/components/schemas/List_Applications_200_response_inner'
                type: array
          description: OK
      summary: List Applications
      tags:
      - SUPER - UI Management
    post:
      description: ""
      operationId: Register New Application/Version
      parameters: []
      requestBody:
        content:
          application/json:
            example:
              manifest_url: ""
            schema:
              $ref: '#/components/schemas/Register_New_Application_Version_request'
      responses:
        "201":
          content:
            application/json:
              example:
                app:
                  id: "41"
                  stringId: kbc
                  name: kbc
                  created: 2015-02-12 11:10:09
                verion:
                  id: 1646
                  created: 2015-08-17 17:43:37
                  version: 0.1.21-17-g3cae4c0
                  isActive: true
                  isCritical: false
              schema:
                $ref: '#/components/schemas/Register_New_Application_Version_201_response'
          description: Created
      summary: Register New Application/Version
      tags:
      - SUPER - UI Management
  /manage/ui-apps/{id}:
    delete:
      description: Deletes application and its versions
      operationId: Delete Application
      parameters:
      - description: stringId/name of application
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
      summary: Delete Application
      tags:
      - SUPER - UI Management
  /queue/workers:
    get:
      description: |-
        Endpoint should be: https://syrup.keboola.com/queue/workers

        This API resource can be used, for example, by Hubot script for listing running workers.
      operationId: Get Workers
      parameters: []
      responses:
        "200":
          content: {}
          description: OK
      summary: Get Workers
      tags:
      - Syrup API Integration
components:
  schemas:
    MaintainerModel:
      example:
        defaultConnectionSnowflakeId: 5.962133916683182
        defaultFileStorageId: 9.301444243932576
        defaultConnectionMysqlId: 6.027456183070403
        defaultConnectionSynapseId: 5.637376656633329
        defaultConnectionTeradataId: 7.061401241503109
        zendeskUrl: zendeskUrl
        created: created
        defaultConnectionExasolId: 2.3021358869347655
        defaultConnectionRedshiftId: 1.4658129805029452
        id: 0.8008281904610115
        url: url
      properties:
        id:
          type: number
        created:
          type: string
        url:
          type: string
        defaultConnectionMysqlId:
          type: number
        defaultConnectionRedshiftId:
          type: number
        defaultConnectionSnowflakeId:
          type: number
        defaultConnectionSynapseId:
          type: number
        defaultConnectionExasolId:
          type: number
        defaultConnectionTeradataId:
          type: number
        defaultFileStorageId:
          type: number
        zendeskUrl:
          type: string
      type: object
    OrganizationModel:
      example:
        crmId: crmId
        allowAutoJoin: true
        projects:
        - created: created
          name: name
          id: 1.4658129805029452
        - created: created
          name: name
          id: 1.4658129805029452
        created: created
        name: name
        id: 0.8008281904610115
        mfaRequired: true
        activityCenterProjectId: 6.027456183070403
      properties:
        id:
          type: number
        name:
          type: string
        created:
          type: string
        allowAutoJoin:
          type: boolean
        crmId:
          type: string
        activityCenterProjectId:
          type: number
        mfaRequired:
          type: boolean
        projects:
          items:
            $ref: '#/components/schemas/Retrieve_an_organization_200_response_projects_inner'
          type: array
      type: object
    ProjectModel:
      example:
        hasMysql: true
        expires: ""
        fileStorage:
          owner: owner
          isDefault: true
          creator:
            name: ""
            id: 9.301444243932576
          created: created
          awsKey: awsKey
          id: 7.061401241503109
          region: region
          filesBucket: filesBucket
        hasTeradata: true
        payAsYouGo:
          purchasedCredits: 2.027123023002322
        hasSynapse: true
        dataSizeBytes: 6.027456183070403
        type: type
        hasTryModeOn: hasTryModeOn
        features:
        - ""
        - ""
        hasRedshift: true
        defaultBackend: defaultBackend
        id: 0.8008281904610115
        isDisabled: true
        limits:
          kbc.adminsCount:
            name: name
            value: 5.962133916683182
          goodData.dataSizeBytes:
            name: name
            value: 5.962133916683182
          kbc.monthlyProjectPowerLimit:
            name: name
            value: 5.962133916683182
          components.jobsParallelism:
            name: name
            value: 5.962133916683182
          kbc.writersCount:
            name: name
            value: 5.962133916683182
          goodData.demoTokenEnabled:
            name: name
            value: 5.962133916683182
          goodData.prodTokenEnabled:
            name: name
            value: 5.962133916683182
          goodData.usersCount:
            name: name
            value: 5.962133916683182
          storage.dataSizeBytes:
            name: name
            value: 5.962133916683182
          storage.jobsParallelism:
            name: name
            value: 5.962133916683182
          kbc.extractorsCount:
            name: name
            value: 5.962133916683182
          orchestrations.count:
            name: name
            value: 5.962133916683182
        created: created
        billedMonthlyPrice: ""
        backends:
          snowflake:
            owner: owner
            host: host
            id: 3.616076749251911
            region: region
        hasSnowflake: true
        hasExasol: true
        rowsCount: 1.4658129805029452
        organization:
          crmId: crmId
          allowAutoJoin: true
          created: created
          name: name
          id: 2.3021358869347655
          activityCenterProjectId: activityCenterProjectId
        name: name
        dataRetentionTimeInDays: 5.637376656633329
        metrics:
          kbc.adminsCount:
            name: name
            value: 5.962133916683182
          storage.dataSizeBytes:
            name: name
            value: 5.962133916683182
          orchestrations.count:
            name: name
            value: 5.962133916683182
          storage.rowsCount:
            name: name
            value: 5.962133916683182
        region: region
      properties:
        id:
          type: number
        name:
          type: string
        type:
          type: string
        region:
          type: string
        created:
          type: string
        expires:
          nullable: true
        features:
          items: {}
          type: array
        dataSizeBytes:
          type: number
        rowsCount:
          type: number
        hasMysql:
          type: boolean
        hasRedshift:
          type: boolean
        hasSnowflake:
          type: boolean
        hasSynapse:
          type: boolean
        hasExasol:
          type: boolean
        hasTeradata:
          type: boolean
        defaultBackend:
          type: string
        hasTryModeOn:
          type: string
        limits:
          $ref: '#/components/schemas/ProjectModel_limits'
        metrics:
          $ref: '#/components/schemas/ProjectModel_metrics'
        isDisabled:
          type: boolean
        billedMonthlyPrice:
          nullable: true
        dataRetentionTimeInDays:
          type: number
        organization:
          $ref: '#/components/schemas/ProjectModel_organization'
        fileStorage:
          $ref: '#/components/schemas/ProjectModel_fileStorage'
        backends:
          $ref: '#/components/schemas/ProjectModel_backends'
        payAsYouGo:
          $ref: '#/components/schemas/ProjectModel_payAsYouGo'
      type: object
    GCPCredentials:
      example:
        token_uri: https://oauth2.googleapis.com/token
        private_key_id: xxx
        client_x509_cert_url: https://www.googleapis.com/robot/v1/metadata/x509/something
        project_id: "123456789"
        auth_uri: https://accounts.google.com/o/oauth2/auth
        auth_provider_x509_cert_url: https://www.googleapis.com/oauth2/v1/certs
        client_email: something@else.iam.gserviceaccount.com
        private_key: '-----BEGIN PRIVATE KEY-----<key contents>-----END PRIVATE KEY-----\n'
        type: service_account
        client_id: "123456789"
      properties:
        type:
          example: service_account
          type: string
        project_id:
          example: "123456789"
          type: string
        private_key_id:
          example: xxx
          type: string
        private_key:
          example: '-----BEGIN PRIVATE KEY-----<key contents>-----END PRIVATE KEY-----\n'
          type: string
        client_email:
          example: something@else.iam.gserviceaccount.com
          type: string
        client_id:
          example: "123456789"
          type: string
        auth_uri:
          example: https://accounts.google.com/o/oauth2/auth
          type: string
        token_uri:
          example: https://oauth2.googleapis.com/token
          type: string
        auth_provider_x509_cert_url:
          example: https://www.googleapis.com/oauth2/v1/certs
          type: string
        client_x509_cert_url:
          example: https://www.googleapis.com/robot/v1/metadata/x509/something
          type: string
      required:
      - auth_provider_x509_cert_url
      - auth_uri
      - client_email
      - client_id
      - client_x509_cert_url
      - private_key
      - private_key_id
      - project_id
      - token_uri
      - type
      type: object
    GCPCredentialsNoPK:
      properties:
        type:
          example: service_account
          type: string
        project_id:
          example: "123456789"
          type: string
        private_key_id:
          example: xxx
          type: string
        client_email:
          example: something@else.iam.gserviceaccount.com
          type: string
        client_id:
          example: "123456789"
          type: string
        auth_uri:
          example: https://accounts.google.com/o/oauth2/auth
          type: string
        token_uri:
          example: https://oauth2.googleapis.com/token
          type: string
        auth_provider_x509_cert_url:
          example: https://www.googleapis.com/oauth2/v1/certs
          type: string
        client_x509_cert_url:
          example: https://www.googleapis.com/robot/v1/metadata/x509/something
          type: string
      required:
      - auth_provider_x509_cert_url
      - auth_uri
      - client_email
      - client_id
      - client_x509_cert_url
      - private_key_id
      - project_id
      - token_uri
      - type
      type: object
    GCSCreate:
      properties:
        gcsCredentials:
          $ref: '#/components/schemas/GCPCredentials'
        filesBucket:
          description: name of the bucket
          example: my-bucket
          type: string
        owner:
          enum:
          - keboola
          - client
          type: string
        region:
          example: europe-west1
          type: string
      required:
      - filesBucket
      - owner
      - region
      type: object
    GCSCreated:
      properties:
        id:
          example: 123
          type: number
        isDefault:
          type: boolean
        provider:
          example: gcp
          type: string
        region:
          example: europe-west1
          type: string
        created:
          description: (ISO8601 format) `Y-m-d\TH:i:sO`
          example: 2019-06-17T15:07:48+01:00
          type: string
        creator:
          $ref: '#/components/schemas/AdminIdAndName'
        gcsCredentials:
          $ref: '#/components/schemas/GCPCredentialsNoPK'
        gcsSnowflakeIntegrationName:
          example: KEBOOLA_123_GCS
          type: string
        filesBucket:
          description: name of the bucket
          example: my-bucket
          type: string
      type: object
    GCSRotate:
      properties:
        credentials:
          $ref: '#/components/schemas/GCPCredentials'
      type: object
    AdminIdAndName:
      properties:
        id:
          example: 123
          type: number
        name:
          example: Joe "The Admin" Doe
          type: string
      type: object
    ABSBase:
      properties:
        accountName:
          example: nameofaccount
          type: string
        containerName:
          description: of-container (required)
          example: name
          type: string
        owner:
          example: keboola
          type: string
      required:
      - accountName
      - owner
      type: object
    ABSCreate:
      allOf:
      - $ref: '#/components/schemas/ABSBase'
      - properties:
          accountKey:
            description: new key to be rotated to
            example: TTASDASASDfasdf==
            type: string
        required:
        - accountKey
        type: object
    ABSCreated:
      allOf:
      - $ref: '#/components/schemas/ABSBase'
      - properties:
          id:
            example: "123"
            type: string
          isDefault:
            example: "false"
            type: string
          provider:
            example: azure
            type: string
          created:
            description: 06-17T15:07:48+01:00
            example: "2019"
            type: string
          creator:
            $ref: '#/components/schemas/ABSCreated_allOf_creator'
        type: object
    ABSDefault:
      allOf:
      - $ref: '#/components/schemas/ABSBase'
      - properties:
          id:
            example: "123"
            type: string
          isDefault:
            example: "true"
            type: string
        type: object
    S3FileStorageBase:
      properties:
        awsKey:
          example: SFASDF
          type: string
        filesBucket:
          example: kbc-sapi-files
          type: string
        region:
          example: us-east-1
          type: string
        owner:
          description: Associated AWS account owner
          example: keboola
          type: string
      required:
      - awsKey
      - filesBucket
      - owner
      - region
      type: object
    S3FileStorage:
      allOf:
      - $ref: '#/components/schemas/S3FileStorageBase'
      - properties:
          id:
            example: "123"
            type: string
          isDefault:
            example: "false"
            type: string
          provider:
            example: aws
            type: string
          created:
            description: 06-17T15:07:48+01:00
            example: "2019"
            type: string
          creator:
            $ref: '#/components/schemas/ABSCreated_allOf_creator'
        required:
        - id
        type: object
    S3FileStorageRequest:
      allOf:
      - $ref: '#/components/schemas/S3FileStorageBase'
      - properties:
          awsSecret:
            example: xxxx
            type: string
        required:
        - awsSecret
        type: object
    StorageBackendCreate:
      properties:
        backend:
          description: "can be redshift, snowflake ,synapse, exasol, teradata"
          example: snowflake
          type: string
        host:
          example: sapi-37-demo.cmizbsfmzc6w.us-east-1.redshift.amazonaws.com
          type: string
        warehouse:
          description: required only for Snowflake
          example: production
          type: string
        username:
          example: keboola
          type: string
        password:
          example: "1234"
          type: string
        region:
          example: us-east-1
          type: string
        owner:
          description: associated AWS account owner
          example: keboola
          type: string
        database:
          description: required for Synapse and Teradata
          example: MyDataWarehouse
          type: string
        useSynapseManagedIdentity:
          description: optional for Synapse
          example: "true"
          type: string
        useDynamicBackends:
          description: "Only for backends supporting dynamic sizing (Snowflake). When\
            \ enabled, new projects get dynamic backends assigned automatically."
          type: boolean
      required:
      - backend
      - host
      - owner
      - password
      - region
      - username
      type: object
    BigQueryStorageBackendCreate:
      properties:
        owner:
          description: associated GCP account owner
          example: keboola
          type: string
        folderId:
          description: where is service account created
          example: "123"
          type: string
        region:
          example: us-east-1
          type: string
        credentials:
          $ref: '#/components/schemas/GCPCredentials'
      required:
      - folderId
      - owner
      - region
      type: object
    BigQueryStorageBackendCreated:
      properties:
        id:
          example: 12
          type: number
        region:
          example: us-east-1
          type: string
        backend:
          example: bigquery
          type: string
        credentials:
          $ref: '#/components/schemas/GCPCredentialsNoPK'
        folderId:
          example: 123
          type: number
      required:
      - region
      type: object
    BigQueryStorageBackendUpdate:
      example:
        credentials:
          token_uri: https://oauth2.googleapis.com/token
          private_key_id: xxx
          client_x509_cert_url: https://www.googleapis.com/robot/v1/metadata/x509/something
          project_id: "123456789"
          auth_uri: https://accounts.google.com/o/oauth2/auth
          auth_provider_x509_cert_url: https://www.googleapis.com/oauth2/v1/certs
          client_email: something@else.iam.gserviceaccount.com
          private_key: '-----BEGIN PRIVATE KEY-----<key contents>-----END PRIVATE
            KEY-----\n'
          type: service_account
          client_id: "123456789"
      properties:
        credentials:
          $ref: '#/components/schemas/GCPCredentials'
      type: object
    StorageBackendUpdate:
      example:
        password: "1234"
        useDynamicBackends: true
        username: keboola
      properties:
        username:
          example: keboola
          type: string
        password:
          example: "1234"
          type: string
        useDynamicBackends:
          description: "Only for backends supporting dynamic sizing (Snowflake). When\
            \ enabled, new projects get dynamic backends assigned automatically."
          type: boolean
      type: object
    StorageBackend:
      properties:
        id:
          example: 123
          type: number
        host:
          description: 37-demo.cmizbsfmzc6w.us-east-1.redshift.amazonaws.com (required)
          example: sapi
          type: string
        backend:
          example: redshift
          type: string
        region:
          description: east-1
          example: us
          type: string
      required:
      - backend
      - id
      type: object
    StorageBackendListBase:
      properties:
        id:
          example: 123
          type: number
        region:
          description: east-1 (required)
          example: us
          type: string
        owner:
          example: keboola
          type: string
        username:
          example: username
          type: string
        stats:
          $ref: '#/components/schemas/StorageBackendListBase_stats'
        created:
          description: The datetime (ISO8601 format) 'Y-m-d\TH:i:sO'
          example: 2020-05-11T15:30:00Z
          type: string
        creator:
          $ref: '#/components/schemas/StorageBackendListBase_creator'
      required:
      - created
      - id
      - owner
      type: object
    StorageBackendListRedshift:
      allOf:
      - $ref: '#/components/schemas/StorageBackendListBase'
      - properties:
          host:
            description: east-1.redshift.amazonaws.com (required)
            example: demo.cmizbsfmzc6w.us
            type: string
          backend:
            example: redshift
            type: string
        required:
        - backend
        type: object
    StorageBackendListSnowflake:
      allOf:
      - $ref: '#/components/schemas/StorageBackendListBase'
      - properties:
          host:
            example: demo.snowflakecomputing.com
            type: string
          backend:
            example: snowflake
            type: string
          warehouse:
            example: keboola
            type: string
          saml2Configuration:
            $ref: '#/components/schemas/StorageBackendListSnowflake_allOf_saml2Configuration'
        required:
        - backend
        - host
        type: object
    StorageBackendListSynapse:
      allOf:
      - $ref: '#/components/schemas/StorageBackendListBase'
      - properties:
          host:
            description: synapse.database.windows.net (required)
            example: demo
            type: string
          backend:
            example: synapse
            type: string
          database:
            example: keboola
            type: string
          useSynapseManagedIdentity:
            example: "false"
            type: string
        required:
        - backend
        type: object
    StorageBackendListExasol:
      allOf:
      - $ref: '#/components/schemas/StorageBackendListBase'
      - properties:
          host:
            example: database.exasol.com
            type: string
          backend:
            example: exasol
            type: string
        required:
        - backend
        - host
        type: object
    StorageBackendListTeradata:
      allOf:
      - $ref: '#/components/schemas/StorageBackendListBase'
      - properties:
          host:
            example: database.teradata.com
            type: string
          backend:
            example: teradata
            type: string
          database:
            example: keboola
            type: string
        required:
        - backend
        - host
        type: object
    CommandExecute:
      properties:
        command:
          description: command to execute
          example: storage:workers-list
          type: string
        parameters:
          description: command parameters
          items: {}
          type: array
      required:
      - command
      type: object
    CommandExecuteResponse:
      properties:
        commandExecutionId:
          description: execution ID; this ID is appended to all logs provided by the
            command
          example: 123-abcd
          type: string
      required:
      - commandExecutionId
      type: object
    Token_Verification_200_response_creator:
      example:
        name: name
        id: 6.027456183070403
      properties:
        id:
          type: number
        name:
          type: string
      type: object
    Token_Verification_200_response_user:
      example:
        features:
        - ""
        - ""
        name: name
        mfaEnabled: true
        isSuperAdmin: true
        id: 1.4658129805029452
        email: email
        canAccessLogs: true
      properties:
        id:
          type: number
        name:
          type: string
        email:
          type: string
        mfaEnabled:
          type: boolean
        features:
          items: {}
          type: array
        canAccessLogs:
          type: boolean
        isSuperAdmin:
          type: boolean
      type: object
    Token_Verification_200_response:
      example:
        lastUsed: lastUsed
        expires: expires
        creator:
          name: name
          id: 6.027456183070403
        created: created
        isSessionToken: true
        description: description
        id: 0.8008281904610115
        isDisabled: true
        scopes:
        - ""
        - ""
        isExpired: true
        type: type
        user:
          features:
          - ""
          - ""
          name: name
          mfaEnabled: true
          isSuperAdmin: true
          id: 1.4658129805029452
          email: email
          canAccessLogs: true
      properties:
        id:
          type: number
        description:
          type: string
        created:
          type: string
        lastUsed:
          type: string
        expires:
          type: string
        isSessionToken:
          type: boolean
        isExpired:
          type: boolean
        isDisabled:
          type: boolean
        scopes:
          items: {}
          type: array
        type:
          type: string
        creator:
          $ref: '#/components/schemas/Token_Verification_200_response_creator'
        user:
          $ref: '#/components/schemas/Token_Verification_200_response_user'
      type: object
    Create_a_maintainer_request:
      properties:
        name:
          description: Maintainer name
          example: Example
          type: string
        defaultConnectionRedshiftId:
          description: Default Redshift Connection ID
          example: "234"
          type: string
        defaultConnectionSnowflakeId:
          description: Default Snowflake Connection ID
          example: "324"
          type: string
        defaultConnectionSynapseId:
          description: Default Synapse Connection ID
          example: "324"
          type: string
        defaultConnectionExasolId:
          description: Default Exasol Connection ID
          example: "324"
          type: string
        defaultConnectionTeradataId:
          description: Default Teradata Connection ID
          example: "324"
          type: string
        defaultFileStorageId:
          description: Default File Storage ID
          example: "456"
          type: string
        zendeskUrl:
          example: https://keboola.zendesk.com
          type: string
      required:
      - name
      type: object
    Update_a_maintainer_request:
      properties:
        name:
          description: Maintainer name
          example: Example
          type: string
        defaultConnectionRedshiftId:
          description: Default Redshift Connection ID
          example: "234"
          type: string
        defaultConnectionSnowflakeId:
          description: Default Snowflake Connection ID
          example: "324"
          type: string
        defaultConnectionSynapseId:
          description: Default Synapse Connection ID
          example: "324"
          type: string
        defaultConnectionExasolId:
          description: Default Exasol Connection ID
          example: "324"
          type: string
        defaultConnectionTeradataId:
          description: Default Teradata Connection ID
          example: "324"
          type: string
        defaultFileStorageId:
          description: Default File Storage ID
          example: "456"
          type: string
        zendeskUrl:
          example: https://keboola.zendesk.com
          type: string
      type: object
    List_maintainers_invitations_200_response_inner_user:
      example:
        name: name
        id: 6.027456183070403
        email: email
      properties:
        id:
          type: number
        name:
          type: string
        email:
          type: string
      type: object
    List_maintainers_invitations_200_response_inner:
      example:
        creator:
          name: name
          id: 6.027456183070403
          email: email
        created: created
        id: 0.8008281904610115
        user:
          name: name
          id: 6.027456183070403
          email: email
      properties:
        id:
          type: number
        created:
          type: string
        user:
          $ref: '#/components/schemas/List_maintainers_invitations_200_response_inner_user'
        creator:
          $ref: '#/components/schemas/List_maintainers_invitations_200_response_inner_user'
      required:
      - created
      - creator
      - id
      - user
      type: object
    Invite_a_user_to_a_maintainer_request:
      properties:
        email:
          description: Email of an invited user
          example: martin@keboola.com
          type: string
      required:
      - email
      type: object
    Invite_a_user_to_a_maintainer_201_response:
      example:
        creator:
          name: name
          id: 6.027456183070403
          email: email
        created: created
        id: 0.8008281904610115
        user:
          name: name
          id: 6.027456183070403
          email: email
      properties:
        id:
          type: number
        created:
          type: string
        user:
          $ref: '#/components/schemas/List_maintainers_invitations_200_response_inner_user'
        creator:
          $ref: '#/components/schemas/List_maintainers_invitations_200_response_inner_user'
      type: object
    Add_a_User_to_maintainer_request:
      properties:
        id:
          description: User ID
          example: "7234"
          type: string
        email:
          description: User email
          example: martin@keboola.com
          type: string
      type: object
    Set_maintainer_metadata_request:
      properties:
        provider:
          enum:
          - user
          - system
          type: string
        metadata:
          description: Array of metadata objects
          items: {}
          type: array
      required:
      - metadata
      - provider
      type: object
    Retrieve_an_organization_200_response_projects_inner:
      example:
        created: created
        name: name
        id: 1.4658129805029452
      properties:
        id:
          type: number
        name:
          type: string
        created:
          type: string
      type: object
    Retrieve_an_organization_200_response:
      example:
        crmId: crmId
        allowAutoJoin: true
        projects:
        - created: created
          name: name
          id: 1.4658129805029452
        - created: created
          name: name
          id: 1.4658129805029452
        created: created
        name: name
        id: 0.8008281904610115
        mfaRequired: true
        activityCenterProjectId: 6.027456183070403
      properties:
        id:
          type: number
        name:
          type: string
        created:
          type: string
        allowAutoJoin:
          type: boolean
        crmId:
          type: string
        activityCenterProjectId:
          type: number
        mfaRequired:
          type: boolean
        projects:
          items:
            $ref: '#/components/schemas/Retrieve_an_organization_200_response_projects_inner'
          type: array
      type: object
    Update_an_organization_request:
      properties:
        name:
          description: Organization name
          example: POC
          type: string
        maintainerId:
          description: Assign the organization to another maintainer.
          type: string
        allowAutoJoin:
          description: Set whether superAdmins need approval to join the organization's
            projects (default `true`).
          type: string
        crmId:
          description: Set CRM ID. Only maintainer members and superadmins can change
            this.
          example: "123456"
          type: string
        activityCenterProjectId:
          description: Set ActivityCenter ProjectId. Only maintainer members and superadmins
            can change this.
          example: "123"
          type: string
        mfaRequired:
          description: Toggle whether all members of or organization and its projects
            must have enabled multi-factor authentication (default `false`).
          type: string
      type: object
    Create_an_organization_request:
      properties:
        name:
          description: Organization name
          example: POC
          type: string
        crmId:
          description: CRM id
          example: "234"
          type: string
      type: object
    List_project_users_in_organization_200_response_inner:
      example:
        name: name
        id: 0.8008281904610115
        email: email
      properties:
        id:
          type: number
        name:
          type: string
        email:
          type: string
      required:
      - email
      - id
      - name
      type: object
    List_organization_Metadata_200_response_inner:
      example:
        provider: provider
        id: 0.8008281904610115
        value: value
        key: key
        timestamp: timestamp
      properties:
        id:
          type: number
        provider:
          type: string
        timestamp:
          type: string
        key:
          type: string
        value:
          type: string
      required:
      - id
      - key
      - provider
      - timestamp
      - value
      type: object
    Update_a_project_request:
      properties:
        name:
          description: Rename project
          example: Test
          type: string
        defaultBackend:
          description: Change project default backend type
          example: snowflake
          type: string
        type:
          description: "Change project type (demo, production, poc, ...) - allowed\
            \ only for a super admin"
          example: demo
          type: string
        expirationDays:
          description: Change project expiration - allowed only for a super admin
          example: 7
          type: number
        billedMonthlyPrice:
          description: Change project monthly fee - allowed only for a super admin
          example: 2000
          type: number
        dataRetentionTimeInDays:
          description: (Snowflake only) Change the data retention period for this
            project - allowed only for a super admin
          example: 20
          type: number
      type: object
    List_projects_for_an_organization_200_response_limits_limitName:
      example:
        name: name
        value: 5.962133916683182
      properties:
        name:
          type: string
        value:
          type: number
      type: object
    List_projects_for_an_organization_200_response_limits:
      example:
        limitName:
          name: name
          value: 5.962133916683182
      properties:
        limitName:
          $ref: '#/components/schemas/List_projects_for_an_organization_200_response_limits_limitName'
      type: object
    List_projects_for_an_organization_200_response:
      example:
        hasMysql: true
        expires: ""
        hasTeradata: true
        created: created
        hasSynapse: true
        dataSizeBytes: 6.027456183070403
        billedMonthlyPrice: ""
        type: type
        hasExasol: true
        hasSnowflake: true
        hasTryModeOn: hasTryModeOn
        features:
        - features
        - features
        hasRedshift: true
        defaultBackend: defaultBackend
        rowsCount: 1.4658129805029452
        name: name
        dataRetentionTimeInDays: 5.962133916683182
        id: 0.8008281904610115
        metrics: "{}"
        isDisabled: true
        region: region
        limits:
          limitName:
            name: name
            value: 5.962133916683182
        fileStorageProvider: fileStorageProvider
      properties:
        id:
          type: number
        name:
          type: string
        type:
          type: string
        region:
          type: string
        created:
          type: string
        expires:
          nullable: true
        features:
          items:
            type: string
          type: array
        dataSizeBytes:
          type: number
        rowsCount:
          type: number
        hasMysql:
          type: boolean
        hasRedshift:
          type: boolean
        hasSynapse:
          type: boolean
        hasExasol:
          type: boolean
        hasTeradata:
          type: boolean
        hasSnowflake:
          type: boolean
        defaultBackend:
          type: string
        hasTryModeOn:
          type: string
        limits:
          $ref: '#/components/schemas/List_projects_for_an_organization_200_response_limits'
        metrics:
          properties: {}
          type: object
        isDisabled:
          type: boolean
        billedMonthlyPrice:
          nullable: true
        dataRetentionTimeInDays:
          type: number
        fileStorageProvider:
          type: string
      type: object
    Add_a_project_request:
      properties:
        name:
          description: Project name
          example: My Demo
          type: string
        type:
          description: "One of `production`, `poc`, `demo`; default is `production`"
          example: demo
          type: string
        defaultBackend:
          description: Project default backend `snowflake` or `redshift`; default
            is `snowflake`
          example: snowflake
          type: string
        dataRetentionTimeInDays:
          description: Data retention in days for Time Travel
          example: "7"
          type: string
      required:
      - name
      - type
      type: object
    Move_a_project_request:
      properties:
        organizationId:
          description: ID of destination organization
          example: "523"
          type: string
      required:
      - organizationId
      type: object
    Assign_project_Storage_backend_request:
      properties:
        storageBackendId:
          description: ID of Storage backend
          example: "32"
          type: string
      required:
      - storageBackendId
      type: object
    Assign_project_file_Storage_request:
      properties:
        fileStorageId:
          description: ID of file Storage
          example: "32"
          type: string
      required:
      - fileStorageId
      type: object
    Set_project_limits_request:
      properties:
        limits:
          items:
            $ref: '#/components/schemas/List_projects_for_an_organization_200_response_limits_limitName'
          type: array
      type: object
    List_project_invitations_200_response_inner:
      example:
        reason: reason
        expires: expires
        creator:
          name: name
          id: 6.027456183070403
          email: email
        created: created
        id: 0.8008281904610115
        user:
          name: name
          id: 6.027456183070403
          email: email
      properties:
        id:
          type: number
        created:
          type: string
        expires:
          nullable: true
          type: string
        reason:
          type: string
        user:
          $ref: '#/components/schemas/List_maintainers_invitations_200_response_inner_user'
        creator:
          $ref: '#/components/schemas/List_maintainers_invitations_200_response_inner_user'
      required:
      - created
      - creator
      - expires
      - id
      - reason
      - user
      type: object
    Invite_a_user_to_a_project_request:
      properties:
        email:
          description: Email of an invited user
          example: martin@keboola.com
          type: string
        role:
          description: "User role in the project. Roles `admin`, `guest`, `readOnly`\
            \ and `share` are allowed (default `admin`)."
          enum:
          - guest
          - readOnly
          - share
          type: string
        expirationSeconds:
          description: After how many seconds the invitation and membership of a user
            will expire
          example: 3600
          type: number
        reason:
          description: Reason for inviting user
          example: Help with component configuration
          type: string
      required:
      - email
      type: object
    Invite_a_user_to_a_project_201_response:
      example:
        reason: reason
        expires: expires
        creator:
          name: name
          id: 6.027456183070403
          email: email
        role: role
        created: created
        id: 0.8008281904610115
        user:
          name: name
          id: 6.027456183070403
          email: email
      properties:
        id:
          type: number
        created:
          type: string
        expires:
          type: string
        reason:
          type: string
        role:
          type: string
        user:
          $ref: '#/components/schemas/List_maintainers_invitations_200_response_inner_user'
        creator:
          $ref: '#/components/schemas/List_maintainers_invitations_200_response_inner_user'
      type: object
    List_project_users_200_response_inner_invitor:
      example:
        name: name
        id: 6.027456183070403
        email: email
      nullable: true
      properties:
        id:
          type: number
        name:
          type: string
        email:
          type: string
      type: object
    List_project_users_200_response_inner:
      example:
        approver:
          name: name
          id: 6.027456183070403
          email: email
        features:
        - ""
        - ""
        reason: reason
        expires: expires
        role: role
        created: created
        name: name
        id: 0.8008281904610115
        invitor:
          name: name
          id: 6.027456183070403
          email: email
        email: email
        status: status
      properties:
        id:
          type: number
        name:
          type: string
        email:
          type: string
        features:
          items: {}
          type: array
        expires:
          nullable: true
          type: string
        created:
          type: string
        reason:
          type: string
        role:
          type: string
        status:
          type: string
        invitor:
          $ref: '#/components/schemas/List_project_users_200_response_inner_invitor'
        approver:
          $ref: '#/components/schemas/List_maintainers_invitations_200_response_inner_user'
      required:
      - approver
      - created
      - email
      - expires
      - features
      - id
      - invitor
      - name
      - reason
      - role
      - status
      type: object
    Add_a_user_to_a_project_request:
      properties:
        email:
          description: Email of an invited user
          example: martin@keboola.com
          type: string
        role:
          description: "User role in the project. Roles `admin`, `guest`, `readOnly`\
            \ and `share` are allowed (default `admin`)."
          enum:
          - guest
          - readOnly
          - share
          type: string
        expirationSeconds:
          description: After how many seconds the membership of a user will expire
          example: 3600
          type: number
      required:
      - email
      type: object
    List_templates_200_response_inner:
      example:
        defaultBackend: defaultBackend
        expirationDays: 0.8008281904610115
        name: name
        description: description
        id: id
        billedMonthlyPrice: ""
        hasTryModeOn: true
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        expirationDays:
          type: number
        billedMonthlyPrice:
          nullable: true
        hasTryModeOn:
          type: boolean
        defaultBackend:
          type: string
      required:
      - billedMonthlyPrice
      - defaultBackend
      - description
      - expirationDays
      - hasTryModeOn
      - id
      - name
      type: object
    Project_template_detail_200_response:
      example:
        defaultBackend: defaultBackend
        expirationDays: 0.8008281904610115
        name: name
        description: description
        id: id
        billedMonthlyPrice: ""
        hasTryModeOn: true
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        expirationDays:
          type: number
        billedMonthlyPrice:
          nullable: true
        hasTryModeOn:
          type: boolean
        defaultBackend:
          type: string
      type: object
    Change_role_of_a_user_in_a_project_request:
      properties:
        role:
          description: "User role in the project. Roles `admin`, `guest`, `readOnly`\
            \ and `share` are allowed (default `admin`)."
          enum:
          - guest
          - readOnly
          - share
          type: string
      type: object
    Change_role_of_a_user_in_a_project_200_response:
      example:
        approver: ""
        features:
        - ""
        - ""
        reason: reason
        expires: ""
        role: role
        created: created
        name: name
        id: 0.8008281904610115
        invitor:
          name: name
          id: 6.027456183070403
          email: email
        email: email
        status: status
      properties:
        id:
          type: number
        name:
          type: string
        email:
          type: string
        features:
          items: {}
          type: array
        expires:
          nullable: true
        created:
          type: string
        reason:
          type: string
        role:
          type: string
        status:
          type: string
        invitor:
          $ref: '#/components/schemas/List_maintainers_invitations_200_response_inner_user'
        approver:
          nullable: true
      type: object
    Join_a_project_request:
      properties:
        reason:
          description: Reason for joining the project
          example: temporary test
          type: string
        expirationSeconds:
          description: The number of seconds until the user's membership expires
          example: 3600
          type: number
      type: object
    Request_access_to_a_project_201_response:
      example:
        reason: reason
        expires: expires
        created: created
        project:
          name: name
          id: 6.027456183070403
        id: 0.8008281904610115
      properties:
        id:
          type: number
        created:
          type: string
        expires:
          type: string
        reason:
          type: string
        project:
          $ref: '#/components/schemas/Token_Verification_200_response_creator'
      type: object
    List_join_requests_200_response_inner:
      example:
        reason: reason
        expires: expires
        created: created
        id: 0.8008281904610115
        user:
          name: name
          id: 6.027456183070403
          email: email
      properties:
        id:
          type: number
        created:
          type: string
        expires:
          nullable: true
          type: string
        reason:
          type: string
        user:
          $ref: '#/components/schemas/List_maintainers_invitations_200_response_inner_user'
      required:
      - created
      - expires
      - id
      - reason
      - user
      type: object
    Join_request_detail_200_response:
      example:
        reason: reason
        expires: ""
        created: created
        id: 0.8008281904610115
        user:
          name: name
          id: 6.027456183070403
          email: email
      properties:
        id:
          type: number
        created:
          type: string
        expires:
          nullable: true
        reason:
          type: string
        user:
          $ref: '#/components/schemas/List_maintainers_invitations_200_response_inner_user'
      type: object
    Change_project_disabled_status_request:
      properties:
        isDisabled:
          description: Enable or disable project
          example: true
          type: boolean
        disableReason:
          description: Why the project is disabled
          example: Project maintenance
          type: string
        estimatedEndTime:
          description: When the project will be enabled
          example: +1 hour
          type: string
      type: object
    Create_Storage_token_request_bucketPermissions:
      properties:
        in.c:
          description: "main: read"
          type: string
      type: object
    Create_Storage_token_request:
      properties:
        description:
          description: Token description
          example: Test Token
          type: string
        canManageBuckets:
          description: Token has full permissions on tabular storage
          example: true
          type: boolean
        canManageTokens:
          description: deprecated & will be ignored - Token has permission to create
            tokens in project
          type: boolean
        canReadAllFileUploads:
          description: Token has full permissions to files staging
          example: true
          type: boolean
        canPurgeTrash:
          description: Allows permanently remove deleted configurations.
          example: true
          type: boolean
        expiresIn:
          description: Token lifetime
          example: 60
          type: number
        bucketPermissions:
          $ref: '#/components/schemas/Create_Storage_token_request_bucketPermissions'
        componentAccess[]:
          description: "Grants access for component configurations. Allowed values\
            \ are [valid component IDs](https://components.keboola.com/components)."
          type: string
      required:
      - description
      type: object
    Create_Storage_token_201_response:
      example:
        expires: ""
        canManageBuckets: true
        created: created
        description: description
        uri: uri
        isMasterToken: true
        canPurgeTrash: true
        token: token
        bucketPermissions: "{}"
        canManageTokens: true
        id: 0.8008281904610115
        isDisabled: true
        isExpired: true
        dailyCapacity: 6.027456183070403
        canReadAllFileUploads: true
      properties:
        id:
          type: number
        token:
          type: string
        created:
          type: string
        description:
          type: string
        uri:
          type: string
        isMasterToken:
          type: boolean
        canManageBuckets:
          type: boolean
        canManageTokens:
          type: boolean
        canReadAllFileUploads:
          type: boolean
        canPurgeTrash:
          type: boolean
        expires:
          nullable: true
        isExpired:
          type: boolean
        isDisabled:
          type: boolean
        dailyCapacity:
          type: number
        bucketPermissions:
          properties: {}
          type: object
      type: object
    Give_credits_request:
      properties:
        amount:
          description: Credits amount
          example: 10
          type: number
        description:
          description: Reason or label of given credits
          example: Promo credits
          type: string
      required:
      - amount
      - description
      type: object
    Give_credits_201_response:
      example:
        creditsAmount: 6.027456183070403
        created: created
        description: description
        id: 0.8008281904610115
        idStripeInvoice: ""
        moneyAmount: ""
      properties:
        id:
          type: number
        creditsAmount:
          type: number
        moneyAmount:
          nullable: true
        idStripeInvoice:
          nullable: true
        description:
          type: string
        created:
          type: string
      type: object
    Deleted_project_detail_200_response:
      example:
        hasMysql: true
        expires: ""
        hasTeradata: true
        hasSynapse: true
        dataSizeBytes: 6.027456183070403
        type: type
        hasTryModeOn: hasTryModeOn
        features:
        - ""
        - ""
        hasRedshift: true
        defaultBackend: defaultBackend
        isPurged: true
        isDeleted: true
        purgedTime: ""
        id: 0.8008281904610115
        isDisabled: true
        deletedTime: deletedTime
        limits: "{}"
        created: created
        billedMonthlyPrice: ""
        hasExasol: true
        hasSnowflake: true
        rowsCount: 1.4658129805029452
        name: name
        dataRetentionTimeInDays: 5.962133916683182
        metrics: "{}"
        region: region
      properties:
        id:
          type: number
        name:
          type: string
        type:
          type: string
        region:
          type: string
        created:
          type: string
        expires:
          nullable: true
        features:
          items: {}
          type: array
        dataSizeBytes:
          type: number
        rowsCount:
          type: number
        hasMysql:
          type: boolean
        hasRedshift:
          type: boolean
        hasSynapse:
          type: boolean
        hasExasol:
          type: boolean
        hasTeradata:
          type: boolean
        hasSnowflake:
          type: boolean
        defaultBackend:
          type: string
        hasTryModeOn:
          type: string
        limits:
          properties: {}
          type: object
        metrics:
          properties: {}
          type: object
        isDisabled:
          type: boolean
        billedMonthlyPrice:
          nullable: true
        dataRetentionTimeInDays:
          type: number
        isPurged:
          type: boolean
        isDeleted:
          type: boolean
        deletedTime:
          type: string
        purgedTime:
          nullable: true
      type: object
    Purge_deleted_project_request:
      properties:
        ignoreBackendErrors:
          description: "Ignore all errors from the backend, e.g. deleted Redshift\
            \ cluster. `false` is default."
          type: boolean
      type: object
    Purge_deleted_project_200_response:
      example:
        commandExecutionId: commandExecutionId
      properties:
        commandExecutionId:
          description: execution ID; this ID is appended to all logs provided by the
            command
          type: string
      required:
      - commandExecutionId
      type: object
    List_deleted_projects_200_response_inner_organization:
      example:
        allowAutoJoin: true
        created: created
        name: name
        id: 5.637376656633329
      properties:
        id:
          type: number
        name:
          type: string
        created:
          type: string
        allowAutoJoin:
          type: boolean
      type: object
    List_deleted_projects_200_response_inner:
      example:
        hasMysql: true
        expires: ""
        hasTeradata: true
        hasSynapse: true
        dataSizeBytes: 6.027456183070403
        type: type
        hasTryModeOn: hasTryModeOn
        features:
        - ""
        - ""
        hasRedshift: true
        defaultBackend: defaultBackend
        isPurged: true
        isDeleted: true
        purgedTime: ""
        id: 0.8008281904610115
        isDisabled: true
        deletedTime: deletedTime
        limits: "{}"
        created: created
        billedMonthlyPrice: ""
        hasSnowflake: true
        hasExasol: true
        rowsCount: 1.4658129805029452
        organization:
          allowAutoJoin: true
          created: created
          name: name
          id: 5.637376656633329
        name: name
        dataRetentionTimeInDays: 5.962133916683182
        metrics: "{}"
        region: region
      properties:
        id:
          type: number
        name:
          type: string
        type:
          type: string
        region:
          type: string
        created:
          type: string
        expires:
          nullable: true
        features:
          items: {}
          type: array
        dataSizeBytes:
          type: number
        rowsCount:
          type: number
        hasMysql:
          type: boolean
        hasRedshift:
          type: boolean
        hasSnowflake:
          type: boolean
        hasSynapse:
          type: boolean
        hasTeradata:
          type: boolean
        hasExasol:
          type: boolean
        defaultBackend:
          type: string
        hasTryModeOn:
          type: string
        limits:
          properties: {}
          type: object
        metrics:
          properties: {}
          type: object
        isDisabled:
          type: boolean
        billedMonthlyPrice:
          nullable: true
        dataRetentionTimeInDays:
          type: number
        isPurged:
          type: boolean
        isDeleted:
          type: boolean
        deletedTime:
          type: string
        purgedTime:
          nullable: true
        organization:
          $ref: '#/components/schemas/List_deleted_projects_200_response_inner_organization'
      required:
      - billedMonthlyPrice
      - created
      - dataRetentionTimeInDays
      - dataSizeBytes
      - defaultBackend
      - deletedTime
      - expires
      - features
      - hasExasol
      - hasMysql
      - hasRedshift
      - hasSnowflake
      - hasSynapse
      - hasTeradata
      - hasTryModeOn
      - id
      - isDeleted
      - isDisabled
      - isPurged
      - limits
      - metrics
      - name
      - organization
      - purgedTime
      - region
      - rowsCount
      - type
      type: object
    User_detail_200_response:
      example:
        features:
        - features
        - features
        name: name
        mfaEnabled: true
        isSuperAdmin: true
        id: 0.8008281904610115
        email: email
        canAccessLogs: true
      properties:
        id:
          type: number
        name:
          type: string
        email:
          type: string
        features:
          items:
            type: string
          type: array
        mfaEnabled:
          type: boolean
        canAccessLogs:
          type: boolean
        isSuperAdmin:
          type: boolean
      type: object
    Update_a_user_request:
      properties:
        name:
          description: User name
          example: Martin
          type: string
      type: object
    List_my_maintainer_invitations_200_response_inner:
      example:
        creator:
          name: name
          id: 6.027456183070403
          email: email
        created: created
        id: 0.8008281904610115
        maintainer:
          name: name
          id: 6.027456183070403
      properties:
        id:
          type: number
        created:
          type: string
        maintainer:
          $ref: '#/components/schemas/Token_Verification_200_response_creator'
        creator:
          $ref: '#/components/schemas/List_maintainers_invitations_200_response_inner_user'
      type: object
    List_my_organization_invitations_200_response_inner:
      example:
        creator:
          name: name
          id: 6.027456183070403
          email: email
        created: created
        organization:
          name: name
          id: 6.027456183070403
        id: 0.8008281904610115
      properties:
        id:
          type: number
        created:
          type: string
        organization:
          $ref: '#/components/schemas/Token_Verification_200_response_creator'
        creator:
          $ref: '#/components/schemas/List_maintainers_invitations_200_response_inner_user'
      type: object
    List_my_join_requests_200_response_inner:
      example:
        reason: reason
        expires: expires
        crated: crated
        created: created
        project:
          name: name
          id: 6.027456183070403
        id: 0.8008281904610115
      properties:
        id:
          type: number
        created:
          type: string
        expires:
          nullable: true
          type: string
        reason:
          type: string
        project:
          $ref: '#/components/schemas/Token_Verification_200_response_creator'
        crated:
          type: string
      required:
      - expires
      - id
      - project
      - reason
      type: object
    List_my_project_invitations_200_response_inner:
      example:
        reason: reason
        expires: ""
        creator:
          name: name
          id: 6.027456183070403
          email: email
        role: role
        created: created
        project:
          name: name
          id: 6.027456183070403
        id: 0.8008281904610115
      properties:
        id:
          type: number
        created:
          type: string
        expires:
          nullable: true
        reason:
          type: string
        role:
          type: string
        project:
          $ref: '#/components/schemas/Token_Verification_200_response_creator'
        creator:
          $ref: '#/components/schemas/List_maintainers_invitations_200_response_inner_user'
      type: object
    List_used_promo_codes_200_response_inner:
      example:
        code: code
        project:
          name: name
          id: 6.027456183070403
        usedAt: usedAt
      properties:
        code:
          type: string
        usedAt:
          type: string
        project:
          $ref: '#/components/schemas/Token_Verification_200_response_creator'
      required:
      - code
      - project
      - usedAt
      type: object
    Create_project_request:
      properties:
        code:
          description: Promo-code name
          example: TEST1568723795
          type: string
      required:
      - code
      type: object
    Create_project_201_response_limits:
      example:
        kbc.adminsCount:
          name: name
          value: 5.962133916683182
        goodData.dataSizeBytes:
          name: name
          value: 5.962133916683182
        components.jobsParallelism:
          name: name
          value: 5.962133916683182
        kbc.writersCount:
          name: name
          value: 5.962133916683182
        goodData.demoTokenEnabled:
          name: name
          value: 5.962133916683182
        goodData.prodTokenEnabled:
          name: name
          value: 5.962133916683182
        goodData.usersCount:
          name: name
          value: 5.962133916683182
        storage.dataSizeBytes:
          name: name
          value: 5.962133916683182
        storage.jobsParallelism:
          name: name
          value: 5.962133916683182
        kbc.extractorsCount:
          name: name
          value: 5.962133916683182
        orchestrations.count:
          name: name
          value: 5.962133916683182
      properties:
        components.jobsParallelism:
          $ref: '#/components/schemas/List_projects_for_an_organization_200_response_limits_limitName'
        goodData.dataSizeBytes:
          $ref: '#/components/schemas/List_projects_for_an_organization_200_response_limits_limitName'
        goodData.demoTokenEnabled:
          $ref: '#/components/schemas/List_projects_for_an_organization_200_response_limits_limitName'
        goodData.prodTokenEnabled:
          $ref: '#/components/schemas/List_projects_for_an_organization_200_response_limits_limitName'
        goodData.usersCount:
          $ref: '#/components/schemas/List_projects_for_an_organization_200_response_limits_limitName'
        kbc.adminsCount:
          $ref: '#/components/schemas/List_projects_for_an_organization_200_response_limits_limitName'
        kbc.extractorsCount:
          $ref: '#/components/schemas/List_projects_for_an_organization_200_response_limits_limitName'
        kbc.writersCount:
          $ref: '#/components/schemas/List_projects_for_an_organization_200_response_limits_limitName'
        orchestrations.count:
          $ref: '#/components/schemas/List_projects_for_an_organization_200_response_limits_limitName'
        storage.dataSizeBytes:
          $ref: '#/components/schemas/List_projects_for_an_organization_200_response_limits_limitName'
        storage.jobsParallelism:
          $ref: '#/components/schemas/List_projects_for_an_organization_200_response_limits_limitName'
      type: object
    Create_project_201_response:
      example:
        hasMysql: true
        expires: expires
        hasTeradata: true
        created: created
        hasSynapse: true
        dataSizeBytes: 6.027456183070403
        billedMonthlyPrice: ""
        type: type
        hasSnowflake: true
        hasExasol: true
        hasTryModeOn: hasTryModeOn
        features:
        - ""
        - ""
        hasRedshift: true
        defaultBackend: defaultBackend
        rowsCount: 1.4658129805029452
        name: name
        dataRetentionTimeInDays: 5.962133916683182
        id: 0.8008281904610115
        metrics: "{}"
        isDisabled: true
        region: region
        limits:
          kbc.adminsCount:
            name: name
            value: 5.962133916683182
          goodData.dataSizeBytes:
            name: name
            value: 5.962133916683182
          components.jobsParallelism:
            name: name
            value: 5.962133916683182
          kbc.writersCount:
            name: name
            value: 5.962133916683182
          goodData.demoTokenEnabled:
            name: name
            value: 5.962133916683182
          goodData.prodTokenEnabled:
            name: name
            value: 5.962133916683182
          goodData.usersCount:
            name: name
            value: 5.962133916683182
          storage.dataSizeBytes:
            name: name
            value: 5.962133916683182
          storage.jobsParallelism:
            name: name
            value: 5.962133916683182
          kbc.extractorsCount:
            name: name
            value: 5.962133916683182
          orchestrations.count:
            name: name
            value: 5.962133916683182
      properties:
        id:
          type: number
        name:
          type: string
        type:
          type: string
        region:
          type: string
        created:
          type: string
        expires:
          type: string
        features:
          items: {}
          type: array
        dataSizeBytes:
          type: number
        rowsCount:
          type: number
        hasMysql:
          type: boolean
        hasRedshift:
          type: boolean
        hasSnowflake:
          type: boolean
        hasExasol:
          type: boolean
        hasSynapse:
          type: boolean
        hasTeradata:
          type: boolean
        defaultBackend:
          type: string
        hasTryModeOn:
          type: string
        limits:
          $ref: '#/components/schemas/Create_project_201_response_limits'
        metrics:
          properties: {}
          type: object
        isDisabled:
          type: boolean
        billedMonthlyPrice:
          nullable: true
        dataRetentionTimeInDays:
          type: number
      type: object
    Retrieve_all_promo_codes_200_response_inner_organization:
      example:
        crmId: crmId
        allowAutoJoin: true
        created: created
        name: name
        id: 0.8008281904610115
        mfaRequired: true
        activityCenterProjectId: 6.027456183070403
      properties:
        id:
          type: number
        name:
          type: string
        created:
          type: string
        allowAutoJoin:
          type: boolean
        crmId:
          type: string
        activityCenterProjectId:
          type: number
        mfaRequired:
          type: boolean
      type: object
    Retrieve_all_promo_codes_200_response_inner_projectTemplate:
      example:
        stringId: stringId
        defaultBackend: defaultBackend
        expirationDays: 1.4658129805029452
        name: name
        description: description
        billedMonthlyPrice: ""
        hasTryModeOn: true
      properties:
        stringId:
          type: string
        name:
          type: string
        description:
          type: string
        expirationDays:
          type: number
        billedMonthlyPrice:
          nullable: true
        hasTryModeOn:
          type: boolean
        defaultBackend:
          type: string
      type: object
    Retrieve_all_promo_codes_200_response_inner:
      example:
        expires: expires
        code: code
        organization:
          crmId: crmId
          allowAutoJoin: true
          created: created
          name: name
          id: 0.8008281904610115
          mfaRequired: true
          activityCenterProjectId: 6.027456183070403
        projectTemplate:
          stringId: stringId
          defaultBackend: defaultBackend
          expirationDays: 1.4658129805029452
          name: name
          description: description
          billedMonthlyPrice: ""
          hasTryModeOn: true
      properties:
        code:
          type: string
        expires:
          type: string
        organization:
          $ref: '#/components/schemas/Retrieve_all_promo_codes_200_response_inner_organization'
        projectTemplate:
          $ref: '#/components/schemas/Retrieve_all_promo_codes_200_response_inner_projectTemplate'
      required:
      - code
      - expires
      - organization
      - projectTemplate
      type: object
    Create_new_promo_codes_request:
      properties:
        code:
          description: Promo-code name
          example: TEST
          type: string
        expirationDays:
          description: Promo-code expiration days
          example: 10
          type: number
        organizationId:
          description: Add to organization
          example: 1
          type: number
        projectTemplateStringId:
          description: Use project template
          example: poc15DaysGuideMode
          type: string
      required:
      - code
      - expirationDays
      - organizationId
      - projectTemplateStringId
      type: object
    Create_new_promo_codes_201_response:
      example:
        expires: expires
        code: code
        organization:
          crmId: crmId
          allowAutoJoin: true
          created: created
          name: name
          id: 0.8008281904610115
          mfaRequired: true
          activityCenterProjectId: 6.027456183070403
        projectTemplate:
          stringId: stringId
          defaultBackend: defaultBackend
          expirationDays: 1.4658129805029452
          name: name
          description: description
          billedMonthlyPrice: ""
          hasTryModeOn: true
      properties:
        code:
          type: string
        expires:
          type: string
        organization:
          $ref: '#/components/schemas/Retrieve_all_promo_codes_200_response_inner_organization'
        projectTemplate:
          $ref: '#/components/schemas/Retrieve_all_promo_codes_200_response_inner_projectTemplate'
      type: object
    Retrieve_all_features_200_response_inner:
      example:
        created: created
        name: name
        description: description
        id: 0.8008281904610115
        type: type
        title: title
      properties:
        id:
          type: number
        name:
          type: string
        type:
          type: string
        title:
          type: string
        description:
          type: string
        created:
          type: string
      type: object
    Update_a_feature_request:
      properties:
        title:
          description: Feature title (display name)
          example: Show new design
          type: string
        description:
          description: Short description of the feature
          example: Users with this feature will see new UI
          type: string
        canBeManageByAdmin:
          description: "If true, the feature can be assigned by a user without the\
            \ superadmin role"
          type: boolean
        canBeManagedViaAPI:
          description: Enables or disables the ability to assign the project/admin
            feature using the API
          example: true
          type: boolean
      type: object
    Create_a_feature_request:
      properties:
        name:
          description: Feature name (programmatic name)
          example: show-new-design
          type: string
        type:
          enum:
          - admin
          - project
          type: string
        title:
          description: Feature title (display name)
          example: Show new design
          type: string
        description:
          description: Short description of the feature
          example: Users with this feature will see new UI
          type: string
        canBeManageByAdmin:
          description: "If true, the feature can be assigned by a user without the\
            \ superadmin role"
          type: boolean
        canBeManagedViaAPI:
          description: Enables or disables the ability to assign the project/admin
            feature using the API
          example: true
          type: boolean
      required:
      - description
      - name
      - title
      type: object
    Create_a_feature_201_response:
      example:
        canBeManageByAdmin: true
        canBeManagedViaAPI: true
        created: created
        name: name
        description: description
        id: 0.8008281904610115
        type: type
        title: title
      properties:
        id:
          type: number
        name:
          type: string
        type:
          type: string
        title:
          type: string
        description:
          type: string
        canBeManageByAdmin:
          type: boolean
        canBeManagedViaAPI:
          type: boolean
        created:
          type: string
      type: object
    Add_a_project_feature_request:
      properties:
        feature:
          description: Feature name
          example: show-new-design
          type: string
      required:
      - feature
      type: object
    Add_a_user_feature_200_response:
      example:
        features:
        - features
        - features
        name: name
        id: 0.8008281904610115
        email: email
      properties:
        id:
          type: number
        name:
          type: string
        email:
          type: string
        features:
          items:
            type: string
          type: array
      type: object
    Create_new_AWS_S3_Storage_request:
      properties:
        awsKey:
          type: string
        filesBucket:
          type: string
        region:
          type: string
        owner:
          description: Associated AWS account owner
          type: string
        awsSecret:
          type: string
      required:
      - awsKey
      - awsSecret
      - filesBucket
      - owner
      - region
      type: object
    Create_new_AWS_S3_Storage_201_response_creator:
      example:
        name: name
        id: id
      properties:
        id:
          type: string
        name:
          description: of-creator
          type: string
      type: object
    Create_new_AWS_S3_Storage_201_response:
      example:
        owner: owner
        isDefault: isDefault
        creator:
          name: name
          id: id
        provider: provider
        created: created
        awsKey: awsKey
        id: id
        region: region
        filesBucket: filesBucket
      properties:
        awsKey:
          type: string
        filesBucket:
          type: string
        region:
          type: string
        owner:
          description: Associated AWS account owner
          type: string
        id:
          type: string
        isDefault:
          type: string
        provider:
          type: string
        created:
          description: 06-17T15:07:48+01:00
          type: string
        creator:
          $ref: '#/components/schemas/Create_new_AWS_S3_Storage_201_response_creator'
      required:
      - awsKey
      - filesBucket
      - id
      - owner
      - region
      type: object
    Create_new_Google_Cloud_Storage_request_gcsCredentials:
      properties:
        type:
          type: string
        project_id:
          type: string
        private_key_id:
          type: string
        private_key:
          type: string
        client_email:
          type: string
        client_id:
          type: string
        auth_uri:
          type: string
        token_uri:
          type: string
        auth_provider_x509_cert_url:
          type: string
        client_x509_cert_url:
          type: string
      required:
      - auth_provider_x509_cert_url
      - auth_uri
      - client_email
      - client_id
      - client_x509_cert_url
      - private_key
      - private_key_id
      - project_id
      - token_uri
      - type
      type: object
    Create_new_Google_Cloud_Storage_request:
      properties:
        gcsCredentials:
          $ref: '#/components/schemas/Create_new_Google_Cloud_Storage_request_gcsCredentials'
        filesBucket:
          description: name of the bucket
          type: string
        owner:
          enum:
          - keboola
          - client
          type: string
        region:
          type: string
      required:
      - filesBucket
      - owner
      - region
      type: object
    Create_new_Google_Cloud_Storage_201_response_gcsCredentials:
      example:
        token_uri: token_uri
        private_key_id: private_key_id
        client_x509_cert_url: client_x509_cert_url
        project_id: project_id
        auth_uri: auth_uri
        auth_provider_x509_cert_url: auth_provider_x509_cert_url
        client_email: client_email
        type: type
        client_id: client_id
      properties:
        type:
          type: string
        project_id:
          type: string
        private_key_id:
          type: string
        client_email:
          type: string
        client_id:
          type: string
        auth_uri:
          type: string
        token_uri:
          type: string
        auth_provider_x509_cert_url:
          type: string
        client_x509_cert_url:
          type: string
      required:
      - auth_provider_x509_cert_url
      - auth_uri
      - client_email
      - client_id
      - client_x509_cert_url
      - private_key_id
      - project_id
      - token_uri
      - type
      type: object
    Create_new_Google_Cloud_Storage_201_response:
      example:
        isDefault: true
        creator:
          name: name
          id: 6.027456183070403
        gcsCredentials:
          token_uri: token_uri
          private_key_id: private_key_id
          client_x509_cert_url: client_x509_cert_url
          project_id: project_id
          auth_uri: auth_uri
          auth_provider_x509_cert_url: auth_provider_x509_cert_url
          client_email: client_email
          type: type
          client_id: client_id
        provider: provider
        created: created
        id: 0.8008281904610115
        gcsSnowflakeIntegrationName: gcsSnowflakeIntegrationName
        region: region
        filesBucket: filesBucket
      properties:
        id:
          type: number
        isDefault:
          type: boolean
        provider:
          type: string
        region:
          type: string
        created:
          description: (ISO8601 format) `Y-m-d\TH:i:sO`
          type: string
        creator:
          $ref: '#/components/schemas/Token_Verification_200_response_creator'
        gcsCredentials:
          $ref: '#/components/schemas/Create_new_Google_Cloud_Storage_201_response_gcsCredentials'
        gcsSnowflakeIntegrationName:
          type: string
        filesBucket:
          description: name of the bucket
          type: string
      type: object
    Create_new_Azure_Blob_Storage_request:
      properties:
        accountName:
          type: string
        containerName:
          description: of-container (required)
          type: string
        owner:
          type: string
        accountKey:
          description: new key to be rotated to
          type: string
      required:
      - accountKey
      - accountName
      - owner
      type: object
    Create_new_Azure_Blob_Storage_201_response:
      example:
        owner: owner
        isDefault: isDefault
        creator:
          name: name
          id: id
        accountName: accountName
        provider: provider
        containerName: containerName
        created: created
        id: id
      properties:
        accountName:
          type: string
        containerName:
          description: of-container (required)
          type: string
        owner:
          type: string
        id:
          type: string
        isDefault:
          type: string
        provider:
          type: string
        created:
          description: 06-17T15:07:48+01:00
          type: string
        creator:
          $ref: '#/components/schemas/Create_new_AWS_S3_Storage_201_response_creator'
      required:
      - accountName
      - owner
      type: object
    Set_Blob_Storage_as_default_200_response:
      example:
        owner: owner
        isDefault: isDefault
        accountName: accountName
        containerName: containerName
        id: id
      properties:
        accountName:
          type: string
        containerName:
          description: of-container (required)
          type: string
        owner:
          type: string
        id:
          type: string
        isDefault:
          type: string
      required:
      - accountName
      - owner
      type: object
    Create_a_new_backend_request:
      properties:
        backend:
          description: "can be redshift, snowflake ,synapse, exasol, teradata"
          type: string
        host:
          type: string
        warehouse:
          description: required only for Snowflake
          type: string
        username:
          type: string
        password:
          type: string
        region:
          type: string
        owner:
          description: associated AWS account owner
          type: string
        database:
          description: required for Synapse and Teradata
          type: string
        useSynapseManagedIdentity:
          description: optional for Synapse
          type: string
        useDynamicBackends:
          description: "Only for backends supporting dynamic sizing (Snowflake). When\
            \ enabled, new projects get dynamic backends assigned automatically."
          type: boolean
      required:
      - backend
      - host
      - owner
      - password
      - region
      - username
      type: object
    Create_a_new_backend_201_response:
      example:
        host: host
        backend: backend
        id: 0.8008281904610115
        region: region
      properties:
        id:
          type: number
        host:
          description: 37-demo.cmizbsfmzc6w.us-east-1.redshift.amazonaws.com (required)
          type: string
        backend:
          type: string
        region:
          description: east-1
          type: string
      required:
      - backend
      - id
      type: object
    Create_a_new_BigQuery_backend_request:
      properties:
        owner:
          description: associated GCP account owner
          type: string
        folderId:
          description: where is service account created
          type: string
        region:
          type: string
        credentials:
          $ref: '#/components/schemas/Create_new_Google_Cloud_Storage_request_gcsCredentials'
      required:
      - folderId
      - owner
      - region
      type: object
    Create_a_new_BigQuery_backend_201_response:
      example:
        credentials:
          token_uri: token_uri
          private_key_id: private_key_id
          client_x509_cert_url: client_x509_cert_url
          project_id: project_id
          auth_uri: auth_uri
          auth_provider_x509_cert_url: auth_provider_x509_cert_url
          client_email: client_email
          type: type
          client_id: client_id
        backend: backend
        id: 0.8008281904610115
        region: region
        folderId: 6.027456183070403
      properties:
        id:
          type: number
        region:
          type: string
        backend:
          type: string
        credentials:
          $ref: '#/components/schemas/Create_new_Google_Cloud_Storage_201_response_gcsCredentials'
        folderId:
          type: number
      required:
      - region
      type: object
    Run_Command_request:
      properties:
        command:
          description: command to execute
          type: string
        parameters:
          description: command parameters
          items: {}
          type: array
      required:
      - command
      type: object
    List_Applications_200_response_inner:
      example:
        basePath: basePath
        name: name
        styles:
        - styles
        - styles
        isCritical: true
        id: id
        scripts:
        - scripts
        - scripts
        version: version
      properties:
        id:
          type: string
        name:
          type: string
        version:
          type: string
        basePath:
          type: string
        scripts:
          items:
            type: string
          type: array
        styles:
          items:
            type: string
          type: array
        isCritical:
          type: boolean
      type: object
    Register_New_Application_Version_request:
      properties:
        manifest_url:
          description: URL of manifest describing UI build
          type: string
        activate:
          description: Activate version after registration
          type: boolean
      required:
      - manifest_url
      type: object
    Register_New_Application_Version_201_response_app:
      example:
        stringId: stringId
        created: created
        name: name
        id: id
      properties:
        id:
          type: string
        stringId:
          type: string
        name:
          type: string
        created:
          type: string
      type: object
    Register_New_Application_Version_201_response_verion:
      example:
        created: created
        isCritical: true
        id: 0.8008281904610115
        isActive: true
        version: version
      properties:
        id:
          type: number
        created:
          type: string
        version:
          type: string
        isActive:
          type: boolean
        isCritical:
          type: boolean
      type: object
    Register_New_Application_Version_201_response:
      example:
        app:
          stringId: stringId
          created: created
          name: name
          id: id
        verion:
          created: created
          isCritical: true
          id: 0.8008281904610115
          isActive: true
          version: version
      properties:
        app:
          $ref: '#/components/schemas/Register_New_Application_Version_201_response_app'
        verion:
          $ref: '#/components/schemas/Register_New_Application_Version_201_response_verion'
      type: object
    ProjectModel_limits:
      example:
        kbc.adminsCount:
          name: name
          value: 5.962133916683182
        goodData.dataSizeBytes:
          name: name
          value: 5.962133916683182
        kbc.monthlyProjectPowerLimit:
          name: name
          value: 5.962133916683182
        components.jobsParallelism:
          name: name
          value: 5.962133916683182
        kbc.writersCount:
          name: name
          value: 5.962133916683182
        goodData.demoTokenEnabled:
          name: name
          value: 5.962133916683182
        goodData.prodTokenEnabled:
          name: name
          value: 5.962133916683182
        goodData.usersCount:
          name: name
          value: 5.962133916683182
        storage.dataSizeBytes:
          name: name
          value: 5.962133916683182
        storage.jobsParallelism:
          name: name
          value: 5.962133916683182
        kbc.extractorsCount:
          name: name
          value: 5.962133916683182
        orchestrations.count:
          name: name
          value: 5.962133916683182
      properties:
        components.jobsParallelism:
          $ref: '#/components/schemas/List_projects_for_an_organization_200_response_limits_limitName'
        goodData.dataSizeBytes:
          $ref: '#/components/schemas/List_projects_for_an_organization_200_response_limits_limitName'
        goodData.demoTokenEnabled:
          $ref: '#/components/schemas/List_projects_for_an_organization_200_response_limits_limitName'
        goodData.prodTokenEnabled:
          $ref: '#/components/schemas/List_projects_for_an_organization_200_response_limits_limitName'
        goodData.usersCount:
          $ref: '#/components/schemas/List_projects_for_an_organization_200_response_limits_limitName'
        kbc.adminsCount:
          $ref: '#/components/schemas/List_projects_for_an_organization_200_response_limits_limitName'
        kbc.extractorsCount:
          $ref: '#/components/schemas/List_projects_for_an_organization_200_response_limits_limitName'
        kbc.monthlyProjectPowerLimit:
          $ref: '#/components/schemas/List_projects_for_an_organization_200_response_limits_limitName'
        kbc.writersCount:
          $ref: '#/components/schemas/List_projects_for_an_organization_200_response_limits_limitName'
        orchestrations.count:
          $ref: '#/components/schemas/List_projects_for_an_organization_200_response_limits_limitName'
        storage.dataSizeBytes:
          $ref: '#/components/schemas/List_projects_for_an_organization_200_response_limits_limitName'
        storage.jobsParallelism:
          $ref: '#/components/schemas/List_projects_for_an_organization_200_response_limits_limitName'
      type: object
    ProjectModel_metrics:
      example:
        kbc.adminsCount:
          name: name
          value: 5.962133916683182
        storage.dataSizeBytes:
          name: name
          value: 5.962133916683182
        orchestrations.count:
          name: name
          value: 5.962133916683182
        storage.rowsCount:
          name: name
          value: 5.962133916683182
      properties:
        kbc.adminsCount:
          $ref: '#/components/schemas/List_projects_for_an_organization_200_response_limits_limitName'
        orchestrations.count:
          $ref: '#/components/schemas/List_projects_for_an_organization_200_response_limits_limitName'
        storage.dataSizeBytes:
          $ref: '#/components/schemas/List_projects_for_an_organization_200_response_limits_limitName'
        storage.rowsCount:
          $ref: '#/components/schemas/List_projects_for_an_organization_200_response_limits_limitName'
      type: object
    ProjectModel_organization:
      example:
        crmId: crmId
        allowAutoJoin: true
        created: created
        name: name
        id: 2.3021358869347655
        activityCenterProjectId: activityCenterProjectId
      properties:
        id:
          type: number
        name:
          type: string
        crmId:
          type: string
        activityCenterProjectId:
          type: string
        created:
          type: string
        allowAutoJoin:
          type: boolean
      type: object
    ProjectModel_fileStorage_creator:
      example:
        name: ""
        id: 9.301444243932576
      properties:
        id:
          type: number
        name:
          nullable: true
      type: object
    ProjectModel_fileStorage:
      example:
        owner: owner
        isDefault: true
        creator:
          name: ""
          id: 9.301444243932576
        created: created
        awsKey: awsKey
        id: 7.061401241503109
        region: region
        filesBucket: filesBucket
      properties:
        id:
          type: number
        awsKey:
          type: string
        region:
          type: string
        filesBucket:
          type: string
        owner:
          type: string
        isDefault:
          type: boolean
        created:
          type: string
        creator:
          $ref: '#/components/schemas/ProjectModel_fileStorage_creator'
      type: object
    ProjectModel_backends_snowflake:
      example:
        owner: owner
        host: host
        id: 3.616076749251911
        region: region
      properties:
        id:
          type: number
        host:
          type: string
        region:
          type: string
        owner:
          type: string
      type: object
    ProjectModel_backends:
      example:
        snowflake:
          owner: owner
          host: host
          id: 3.616076749251911
          region: region
      properties:
        snowflake:
          $ref: '#/components/schemas/ProjectModel_backends_snowflake'
      type: object
    ProjectModel_payAsYouGo:
      example:
        purchasedCredits: 2.027123023002322
      properties:
        purchasedCredits:
          type: number
      type: object
    ABSCreated_allOf_creator:
      properties:
        id:
          example: "123"
          type: string
        name:
          description: of-creator
          example: name
          type: string
      type: object
    StorageBackendListBase_stats:
      properties:
        projectsCount:
          example: 10
          type: number
        bucketsCount:
          example: 100
          type: number
        dataSizeGB:
          example: 100
          type: number
        rowsCount:
          example: 1000000
          type: number
      required:
      - bucketsCount
      - dataSizeGB
      - projectsCount
      - rowsCount
      type: object
    StorageBackendListBase_creator:
      properties:
        id:
          example: 10
          type: number
        name:
          example: keboola
          type: string
      required:
      - id
      - name
      type: object
    StorageBackendListSnowflake_allOf_saml2Configuration:
      description: available only for Snowflake backend
      properties:
        idpEntityId:
          description: idp.com
          example: https://example
          type: string
        spEntityId:
          description: sp.com
          example: https://example
          type: string
        spAcsUrl:
          description: sp.com/acs
          example: https://example
          type: string
        publicKey:
          example: RSA_PUBLIC_KEY
          type: string
      type: object
  securitySchemes:
    ApiKeyAuth:
      in: header
      name: X-KBC-ManageApiToken
      type: apiKey
