/*
Manage API

The Keboola Connection Management API covers all tasks required for managing projects, as well as some super admin features for controlling and monitoring Keboola Connection.  ## Projects Management  * Create, modify and delete maintainers, organizations and projects  * Move projects between organizations  * Define project limits  * Provision Redshift and other Storage backends  * Access project management activity log  ## Projects Monitoring  * Monitoring of projects over organizations and maintainers  ## Super User Control and Monitoring  * UI release and deployment  * Components management  * Storage and Syrup jobs monitoring (will be provided by Syrup utilizing new tokens for authorization)  * Final project delete  * Workers start/shutdown, etc.  ## Authentication  The API supports authentication by a personal access token, which can be retrieved in [Account Settings](https://connection.keboola.com/admin/account/change-password) in Keboola Connection. An access token is tied to an administrator and its permissions are derived from their permissions. When the administrator is disabled or deleted, all their tokens become invalid too.  ## Token Types  There are the following types of tokens:  | Name | Tied to User | Token string is available only on create | Description  | | ------------- | ------------- | ------------------- | ----- | | user | Yes | Yes |Full access to maintainers, organizations and projects. Access is limited only to resources which are available for the token user.| | super | No | Yes | KBC management. Limited scopes can be specified `super_ui_deploy`, `super_monitoring`, ...  |

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package management

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ListDeletedProjects200ResponseInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListDeletedProjects200ResponseInner{}

// ListDeletedProjects200ResponseInner struct for ListDeletedProjects200ResponseInner
type ListDeletedProjects200ResponseInner struct {
	Id float32 `json:"id"`
	Name string `json:"name"`
	Type string `json:"type"`
	Region string `json:"region"`
	Created string `json:"created"`
	Expires interface{} `json:"expires"`
	Features []interface{} `json:"features"`
	DataSizeBytes float32 `json:"dataSizeBytes"`
	RowsCount float32 `json:"rowsCount"`
	HasMysql bool `json:"hasMysql"`
	HasRedshift bool `json:"hasRedshift"`
	HasSnowflake bool `json:"hasSnowflake"`
	HasSynapse bool `json:"hasSynapse"`
	HasTeradata bool `json:"hasTeradata"`
	HasExasol bool `json:"hasExasol"`
	DefaultBackend string `json:"defaultBackend"`
	HasTryModeOn string `json:"hasTryModeOn"`
	Limits map[string]interface{} `json:"limits"`
	Metrics map[string]interface{} `json:"metrics"`
	IsDisabled bool `json:"isDisabled"`
	BilledMonthlyPrice interface{} `json:"billedMonthlyPrice"`
	DataRetentionTimeInDays float32 `json:"dataRetentionTimeInDays"`
	IsPurged bool `json:"isPurged"`
	IsDeleted bool `json:"isDeleted"`
	DeletedTime string `json:"deletedTime"`
	PurgedTime interface{} `json:"purgedTime"`
	Organization ListDeletedProjects200ResponseInnerOrganization `json:"organization"`
}

type _ListDeletedProjects200ResponseInner ListDeletedProjects200ResponseInner

// NewListDeletedProjects200ResponseInner instantiates a new ListDeletedProjects200ResponseInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListDeletedProjects200ResponseInner(id float32, name string, type_ string, region string, created string, expires interface{}, features []interface{}, dataSizeBytes float32, rowsCount float32, hasMysql bool, hasRedshift bool, hasSnowflake bool, hasSynapse bool, hasTeradata bool, hasExasol bool, defaultBackend string, hasTryModeOn string, limits map[string]interface{}, metrics map[string]interface{}, isDisabled bool, billedMonthlyPrice interface{}, dataRetentionTimeInDays float32, isPurged bool, isDeleted bool, deletedTime string, purgedTime interface{}, organization ListDeletedProjects200ResponseInnerOrganization) *ListDeletedProjects200ResponseInner {
	this := ListDeletedProjects200ResponseInner{}
	this.Id = id
	this.Name = name
	this.Type = type_
	this.Region = region
	this.Created = created
	this.Expires = expires
	this.Features = features
	this.DataSizeBytes = dataSizeBytes
	this.RowsCount = rowsCount
	this.HasMysql = hasMysql
	this.HasRedshift = hasRedshift
	this.HasSnowflake = hasSnowflake
	this.HasSynapse = hasSynapse
	this.HasTeradata = hasTeradata
	this.HasExasol = hasExasol
	this.DefaultBackend = defaultBackend
	this.HasTryModeOn = hasTryModeOn
	this.Limits = limits
	this.Metrics = metrics
	this.IsDisabled = isDisabled
	this.BilledMonthlyPrice = billedMonthlyPrice
	this.DataRetentionTimeInDays = dataRetentionTimeInDays
	this.IsPurged = isPurged
	this.IsDeleted = isDeleted
	this.DeletedTime = deletedTime
	this.PurgedTime = purgedTime
	this.Organization = organization
	return &this
}

// NewListDeletedProjects200ResponseInnerWithDefaults instantiates a new ListDeletedProjects200ResponseInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListDeletedProjects200ResponseInnerWithDefaults() *ListDeletedProjects200ResponseInner {
	this := ListDeletedProjects200ResponseInner{}
	return &this
}

// GetId returns the Id field value
func (o *ListDeletedProjects200ResponseInner) GetId() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ListDeletedProjects200ResponseInner) GetIdOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ListDeletedProjects200ResponseInner) SetId(v float32) {
	o.Id = v
}

// GetName returns the Name field value
func (o *ListDeletedProjects200ResponseInner) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *ListDeletedProjects200ResponseInner) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *ListDeletedProjects200ResponseInner) SetName(v string) {
	o.Name = v
}

// GetType returns the Type field value
func (o *ListDeletedProjects200ResponseInner) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *ListDeletedProjects200ResponseInner) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *ListDeletedProjects200ResponseInner) SetType(v string) {
	o.Type = v
}

// GetRegion returns the Region field value
func (o *ListDeletedProjects200ResponseInner) GetRegion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Region
}

// GetRegionOk returns a tuple with the Region field value
// and a boolean to check if the value has been set.
func (o *ListDeletedProjects200ResponseInner) GetRegionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Region, true
}

// SetRegion sets field value
func (o *ListDeletedProjects200ResponseInner) SetRegion(v string) {
	o.Region = v
}

// GetCreated returns the Created field value
func (o *ListDeletedProjects200ResponseInner) GetCreated() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Created
}

// GetCreatedOk returns a tuple with the Created field value
// and a boolean to check if the value has been set.
func (o *ListDeletedProjects200ResponseInner) GetCreatedOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Created, true
}

// SetCreated sets field value
func (o *ListDeletedProjects200ResponseInner) SetCreated(v string) {
	o.Created = v
}

// GetExpires returns the Expires field value
// If the value is explicit nil, the zero value for interface{} will be returned
func (o *ListDeletedProjects200ResponseInner) GetExpires() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}

	return o.Expires
}

// GetExpiresOk returns a tuple with the Expires field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ListDeletedProjects200ResponseInner) GetExpiresOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Expires) {
		return nil, false
	}
	return &o.Expires, true
}

// SetExpires sets field value
func (o *ListDeletedProjects200ResponseInner) SetExpires(v interface{}) {
	o.Expires = v
}

// GetFeatures returns the Features field value
func (o *ListDeletedProjects200ResponseInner) GetFeatures() []interface{} {
	if o == nil {
		var ret []interface{}
		return ret
	}

	return o.Features
}

// GetFeaturesOk returns a tuple with the Features field value
// and a boolean to check if the value has been set.
func (o *ListDeletedProjects200ResponseInner) GetFeaturesOk() ([]interface{}, bool) {
	if o == nil {
		return nil, false
	}
	return o.Features, true
}

// SetFeatures sets field value
func (o *ListDeletedProjects200ResponseInner) SetFeatures(v []interface{}) {
	o.Features = v
}

// GetDataSizeBytes returns the DataSizeBytes field value
func (o *ListDeletedProjects200ResponseInner) GetDataSizeBytes() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.DataSizeBytes
}

// GetDataSizeBytesOk returns a tuple with the DataSizeBytes field value
// and a boolean to check if the value has been set.
func (o *ListDeletedProjects200ResponseInner) GetDataSizeBytesOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DataSizeBytes, true
}

// SetDataSizeBytes sets field value
func (o *ListDeletedProjects200ResponseInner) SetDataSizeBytes(v float32) {
	o.DataSizeBytes = v
}

// GetRowsCount returns the RowsCount field value
func (o *ListDeletedProjects200ResponseInner) GetRowsCount() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.RowsCount
}

// GetRowsCountOk returns a tuple with the RowsCount field value
// and a boolean to check if the value has been set.
func (o *ListDeletedProjects200ResponseInner) GetRowsCountOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RowsCount, true
}

// SetRowsCount sets field value
func (o *ListDeletedProjects200ResponseInner) SetRowsCount(v float32) {
	o.RowsCount = v
}

// GetHasMysql returns the HasMysql field value
func (o *ListDeletedProjects200ResponseInner) GetHasMysql() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.HasMysql
}

// GetHasMysqlOk returns a tuple with the HasMysql field value
// and a boolean to check if the value has been set.
func (o *ListDeletedProjects200ResponseInner) GetHasMysqlOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.HasMysql, true
}

// SetHasMysql sets field value
func (o *ListDeletedProjects200ResponseInner) SetHasMysql(v bool) {
	o.HasMysql = v
}

// GetHasRedshift returns the HasRedshift field value
func (o *ListDeletedProjects200ResponseInner) GetHasRedshift() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.HasRedshift
}

// GetHasRedshiftOk returns a tuple with the HasRedshift field value
// and a boolean to check if the value has been set.
func (o *ListDeletedProjects200ResponseInner) GetHasRedshiftOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.HasRedshift, true
}

// SetHasRedshift sets field value
func (o *ListDeletedProjects200ResponseInner) SetHasRedshift(v bool) {
	o.HasRedshift = v
}

// GetHasSnowflake returns the HasSnowflake field value
func (o *ListDeletedProjects200ResponseInner) GetHasSnowflake() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.HasSnowflake
}

// GetHasSnowflakeOk returns a tuple with the HasSnowflake field value
// and a boolean to check if the value has been set.
func (o *ListDeletedProjects200ResponseInner) GetHasSnowflakeOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.HasSnowflake, true
}

// SetHasSnowflake sets field value
func (o *ListDeletedProjects200ResponseInner) SetHasSnowflake(v bool) {
	o.HasSnowflake = v
}

// GetHasSynapse returns the HasSynapse field value
func (o *ListDeletedProjects200ResponseInner) GetHasSynapse() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.HasSynapse
}

// GetHasSynapseOk returns a tuple with the HasSynapse field value
// and a boolean to check if the value has been set.
func (o *ListDeletedProjects200ResponseInner) GetHasSynapseOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.HasSynapse, true
}

// SetHasSynapse sets field value
func (o *ListDeletedProjects200ResponseInner) SetHasSynapse(v bool) {
	o.HasSynapse = v
}

// GetHasTeradata returns the HasTeradata field value
func (o *ListDeletedProjects200ResponseInner) GetHasTeradata() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.HasTeradata
}

// GetHasTeradataOk returns a tuple with the HasTeradata field value
// and a boolean to check if the value has been set.
func (o *ListDeletedProjects200ResponseInner) GetHasTeradataOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.HasTeradata, true
}

// SetHasTeradata sets field value
func (o *ListDeletedProjects200ResponseInner) SetHasTeradata(v bool) {
	o.HasTeradata = v
}

// GetHasExasol returns the HasExasol field value
func (o *ListDeletedProjects200ResponseInner) GetHasExasol() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.HasExasol
}

// GetHasExasolOk returns a tuple with the HasExasol field value
// and a boolean to check if the value has been set.
func (o *ListDeletedProjects200ResponseInner) GetHasExasolOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.HasExasol, true
}

// SetHasExasol sets field value
func (o *ListDeletedProjects200ResponseInner) SetHasExasol(v bool) {
	o.HasExasol = v
}

// GetDefaultBackend returns the DefaultBackend field value
func (o *ListDeletedProjects200ResponseInner) GetDefaultBackend() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DefaultBackend
}

// GetDefaultBackendOk returns a tuple with the DefaultBackend field value
// and a boolean to check if the value has been set.
func (o *ListDeletedProjects200ResponseInner) GetDefaultBackendOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DefaultBackend, true
}

// SetDefaultBackend sets field value
func (o *ListDeletedProjects200ResponseInner) SetDefaultBackend(v string) {
	o.DefaultBackend = v
}

// GetHasTryModeOn returns the HasTryModeOn field value
func (o *ListDeletedProjects200ResponseInner) GetHasTryModeOn() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.HasTryModeOn
}

// GetHasTryModeOnOk returns a tuple with the HasTryModeOn field value
// and a boolean to check if the value has been set.
func (o *ListDeletedProjects200ResponseInner) GetHasTryModeOnOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.HasTryModeOn, true
}

// SetHasTryModeOn sets field value
func (o *ListDeletedProjects200ResponseInner) SetHasTryModeOn(v string) {
	o.HasTryModeOn = v
}

// GetLimits returns the Limits field value
func (o *ListDeletedProjects200ResponseInner) GetLimits() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.Limits
}

// GetLimitsOk returns a tuple with the Limits field value
// and a boolean to check if the value has been set.
func (o *ListDeletedProjects200ResponseInner) GetLimitsOk() (map[string]interface{}, bool) {
	if o == nil {
		return map[string]interface{}{}, false
	}
	return o.Limits, true
}

// SetLimits sets field value
func (o *ListDeletedProjects200ResponseInner) SetLimits(v map[string]interface{}) {
	o.Limits = v
}

// GetMetrics returns the Metrics field value
func (o *ListDeletedProjects200ResponseInner) GetMetrics() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.Metrics
}

// GetMetricsOk returns a tuple with the Metrics field value
// and a boolean to check if the value has been set.
func (o *ListDeletedProjects200ResponseInner) GetMetricsOk() (map[string]interface{}, bool) {
	if o == nil {
		return map[string]interface{}{}, false
	}
	return o.Metrics, true
}

// SetMetrics sets field value
func (o *ListDeletedProjects200ResponseInner) SetMetrics(v map[string]interface{}) {
	o.Metrics = v
}

// GetIsDisabled returns the IsDisabled field value
func (o *ListDeletedProjects200ResponseInner) GetIsDisabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsDisabled
}

// GetIsDisabledOk returns a tuple with the IsDisabled field value
// and a boolean to check if the value has been set.
func (o *ListDeletedProjects200ResponseInner) GetIsDisabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsDisabled, true
}

// SetIsDisabled sets field value
func (o *ListDeletedProjects200ResponseInner) SetIsDisabled(v bool) {
	o.IsDisabled = v
}

// GetBilledMonthlyPrice returns the BilledMonthlyPrice field value
// If the value is explicit nil, the zero value for interface{} will be returned
func (o *ListDeletedProjects200ResponseInner) GetBilledMonthlyPrice() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}

	return o.BilledMonthlyPrice
}

// GetBilledMonthlyPriceOk returns a tuple with the BilledMonthlyPrice field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ListDeletedProjects200ResponseInner) GetBilledMonthlyPriceOk() (*interface{}, bool) {
	if o == nil || IsNil(o.BilledMonthlyPrice) {
		return nil, false
	}
	return &o.BilledMonthlyPrice, true
}

// SetBilledMonthlyPrice sets field value
func (o *ListDeletedProjects200ResponseInner) SetBilledMonthlyPrice(v interface{}) {
	o.BilledMonthlyPrice = v
}

// GetDataRetentionTimeInDays returns the DataRetentionTimeInDays field value
func (o *ListDeletedProjects200ResponseInner) GetDataRetentionTimeInDays() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.DataRetentionTimeInDays
}

// GetDataRetentionTimeInDaysOk returns a tuple with the DataRetentionTimeInDays field value
// and a boolean to check if the value has been set.
func (o *ListDeletedProjects200ResponseInner) GetDataRetentionTimeInDaysOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DataRetentionTimeInDays, true
}

// SetDataRetentionTimeInDays sets field value
func (o *ListDeletedProjects200ResponseInner) SetDataRetentionTimeInDays(v float32) {
	o.DataRetentionTimeInDays = v
}

// GetIsPurged returns the IsPurged field value
func (o *ListDeletedProjects200ResponseInner) GetIsPurged() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsPurged
}

// GetIsPurgedOk returns a tuple with the IsPurged field value
// and a boolean to check if the value has been set.
func (o *ListDeletedProjects200ResponseInner) GetIsPurgedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsPurged, true
}

// SetIsPurged sets field value
func (o *ListDeletedProjects200ResponseInner) SetIsPurged(v bool) {
	o.IsPurged = v
}

// GetIsDeleted returns the IsDeleted field value
func (o *ListDeletedProjects200ResponseInner) GetIsDeleted() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsDeleted
}

// GetIsDeletedOk returns a tuple with the IsDeleted field value
// and a boolean to check if the value has been set.
func (o *ListDeletedProjects200ResponseInner) GetIsDeletedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsDeleted, true
}

// SetIsDeleted sets field value
func (o *ListDeletedProjects200ResponseInner) SetIsDeleted(v bool) {
	o.IsDeleted = v
}

// GetDeletedTime returns the DeletedTime field value
func (o *ListDeletedProjects200ResponseInner) GetDeletedTime() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DeletedTime
}

// GetDeletedTimeOk returns a tuple with the DeletedTime field value
// and a boolean to check if the value has been set.
func (o *ListDeletedProjects200ResponseInner) GetDeletedTimeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DeletedTime, true
}

// SetDeletedTime sets field value
func (o *ListDeletedProjects200ResponseInner) SetDeletedTime(v string) {
	o.DeletedTime = v
}

// GetPurgedTime returns the PurgedTime field value
// If the value is explicit nil, the zero value for interface{} will be returned
func (o *ListDeletedProjects200ResponseInner) GetPurgedTime() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}

	return o.PurgedTime
}

// GetPurgedTimeOk returns a tuple with the PurgedTime field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ListDeletedProjects200ResponseInner) GetPurgedTimeOk() (*interface{}, bool) {
	if o == nil || IsNil(o.PurgedTime) {
		return nil, false
	}
	return &o.PurgedTime, true
}

// SetPurgedTime sets field value
func (o *ListDeletedProjects200ResponseInner) SetPurgedTime(v interface{}) {
	o.PurgedTime = v
}

// GetOrganization returns the Organization field value
func (o *ListDeletedProjects200ResponseInner) GetOrganization() ListDeletedProjects200ResponseInnerOrganization {
	if o == nil {
		var ret ListDeletedProjects200ResponseInnerOrganization
		return ret
	}

	return o.Organization
}

// GetOrganizationOk returns a tuple with the Organization field value
// and a boolean to check if the value has been set.
func (o *ListDeletedProjects200ResponseInner) GetOrganizationOk() (*ListDeletedProjects200ResponseInnerOrganization, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Organization, true
}

// SetOrganization sets field value
func (o *ListDeletedProjects200ResponseInner) SetOrganization(v ListDeletedProjects200ResponseInnerOrganization) {
	o.Organization = v
}

func (o ListDeletedProjects200ResponseInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListDeletedProjects200ResponseInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["name"] = o.Name
	toSerialize["type"] = o.Type
	toSerialize["region"] = o.Region
	toSerialize["created"] = o.Created
	if o.Expires != nil {
		toSerialize["expires"] = o.Expires
	}
	toSerialize["features"] = o.Features
	toSerialize["dataSizeBytes"] = o.DataSizeBytes
	toSerialize["rowsCount"] = o.RowsCount
	toSerialize["hasMysql"] = o.HasMysql
	toSerialize["hasRedshift"] = o.HasRedshift
	toSerialize["hasSnowflake"] = o.HasSnowflake
	toSerialize["hasSynapse"] = o.HasSynapse
	toSerialize["hasTeradata"] = o.HasTeradata
	toSerialize["hasExasol"] = o.HasExasol
	toSerialize["defaultBackend"] = o.DefaultBackend
	toSerialize["hasTryModeOn"] = o.HasTryModeOn
	toSerialize["limits"] = o.Limits
	toSerialize["metrics"] = o.Metrics
	toSerialize["isDisabled"] = o.IsDisabled
	if o.BilledMonthlyPrice != nil {
		toSerialize["billedMonthlyPrice"] = o.BilledMonthlyPrice
	}
	toSerialize["dataRetentionTimeInDays"] = o.DataRetentionTimeInDays
	toSerialize["isPurged"] = o.IsPurged
	toSerialize["isDeleted"] = o.IsDeleted
	toSerialize["deletedTime"] = o.DeletedTime
	if o.PurgedTime != nil {
		toSerialize["purgedTime"] = o.PurgedTime
	}
	toSerialize["organization"] = o.Organization
	return toSerialize, nil
}

func (o *ListDeletedProjects200ResponseInner) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"name",
		"type",
		"region",
		"created",
		"expires",
		"features",
		"dataSizeBytes",
		"rowsCount",
		"hasMysql",
		"hasRedshift",
		"hasSnowflake",
		"hasSynapse",
		"hasTeradata",
		"hasExasol",
		"defaultBackend",
		"hasTryModeOn",
		"limits",
		"metrics",
		"isDisabled",
		"billedMonthlyPrice",
		"dataRetentionTimeInDays",
		"isPurged",
		"isDeleted",
		"deletedTime",
		"purgedTime",
		"organization",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varListDeletedProjects200ResponseInner := _ListDeletedProjects200ResponseInner{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varListDeletedProjects200ResponseInner)

	if err != nil {
		return err
	}

	*o = ListDeletedProjects200ResponseInner(varListDeletedProjects200ResponseInner)

	return err
}

type NullableListDeletedProjects200ResponseInner struct {
	value *ListDeletedProjects200ResponseInner
	isSet bool
}

func (v NullableListDeletedProjects200ResponseInner) Get() *ListDeletedProjects200ResponseInner {
	return v.value
}

func (v *NullableListDeletedProjects200ResponseInner) Set(val *ListDeletedProjects200ResponseInner) {
	v.value = val
	v.isSet = true
}

func (v NullableListDeletedProjects200ResponseInner) IsSet() bool {
	return v.isSet
}

func (v *NullableListDeletedProjects200ResponseInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListDeletedProjects200ResponseInner(val *ListDeletedProjects200ResponseInner) *NullableListDeletedProjects200ResponseInner {
	return &NullableListDeletedProjects200ResponseInner{value: val, isSet: true}
}

func (v NullableListDeletedProjects200ResponseInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListDeletedProjects200ResponseInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


