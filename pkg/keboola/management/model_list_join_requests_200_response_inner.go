/*
Manage API

The Keboola Connection Management API covers all tasks required for managing projects, as well as some super admin features for controlling and monitoring Keboola Connection.  ## Projects Management  * Create, modify and delete maintainers, organizations and projects  * Move projects between organizations  * Define project limits  * Provision Redshift and other Storage backends  * Access project management activity log  ## Projects Monitoring  * Monitoring of projects over organizations and maintainers  ## Super User Control and Monitoring  * UI release and deployment  * Components management  * Storage and Syrup jobs monitoring (will be provided by Syrup utilizing new tokens for authorization)  * Final project delete  * Workers start/shutdown, etc.  ## Authentication  The API supports authentication by a personal access token, which can be retrieved in [Account Settings](https://connection.keboola.com/admin/account/change-password) in Keboola Connection. An access token is tied to an administrator and its permissions are derived from their permissions. When the administrator is disabled or deleted, all their tokens become invalid too.  ## Token Types  There are the following types of tokens:  | Name | Tied to User | Token string is available only on create | Description  | | ------------- | ------------- | ------------------- | ----- | | user | Yes | Yes |Full access to maintainers, organizations and projects. Access is limited only to resources which are available for the token user.| | super | No | Yes | KBC management. Limited scopes can be specified `super_ui_deploy`, `super_monitoring`, ...  |

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package management

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ListJoinRequests200ResponseInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListJoinRequests200ResponseInner{}

// ListJoinRequests200ResponseInner struct for ListJoinRequests200ResponseInner
type ListJoinRequests200ResponseInner struct {
	Id float32 `json:"id"`
	Created string `json:"created"`
	Expires NullableString `json:"expires"`
	Reason string `json:"reason"`
	User ListMaintainersInvitations200ResponseInnerUser `json:"user"`
}

type _ListJoinRequests200ResponseInner ListJoinRequests200ResponseInner

// NewListJoinRequests200ResponseInner instantiates a new ListJoinRequests200ResponseInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListJoinRequests200ResponseInner(id float32, created string, expires NullableString, reason string, user ListMaintainersInvitations200ResponseInnerUser) *ListJoinRequests200ResponseInner {
	this := ListJoinRequests200ResponseInner{}
	this.Id = id
	this.Created = created
	this.Expires = expires
	this.Reason = reason
	this.User = user
	return &this
}

// NewListJoinRequests200ResponseInnerWithDefaults instantiates a new ListJoinRequests200ResponseInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListJoinRequests200ResponseInnerWithDefaults() *ListJoinRequests200ResponseInner {
	this := ListJoinRequests200ResponseInner{}
	return &this
}

// GetId returns the Id field value
func (o *ListJoinRequests200ResponseInner) GetId() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ListJoinRequests200ResponseInner) GetIdOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ListJoinRequests200ResponseInner) SetId(v float32) {
	o.Id = v
}

// GetCreated returns the Created field value
func (o *ListJoinRequests200ResponseInner) GetCreated() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Created
}

// GetCreatedOk returns a tuple with the Created field value
// and a boolean to check if the value has been set.
func (o *ListJoinRequests200ResponseInner) GetCreatedOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Created, true
}

// SetCreated sets field value
func (o *ListJoinRequests200ResponseInner) SetCreated(v string) {
	o.Created = v
}

// GetExpires returns the Expires field value
// If the value is explicit nil, the zero value for string will be returned
func (o *ListJoinRequests200ResponseInner) GetExpires() string {
	if o == nil || o.Expires.Get() == nil {
		var ret string
		return ret
	}

	return *o.Expires.Get()
}

// GetExpiresOk returns a tuple with the Expires field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ListJoinRequests200ResponseInner) GetExpiresOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Expires.Get(), o.Expires.IsSet()
}

// SetExpires sets field value
func (o *ListJoinRequests200ResponseInner) SetExpires(v string) {
	o.Expires.Set(&v)
}

// GetReason returns the Reason field value
func (o *ListJoinRequests200ResponseInner) GetReason() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Reason
}

// GetReasonOk returns a tuple with the Reason field value
// and a boolean to check if the value has been set.
func (o *ListJoinRequests200ResponseInner) GetReasonOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Reason, true
}

// SetReason sets field value
func (o *ListJoinRequests200ResponseInner) SetReason(v string) {
	o.Reason = v
}

// GetUser returns the User field value
func (o *ListJoinRequests200ResponseInner) GetUser() ListMaintainersInvitations200ResponseInnerUser {
	if o == nil {
		var ret ListMaintainersInvitations200ResponseInnerUser
		return ret
	}

	return o.User
}

// GetUserOk returns a tuple with the User field value
// and a boolean to check if the value has been set.
func (o *ListJoinRequests200ResponseInner) GetUserOk() (*ListMaintainersInvitations200ResponseInnerUser, bool) {
	if o == nil {
		return nil, false
	}
	return &o.User, true
}

// SetUser sets field value
func (o *ListJoinRequests200ResponseInner) SetUser(v ListMaintainersInvitations200ResponseInnerUser) {
	o.User = v
}

func (o ListJoinRequests200ResponseInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListJoinRequests200ResponseInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["created"] = o.Created
	toSerialize["expires"] = o.Expires.Get()
	toSerialize["reason"] = o.Reason
	toSerialize["user"] = o.User
	return toSerialize, nil
}

func (o *ListJoinRequests200ResponseInner) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"created",
		"expires",
		"reason",
		"user",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varListJoinRequests200ResponseInner := _ListJoinRequests200ResponseInner{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varListJoinRequests200ResponseInner)

	if err != nil {
		return err
	}

	*o = ListJoinRequests200ResponseInner(varListJoinRequests200ResponseInner)

	return err
}

type NullableListJoinRequests200ResponseInner struct {
	value *ListJoinRequests200ResponseInner
	isSet bool
}

func (v NullableListJoinRequests200ResponseInner) Get() *ListJoinRequests200ResponseInner {
	return v.value
}

func (v *NullableListJoinRequests200ResponseInner) Set(val *ListJoinRequests200ResponseInner) {
	v.value = val
	v.isSet = true
}

func (v NullableListJoinRequests200ResponseInner) IsSet() bool {
	return v.isSet
}

func (v *NullableListJoinRequests200ResponseInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListJoinRequests200ResponseInner(val *ListJoinRequests200ResponseInner) *NullableListJoinRequests200ResponseInner {
	return &NullableListJoinRequests200ResponseInner{value: val, isSet: true}
}

func (v NullableListJoinRequests200ResponseInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListJoinRequests200ResponseInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


